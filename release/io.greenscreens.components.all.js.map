{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/base/GSDate.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSDropdown.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSPopup.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            return globalThis.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\t\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n \t* Generic function to change elment node attribute\r\n \t* \r\n \t* @param {HTMLElement} el Target to receive attribute value\r\n \t* @param {string} name Attribite name\r\n \t* @param {boolean} val Attribute value\r\n \t*/\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\t\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr =  GSUtil.isString(type);\r\n\t\t\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\t\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n        for (let v of it) {\r\n\t\t\tif (!v) break;\r\n            if (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, qry);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * Add custom form processing to support forms in modal dialogs\r\n  * <form is=\"gs-ext-form\">\r\n  * @class\r\n  * @extends {HTMLFormElement}\r\n  */\r\n export default class GSFormExt extends HTMLFormElement {\r\n \r\n     static #actions = ['ok', 'reset', 'submit'];\r\n \r\n     static {\r\n         customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n         Object.seal(GSFormExt);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n     }\r\n \r\n     static #onMonitorFilter(el) {\r\n         return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n     }\r\n \r\n     static #onMonitorResult(el) {\r\n         GSFormExt.#attachEvents(el);\r\n     }\r\n \r\n     static #onMonitorRemove(el) {\r\n         GSEvent.deattachListeners(el);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n     }\r\n \r\n     static get observedAttributes() {\r\n         return ['mask'];\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSFormExt.#attachEvents(me);\r\n         //GSComponents.store(me);\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         //GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     static #attachEvents(me) {\r\n         GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n         GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n         GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n     }\r\n \r\n     /**\r\n      * \r\n      * @param {*} e \r\n      * @param {*} own \r\n      */\r\n     static #onAction(e) {\r\n \r\n         const el = e.composedPath().shift();\r\n         const action = el?.dataset.action || e.detail.action || el?.type;\r\n         if (!GSFormExt.#actions.includes(action)) return;\r\n \r\n         GSEvent.prevent(e);\r\n         const me = this;\r\n \r\n         switch (action) {\r\n             case 'reset':\r\n                 me.reset();\r\n                 break;\r\n             case 'ok':\r\n             case 'submit':\r\n                 GSFormExt.#onSubmit(e, me);\r\n         }\r\n \r\n     }\r\n \r\n     /**\r\n      * Trigger form submit only if form data is valid\r\n      * @param {*} e \r\n      */\r\n     static #onSubmit(e, own) {\r\n         GSEvent.prevent(e);\r\n         const me = own || this;\r\n         const isValid = me.checkValidity() && me.isValid;\r\n         if (!isValid) return me.reportValidity();\r\n         const obj = GSDOM.toObject(me);\r\n         const type = isValid ? 'submit' : 'invalid';\r\n         const data = { type: type, data: obj, source: e, valid: isValid };\r\n         GSEvent.send(me, 'form', data, true, true);\r\n     }\r\n \r\n     get isValid() {\r\n         return GSDOM.queryAll(this,'input,select,textarea')\r\n                     .map(el => el.checkValidity())\r\n                     .filter(v => v === false).length === 0;\r\n     }\r\n \r\n     get buttonOK() {\r\n         return GSFormExt.#buttonOK(this);\r\n     }\r\n \r\n     get buttonCancel() {\r\n         return GSFormExt.#buttonCancel(this);\r\n     }\r\n \r\n     get buttonReset() {\r\n         return GSFormExt.#buttonReset(this);\r\n     }\r\n \r\n     static #buttonOK(own) {\r\n         return GSDOM.query(own, 'button[type=\"submit\"]');\r\n     }\r\n \r\n     static #buttonCancel(own) {\r\n         return GSFormExt.#find(own, 'cancel');\r\n     }\r\n \r\n     static #buttonReset(own) {\r\n         return GSFormExt.#find(own, 'reset');\r\n     }\r\n \r\n     static #find(own, name = '') {\r\n         return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        \r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos-1] = me.mask[pos-1];\r\n                pos = pos1-1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n        \r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n        \r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n        \r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                } \r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos+1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos+1, pos+1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = me.computedStyleMap().get('text-transform').value;\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            \r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart( 2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart( 2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);        \r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ?  tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date =  new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n    \r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\t\t\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el), \r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSEvent from \"../base/GSEvent.mjs\";\r\n import GSLoader from \"../base/GSLoader.mjs\";\r\n import GSUtil from \"../base/GSUtil.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n import GSDOM from \"../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n  *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n  * </gs-accordion>\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSAccordion extends GSElement {\r\n \r\n   static {\r\n     customElements.define('gs-accordion', GSAccordion);\r\n     Object.seal(GSAccordion);\r\n   }\r\n \r\n   static get observedAttributes() {\r\n     const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n     return GSElement.observeAttributes(attrs);\r\n   }\r\n \r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n \r\n     const me = this;\r\n \r\n     if (name === 'data') return me.load(newValue);\r\n \r\n \r\n     let css = null;\r\n \r\n     switch (name) {\r\n       case 'css':\r\n         css = '.accordion';\r\n         break;\r\n       case 'css-item':\r\n         css = '.accordion-item';\r\n         break;\r\n       case 'css-head':\r\n         css = '.accordion-button';\r\n         break;\r\n       case 'css-body':\r\n         css = '.accordion-collapse';\r\n         break;\r\n     }\r\n \r\n     if (css) {\r\n       me.queryAll(css).forEach(el => {\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n       });\r\n     }\r\n   }\r\n \r\n   async getTemplate(val = '') {\r\n     const me = this;\r\n     const id = GSID.id;\r\n     const html = await me.#render(id);\r\n     return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n   }\r\n \r\n   async #render(id) {\r\n     const me = this;\r\n     const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n     const html = await Promise.all(list);\r\n     return html.join('');\r\n   }\r\n \r\n   get css() {\r\n     return GSAttr.get(this, 'css', '');\r\n   }\r\n \r\n   set css(val = '') {\r\n     GSAttr.set(this, 'css', val);\r\n   }\r\n \r\n   get cssItem() {\r\n     return GSAttr.get(this, 'css-item', '');\r\n   }\r\n \r\n   set cssItem(val = '') {\r\n     GSAttr.set(this, 'css-item', val);\r\n   }\r\n \r\n   get cssHead() {\r\n     return GSAttr.get(this, 'css-head');\r\n   }\r\n \r\n   set cssHead(val = '') {\r\n     return GSAttr.set(this, 'css-head', val);\r\n   }\r\n \r\n   get cssBody() {\r\n     return GSAttr.get(this, 'css-body');\r\n   }\r\n \r\n   set cssBody(val = '') {\r\n     return GSAttr.set(this, 'css-body', val);\r\n   }\r\n \r\n   async #html(id, el) {\r\n     const me = this;\r\n     const itemid = GSID.id;\r\n     const tpl = GSItem.getBody(el);\r\n     const title = me.#getTitle(el);\r\n     const message = me.#getMessage(el);\r\n     const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n     const isVisible = me.#isVisible(el);\r\n     return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n   }\r\n \r\n   #getTitle(el) {\r\n     return GSAttr.get(el, 'title');\r\n   }\r\n \r\n   #getMessage(el) {\r\n     return GSAttr.get(el, 'message');\r\n   }\r\n \r\n   #isVisible(el) {\r\n     return GSAttr.getAsBool(el, 'visible', false);\r\n   }\r\n \r\n   #getAutoclose(el) {\r\n     return GSAttr.getAsBool(el, 'autoclose', true);\r\n   }\r\n \r\n   /**\r\n    * Load data from various sources\r\n    * \r\n    * @async\r\n    * @param {JSON|func|url} val \r\n    * @returns {Promise}\r\n    */\r\n   async load(val = '') {\r\n     const data = await GSLoader.loadData(val);\r\n     if (!GSUtil.isJsonType(data)) return;\r\n     const me = this;\r\n     const src = GSItem.generateItem(data);\r\n     GSDOM.setHTML(me, src);\r\n     GSEvent.deattachListeners(me);\r\n     me.connectedCallback();\r\n     return data;\r\n   }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }  \r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, me.visible, 'show');\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n            me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });        \r\n        \r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, false, oldValue);\r\n      GSDOM.toggleClass(me.#button, true, newValue);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const parent = GSComponents.getOwner(me); // me.parentElement\r\n         const style = window.getComputedStyle(parent);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n        \r\n        const icon = GSItem.getIcon(el);        \r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form) );\r\n      \r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit'});\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs =GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, !me.visible, 'invisible');\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(()=>{\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // GSDOM.setHTML(me, '');\r\n           // me.firstChild?.remove();\r\n           Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [ GSAttr.get(el, 'value'), GSAttr.get(el, 'map') ])\r\n        return { \r\n            name: me.name, \r\n            title: me.title, \r\n            width: me.width, \r\n            sortable: me.sortable, \r\n            idx: me.index, \r\n            type: me.type, \r\n            format: me.format, \r\n            css : me.css,\r\n            map :mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            rows.push(me.#emptyRow(headers.length));\r\n        }\r\n        \r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\">${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch(type) {\r\n            case 'timestamp' : \r\n            case 'date' : \r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string' : \r\n            case 'boolean' : \r\n            case 'number' : \r\n                break;\r\n            case 'currency' : \r\n                const opt = { style: 'currency', currency: hdr.currency};\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n        \r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data:data, evt : evt}, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data : me.#selected, evt : data.evt});\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","hasOwn","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","data","blob","Blob","createObjectURL","createElement","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","filter","GSDOM","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","slot","isText","ownClazz","it","inheritance","pel","tagName","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","setHTML","entries","GSComboExt","HTMLSelectElement","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","disconnect","GSFormExt","HTMLFormElement","registerFilter","deattachListeners","attach","action","reset","reportValidity","toObject","source","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","placeholder","mask","strict","optimized","chars","masks","cnt","pattern","maxLength","isMatch","show","hide","isInList","clean","p","dataGroup","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","pos","setSelectionRange","canceled","substring","vld","lastIndex","c","toLocaleLowerCase","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","toggleClass","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","allComps","allRoot","hidden","neg","objsH","SPEED","isComp","isBefore","itm","close","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","evt","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","Math","ceil","kk","W","getTime","setHours","week1","round","WW","X","floor","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","title","message","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","parseInt","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","focusable","focus","normal","isOk","forms","form","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","comp","GSProgress","bar","percentage","label","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","dropEffect","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","GSColumn","clssort","sortable","renderFilter","cssFilter","auto","cssField","isCombo","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","noDataText","innerText","cols","hdr","fmt","Number","Boolean","isAppend","row","isSelected","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","getRoot","listID","getElementById","GSPagination","firstlast","nextprev","previous","CSS_ITEM","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}