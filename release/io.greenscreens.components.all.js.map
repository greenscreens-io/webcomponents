{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/base/GSDate.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSDropdown.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSPopup.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            return globalThis.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\t\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n \t* Generic function to change elment node attribute\r\n \t* \r\n \t* @param {HTMLElement} el Target to receive attribute value\r\n \t* @param {string} name Attribite name\r\n \t* @param {boolean} val Attribute value\r\n \t*/\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\t\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr =  GSUtil.isString(type);\r\n\t\t\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\t\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n        for (let v of it) {\r\n\t\t\tif (!v) break;\r\n            if (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, qry);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * Add custom form processing to support forms in modal dialogs\r\n  * <form is=\"gs-ext-form\">\r\n  * @class\r\n  * @extends {HTMLFormElement}\r\n  */\r\n export default class GSFormExt extends HTMLFormElement {\r\n \r\n     static #actions = ['ok', 'reset', 'submit'];\r\n \r\n     static {\r\n         customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n         Object.seal(GSFormExt);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n     }\r\n \r\n     static #onMonitorFilter(el) {\r\n         return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n     }\r\n \r\n     static #onMonitorResult(el) {\r\n         GSFormExt.#attachEvents(el);\r\n     }\r\n \r\n     static #onMonitorRemove(el) {\r\n         GSEvent.deattachListeners(el);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n     }\r\n \r\n     static get observedAttributes() {\r\n         return ['mask'];\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSFormExt.#attachEvents(me);\r\n         //GSComponents.store(me);\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         //GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     static #attachEvents(me) {\r\n         GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n         GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n         GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n     }\r\n \r\n     /**\r\n      * \r\n      * @param {*} e \r\n      * @param {*} own \r\n      */\r\n     static #onAction(e) {\r\n \r\n         const el = e.composedPath().shift();\r\n         const action = el?.dataset.action || e.detail.action || el?.type;\r\n         if (!GSFormExt.#actions.includes(action)) return;\r\n \r\n         GSEvent.prevent(e);\r\n         const me = this;\r\n \r\n         switch (action) {\r\n             case 'reset':\r\n                 me.reset();\r\n                 break;\r\n             case 'ok':\r\n             case 'submit':\r\n                 GSFormExt.#onSubmit(e, me);\r\n         }\r\n \r\n     }\r\n \r\n     /**\r\n      * Trigger form submit only if form data is valid\r\n      * @param {*} e \r\n      */\r\n     static #onSubmit(e, own) {\r\n         GSEvent.prevent(e);\r\n         const me = own || this;\r\n         const isValid = me.checkValidity() && me.isValid;\r\n         if (!isValid) return me.reportValidity();\r\n         const obj = GSDOM.toObject(me);\r\n         const type = isValid ? 'submit' : 'invalid';\r\n         const data = { type: type, data: obj, source: e, valid: isValid };\r\n         GSEvent.send(me, 'form', data, true, true);\r\n     }\r\n \r\n     get isValid() {\r\n         return GSDOM.queryAll(this,'input,select,textarea')\r\n                     .map(el => el.checkValidity())\r\n                     .filter(v => v === false).length === 0;\r\n     }\r\n \r\n     get buttonOK() {\r\n         return GSFormExt.#buttonOK(this);\r\n     }\r\n \r\n     get buttonCancel() {\r\n         return GSFormExt.#buttonCancel(this);\r\n     }\r\n \r\n     get buttonReset() {\r\n         return GSFormExt.#buttonReset(this);\r\n     }\r\n \r\n     static #buttonOK(own) {\r\n         return GSDOM.query(own, 'button[type=\"submit\"]');\r\n     }\r\n \r\n     static #buttonCancel(own) {\r\n         return GSFormExt.#find(own, 'cancel');\r\n     }\r\n \r\n     static #buttonReset(own) {\r\n         return GSFormExt.#find(own, 'reset');\r\n     }\r\n \r\n     static #find(own, name = '') {\r\n         return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]}',\r\n        9: '[0-9]', '#': '[0-9a-fA-F]',\r\n        x: '[a-z]', X: '[A-Z]',\r\n        _: '[0-9a-zA-Z]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.includes(v)) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            \r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart( 2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart( 2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);        \r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ?  tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date =  new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n    \r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\t\t\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el), \r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSEvent from \"../base/GSEvent.mjs\";\r\n import GSLoader from \"../base/GSLoader.mjs\";\r\n import GSUtil from \"../base/GSUtil.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n import GSDOM from \"../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n  *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n  * </gs-accordion>\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSAccordion extends GSElement {\r\n \r\n   static {\r\n     customElements.define('gs-accordion', GSAccordion);\r\n     Object.seal(GSAccordion);\r\n   }\r\n \r\n   static get observedAttributes() {\r\n     const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n     return GSElement.observeAttributes(attrs);\r\n   }\r\n \r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n \r\n     const me = this;\r\n \r\n     if (name === 'data') return me.load(newValue);\r\n \r\n \r\n     let css = null;\r\n \r\n     switch (name) {\r\n       case 'css':\r\n         css = '.accordion';\r\n         break;\r\n       case 'css-item':\r\n         css = '.accordion-item';\r\n         break;\r\n       case 'css-head':\r\n         css = '.accordion-button';\r\n         break;\r\n       case 'css-body':\r\n         css = '.accordion-collapse';\r\n         break;\r\n     }\r\n \r\n     if (css) {\r\n       me.queryAll(css).forEach(el => {\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n       });\r\n     }\r\n   }\r\n \r\n   async getTemplate(val = '') {\r\n     const me = this;\r\n     const id = GSID.id;\r\n     const html = await me.#render(id);\r\n     return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n   }\r\n \r\n   async #render(id) {\r\n     const me = this;\r\n     const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n     const html = await Promise.all(list);\r\n     return html.join('');\r\n   }\r\n \r\n   get css() {\r\n     return GSAttr.get(this, 'css', '');\r\n   }\r\n \r\n   set css(val = '') {\r\n     GSAttr.set(this, 'css', val);\r\n   }\r\n \r\n   get cssItem() {\r\n     return GSAttr.get(this, 'css-item', '');\r\n   }\r\n \r\n   set cssItem(val = '') {\r\n     GSAttr.set(this, 'css-item', val);\r\n   }\r\n \r\n   get cssHead() {\r\n     return GSAttr.get(this, 'css-head');\r\n   }\r\n \r\n   set cssHead(val = '') {\r\n     return GSAttr.set(this, 'css-head', val);\r\n   }\r\n \r\n   get cssBody() {\r\n     return GSAttr.get(this, 'css-body');\r\n   }\r\n \r\n   set cssBody(val = '') {\r\n     return GSAttr.set(this, 'css-body', val);\r\n   }\r\n \r\n   async #html(id, el) {\r\n     const me = this;\r\n     const itemid = GSID.id;\r\n     const tpl = GSItem.getBody(el);\r\n     const title = me.#getTitle(el);\r\n     const message = me.#getMessage(el);\r\n     const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n     const isVisible = me.#isVisible(el);\r\n     return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n   }\r\n \r\n   #getTitle(el) {\r\n     return GSAttr.get(el, 'title');\r\n   }\r\n \r\n   #getMessage(el) {\r\n     return GSAttr.get(el, 'message');\r\n   }\r\n \r\n   #isVisible(el) {\r\n     return GSAttr.getAsBool(el, 'visible', false);\r\n   }\r\n \r\n   #getAutoclose(el) {\r\n     return GSAttr.getAsBool(el, 'autoclose', true);\r\n   }\r\n \r\n   /**\r\n    * Load data from various sources\r\n    * \r\n    * @async\r\n    * @param {JSON|func|url} val \r\n    * @returns {Promise}\r\n    */\r\n   async load(val = '') {\r\n     const data = await GSLoader.loadData(val);\r\n     if (!GSUtil.isJsonType(data)) return;\r\n     const me = this;\r\n     const src = GSItem.generateItem(data);\r\n     GSDOM.setHTML(me, src);\r\n     GSEvent.deattachListeners(me);\r\n     me.connectedCallback();\r\n     return data;\r\n   }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }  \r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, me.visible, 'show');\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n            me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });        \r\n        \r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, false, oldValue);\r\n      GSDOM.toggleClass(me.#button, true, newValue);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const parent = GSComponents.getOwner(me); // me.parentElement\r\n         const style = window.getComputedStyle(parent);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n        \r\n        const icon = GSItem.getIcon(el);        \r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form) );\r\n      \r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit'});\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs =GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, !me.visible, 'invisible');\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(()=>{\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // GSDOM.setHTML(me, '');\r\n           // me.firstChild?.remove();\r\n           Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [ GSAttr.get(el, 'value'), GSAttr.get(el, 'map') ])\r\n        return { \r\n            name: me.name, \r\n            title: me.title, \r\n            width: me.width, \r\n            sortable: me.sortable, \r\n            idx: me.index, \r\n            type: me.type, \r\n            format: me.format, \r\n            css : me.css,\r\n            map :mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            rows.push(me.#emptyRow(headers.length));\r\n        }\r\n        \r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\">${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch(type) {\r\n            case 'timestamp' : \r\n            case 'date' : \r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string' : \r\n            case 'boolean' : \r\n            case 'number' : \r\n                break;\r\n            case 'currency' : \r\n                const opt = { style: 'currency', currency: hdr.currency};\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n        \r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data:data, evt : evt}, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data : me.#selected, evt : data.evt});\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","hasOwn","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","data","blob","Blob","createObjectURL","createElement","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","filter","GSDOM","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","slot","isText","ownClazz","it","inheritance","pel","tagName","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","setHTML","entries","GSComboExt","HTMLSelectElement","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","disconnect","GSFormExt","HTMLFormElement","registerFilter","deattachListeners","attach","action","reset","reportValidity","toObject","source","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","show","hide","isInList","clean","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","toggleClass","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","c","allComps","allRoot","hidden","pos","neg","objsH","SPEED","isComp","isBefore","itm","close","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","evt","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","MM","padStart","MMM","MMMM","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","Math","ceil","kk","W","getTime","setHours","week1","round","WW","floor","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","title","message","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","parseInt","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","focusable","focus","normal","isOk","forms","form","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","comp","GSProgress","bar","percentage","label","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","getData","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","GSColumn","clssort","sortable","renderFilter","cssFilter","auto","cssField","isCombo","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","noDataText","innerText","cols","hdr","fmt","Number","Boolean","isAppend","row","isSelected","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","getRoot","listID","getElementById","GSPagination","firstlast","nextprev","previous","CSS_ITEM","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}