{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/base/GSDate.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSDropdown.mjs","webpack:///./modules/components/GSFormGroup.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSPopup.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = me.computedStyleMap().get('text-transform').value;\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, 'show', me.visible);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, 'show', me.visible);\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n          me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#label}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               id=\"${me.name}\" name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.cellLabel}\">\r\n          <label class=\"${me.#cssLabel} ${me.cssLabel}\" for=\"${me.name}\">${me.label}</label>\r\n      </div>\r\n      `;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.icon.trim() ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\"></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   // TODO\r\n   get #isVertical() {\r\n      return false;\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', 'col-md-4 col-sm-4 col-xs2 text-md-end');\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      return GSAttr.get(this, 'cell-field', 'col-md-6 col-sm-6 col-xs1');\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', '');\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? 'font-monospace' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      return GSAttr.get(this, 'placement', 'right');\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', 'bi bi-info-circle-fill text-primary me-2 fs-5');\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const style = window.getComputedStyle(parent);\r\n        return style.display === 'flex' && style.flexGrow !== '0';\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #html(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#style(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#class(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #style(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #class(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.visible);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, 'show', me.visible);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.visible));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')])\r\n        return {\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","hasOwn","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","data","blob","Blob","createObjectURL","createElement","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","filter","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","slot","isText","ownClazz","it","inheritance","pel","tagName","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","entries","GSComboExt","HTMLSelectElement","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","disconnect","GSFormExt","HTMLFormElement","registerFilter","deattachListeners","attach","action","reset","reportValidity","source","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","placeholder","mask","strict","optimized","chars","masks","cnt","pattern","maxLength","isMatch","isInList","clean","p","dataGroup","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","pos","setSelectionRange","canceled","title","substring","vld","lastIndex","c","toLocaleLowerCase","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","allComps","allRoot","hidden","neg","objsH","isComp","isBefore","itm","close","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","hide","show","evt","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","Math","ceil","kk","W","getTime","setHours","week1","round","WW","X","floor","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","message","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","parseInt","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSFormGroup","tagList","cssField","description","cellLabel","cssLabel","label","cellField","multiple","readonly","accept","autocapitalize","autocomplete","max","min","maxlength","minlength","step","layout","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","focusable","focus","normal","isOk","forms","form","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","comp","GSProgress","bar","percentage","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssInput","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","dropEffect","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","clssort","sortable","cspan","colspan","renderFilter","cssFilter","auto","isCombo","direction","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","noDataText","reduce","innerText","cols","hdr","fmt","Number","isAppend","row","isSelected","GSTable","store","dataID","contextMenu","selected","isFilterable","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","CSS_ITEM","GSNotification","BOTTOM_END","connectCallback","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}