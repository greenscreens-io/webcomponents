{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/components/ext/GSComboExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSDropdown.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSPopup.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            return globalThis.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\t static register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, {extends : ext?.toLowerCase()});\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\t\t\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\treturn el?.tagName?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, qry);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, document.body, 'action', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e, own) {\r\n        const me = own || this;\r\n        const sts = GSFormExt.#validateCaller(e, me, 'modal', 'GS-MODAL');\r\n        if (!sts) return;\r\n\r\n        if (e.detail.ok) return GSFormExt.#onSubmit(e, me);\r\n\r\n        const evt = e.detail.evt;\r\n        const isReset = evt && evt.target.className.indexOf('reset') > 0;\r\n        if (isReset) me.reset();\r\n    }\r\n\r\n    static #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == e.target || e.composedPath().includes(parent);\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        if (e.detail) e.detail.data = data;\r\n        GSEvent.send(me, 'form', data, true, true);\r\n        return me.reportValidity();\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this,'input,select,textarea')\r\n                    .map(el => el.checkValidity())\r\n                    .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]',\r\n        9: '[0-9]', '#': '[0-9]',\r\n        x: '[a-zA-Z]', X: '[a-zA-Z]',\r\n        _: '[0-9]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.includes(v)) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            \r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.format);\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        const o = Date.parse(GSAttr.get(this, 'value'));\r\n        return o || new Date();\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', 'default');\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.format);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\t\t\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el), \r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSEvent from \"../base/GSEvent.mjs\";\r\n import GSLoader from \"../base/GSLoader.mjs\";\r\n import GSUtil from \"../base/GSUtil.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n import GSDOM from \"../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n  *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n  * </gs-accordion>\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSAccordion extends GSElement {\r\n \r\n   static {\r\n     customElements.define('gs-accordion', GSAccordion);\r\n     Object.seal(GSAccordion);\r\n   }\r\n \r\n   static get observedAttributes() {\r\n     const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n     return GSElement.observeAttributes(attrs);\r\n   }\r\n \r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n \r\n     const me = this;\r\n \r\n     if (name === 'data') return me.load(newValue);\r\n \r\n \r\n     let css = null;\r\n \r\n     switch (name) {\r\n       case 'css':\r\n         css = '.accordion';\r\n         break;\r\n       case 'css-item':\r\n         css = '.accordion-item';\r\n         break;\r\n       case 'css-head':\r\n         css = '.accordion-button';\r\n         break;\r\n       case 'css-body':\r\n         css = '.accordion-collapse';\r\n         break;\r\n     }\r\n \r\n     if (css) {\r\n       me.queryAll(css).forEach(el => {\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n       });\r\n     }\r\n   }\r\n \r\n   async getTemplate(val = '') {\r\n     const me = this;\r\n     const id = GSID.id;\r\n     const html = await me.#render(id);\r\n     return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n   }\r\n \r\n   async #render(id) {\r\n     const me = this;\r\n     const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n     const html = await Promise.all(list);\r\n     return html.join('');\r\n   }\r\n \r\n   get css() {\r\n     return GSAttr.get(this, 'css', '');\r\n   }\r\n \r\n   set css(val = '') {\r\n     GSAttr.set(this, 'css', val);\r\n   }\r\n \r\n   get cssItem() {\r\n     return GSAttr.get(this, 'css-item', '');\r\n   }\r\n \r\n   set cssItem(val = '') {\r\n     GSAttr.set(this, 'css-item', val);\r\n   }\r\n \r\n   get cssHead() {\r\n     return GSAttr.get(this, 'css-head');\r\n   }\r\n \r\n   set cssHead(val = '') {\r\n     return GSAttr.set(this, 'css-head', val);\r\n   }\r\n \r\n   get cssBody() {\r\n     return GSAttr.get(this, 'css-body');\r\n   }\r\n \r\n   set cssBody(val = '') {\r\n     return GSAttr.set(this, 'css-body', val);\r\n   }\r\n \r\n   async #html(id, el) {\r\n     const me = this;\r\n     const itemid = GSID.id;\r\n     const tpl = GSItem.getBody(el);\r\n     const title = me.#getTitle(el);\r\n     const message = me.#getMessage(el);\r\n     const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n     const isVisible = me.#isVisible(el);\r\n     return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n   }\r\n \r\n   #getTitle(el) {\r\n     return GSAttr.get(el, 'title');\r\n   }\r\n \r\n   #getMessage(el) {\r\n     return GSAttr.get(el, 'message');\r\n   }\r\n \r\n   #isVisible(el) {\r\n     return GSAttr.getAsBool(el, 'visible', false);\r\n   }\r\n \r\n   #getAutoclose(el) {\r\n     return GSAttr.getAsBool(el, 'autoclose', true);\r\n   }\r\n \r\n   /**\r\n    * Load data from various sources\r\n    * \r\n    * @async\r\n    * @param {JSON|func|url} val \r\n    * @returns {Promise}\r\n    */\r\n   async load(val = '') {\r\n     const data = await GSLoader.loadData(val);\r\n     if (!GSUtil.isJsonType(data)) return;\r\n     const me = this;\r\n     const src = GSItem.generateItem(data);\r\n     GSDOM.setHTML(me, src);\r\n     GSEvent.deattachListeners(me);\r\n     me.connectedCallback();\r\n     return data;\r\n   }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }  \r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, me.visible, 'show');\r\n      if (me.visible) requestAnimationFrame(() => {\r\n        me.#updatePos(menu);\r\n      });\r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, false, oldValue);\r\n      GSDOM.toggleClass(me.#button, true, newValue);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const style = window.getComputedStyle(me.parentElement);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n        \r\n        const icon = GSItem.getIcon(el);        \r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'modal', me.#onModal.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onModal(e) {\r\n    const me = this;\r\n    const sts = me.#validateCaller(e, e.target, 'close', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    let sts = me.#validateCaller(e, e.target, 'submit', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #validateCaller(e, own, type, comp) {\r\n    if (e.detail.type !== type) return false;\r\n    const parent = GSDOM.closest(own, comp);\r\n    return parent == this;\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    let sts = true;\r\n    let isOk = false;\r\n    try {\r\n      const el = e.composedPath().shift();\r\n      const action = el?.dataset.action;\r\n      if (!GSModal.#actions.includes(action)) return sts = false;\r\n      GSEvent.prevent(e);\r\n      isOk = action === 'ok';\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n   close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk : ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n  \r\n\t/**\r\n\t * Search for named slot tag or css selector \r\n\t * @param {string} name Tagged slot  name\r\n\t * @param {*} qry CSS selector\r\n\t * @returns {HTMLElement|Array<HTMLElement>}\r\n\t */\r\n\t#findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n\t\tlet el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n\t\tif (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n\t}\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <div class=\"modal d-none fade ${me.cssModal}\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content ${me.cssContent}\">\r\n            <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n              <div class=\"modal-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop d-none fade \"></div>    \r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs =GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, !me.visible, 'invisible');\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(()=>{\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // GSDOM.setHTML(me, '');\r\n           // me.firstChild?.remove();\r\n           Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        return Array.from(this.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th>${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssFilter() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-filter', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [ GSAttr.get(el, 'value'), GSAttr.get(el, 'map') ])\r\n        return { name: me.name, title: me.title, width: me.width, sortable: me.sortable, idx: me.index, map :mapping };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = GSDOM.queryAll(me, 'gs-column[filter=true]');\r\n        const columns = GSDOM.queryAll(me, 'gs-column');\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const heads = [];\r\n        const cols = GSDOM.queryAll(me, 'gs-column');\r\n        cols.forEach((el, i) => {\r\n            heads.push(el.toJSON());\r\n        });\r\n        return heads;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\">`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        return `<td class=\"${me.cssCell}\">${val || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(el.rowIndex));\r\n        GSEvent.send(me, 'select', data, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.querySelector('gs-header');\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data = []) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.forEach(i => {\r\n            const rec = me.#data[i - 1];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.length === 0;\r\n        GSEvent.send(me, 'selected', me.#selected);\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        this.store.sort = data || [];\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        this.store.filter = data || [];\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(title = '', name = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" href=\"#\" >${title}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', 'First');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', 'Last');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', 'Next');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', 'Previous');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","hasOwn","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","setAttribute","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","filter","GSDOM","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","createElement","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","getByID","qry","walk","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","timeout","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","prototype","isGSExtra","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","data","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","setHTML","entries","GSComboExt","HTMLSelectElement","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","GSDOMObserver","create","disconnect","GSFormExt","HTMLFormElement","deattachListeners","attach","evt","className","reset","comp","toObject","source","valid","reportValidity","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","show","hide","isInList","clean","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","toggleClass","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","c","allComps","allRoot","hidden","pos","neg","objsH","SPEED","isComp","isBefore","itm","close","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDateFormat","format","Intl","DateTimeFormat","GSYearFormat","current","offset","getFullYear","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","action","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","title","message","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","parseInt","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","focusable","focus","normal","isOk","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","GSProgress","bar","percentage","label","fromTemplateLiteral","Math","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","click","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","getData","ceil","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","abs","GSColumn","clssort","sortable","renderFilter","auto","cssFilter","isCombo","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","heads","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","innerText","cols","hdr","isAppend","row","isSelected","rowIndex","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","getRoot","listID","getElementById","GSPagination","firstlast","nextprev","previous","last","CSS_ITEM","floor","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}