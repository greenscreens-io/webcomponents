{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.setAttribute('data-hash', hash);\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tisMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tisSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tisAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile();\r\n\t\tconst isAsset = me.isAsset();\r\n\t\tconst isSchema = me.isSchema();\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tlet no_cache = false;\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            return self.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.indexOf('<') > -1 && val.indexOf('>') > 0;\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\twindow.GSUtil = GSUtil;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert element data-* attributes into JSON object\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object}\r\n\t */\r\n\tstatic getData(el) {\r\n\t\tconst o = {}\r\n\t\tif (!GSAttr.isHTMLElement(el)) return o;\r\n\t\tArray.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => o[v.name.split('-')[1]] = v.value);\r\n\t\treturn o;\r\n\t}\r\n\r\n\t/**\r\n\t * Copy data attributes from one element to another\r\n\t * @param {HTMLElement} source \r\n\t * @param {HTMLElement} target \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic setData(source, target) {\r\n\t\tif (!GSAttr.isHTMLElement(source)) return false;\r\n\t\tif (!GSAttr.isHTMLElement(target)) return false;\r\n\t\tArray.from(source.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => GSAttr.set(target, v.name, v.value));\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc.body.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic wrap(own, tpl) {\r\n\t\treturn GSDOM.link(own, tpl || document.createElement('gs-block'));\r\n\t}\r\n\r\n\tstatic link(own, tpl) {\r\n\t\ttpl.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) tpl.setAttribute('slot', own.slot);\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\t//return el instanceof HTMLTemplateElement && el.content && el.content.firstElementChild;\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.tagName.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn (el.getAttribute('is') || '').indexOf('gs-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return [];\r\n\t\treturn Array.from(el.childNodes).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {void}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\tel.classList.add(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {booelan}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\treturn el.classList.remove(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\tconst isOk = GSDOM.isHTMLElement(el) && el.parentNode;\r\n\t\treturn isOk ? el.parentNode.removeChild(el) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerText = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts Ture to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.classList.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = el.computedStyleMap().get('text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (!hidden && el.getAttribute('data-ignore') === 'true') return;\r\n\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (obj.hasOwnProperty(el.name)) el.value = obj[el.name];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\tif (!owner) return document;\r\n\t\t//return GSDOM.isGSElement(owner) ? owner.shadowRoot : owner;\r\n\t\treturn owner.self || owner;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic enableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(own, 'input, select, .btn').forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic disableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(el, 'input, select, .btn').forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tif (el) el.value = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own && own.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name);\r\n            if (!el) el = GSComponents.get(name);\r\n            if (el) return r(el);\r\n            GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.path[0];\r\n            const ok = el.id === name || el.tagName === name;\r\n            if (!ok) return;\r\n            fn(el, e);\r\n        };\r\n        let el = GSComponents.find(name);\r\n        if (!el) el = GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!self.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            self.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            GSLoader.NO_CACHE = self.GS_NO_CACHE === true;\r\n            if(localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n\r\n        if (url.startsWith('http')) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        const uri = new URL(path.replaceAll('//', '/'));\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n        if (!def) return def;\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n       \r\n       const isSkip = GSUtil.isHTML(def); // GSUtil.isURL(def);\r\n       if (isSkip) return def;\r\n       \r\n       if (def.indexOf('<') > -1 && def.indexOf('>')>0) return def;\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return  GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers : headers});\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n        \r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * <datalist is=\"gs-ext-datalist\">\r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            me.innerHTML = list.join('\\n');\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, document.body, 'action', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e, own) {\r\n        const me = own || this;\r\n        const sts = GSFormExt.#validateCaller(e, me, 'modal', 'GS-MODAL');\r\n        if (!sts) return;\r\n\r\n        if (e.detail.ok) return GSFormExt.#onSubmit(e, me);\r\n\r\n        const evt = e.detail.evt;\r\n        const isReset = evt && evt.target.className.indexOf('reset') > 0;\r\n        if (isReset) me.reset();\r\n    }\r\n\r\n    static #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == e.target || e.path.indexOf(parent) > -1;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        if (e.detail) e.detail.data = data;\r\n        GSEvent.send(me, 'form', data, true, true);\r\n        return me.reportValidity();\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]',\r\n        9: '[0-9]', '#': '[0-9]',\r\n        x: '[a-zA-Z]', X: '[a-zA-Z]',\r\n        _: '[0-9]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.indexOf(v) > -1) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.indexOf(value) > -1;\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = GSAttr.getData(opt);\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = GSAttr.getAsBool(me, 'data-selectable', true);\r\n        if (!accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const attrs = GSAttr.getData(el);\r\n        const own = GSNavLinkExt.#owner(el);\r\n        GSEvent.send(own, 'action', { type: 'active', data: attrs, source: e }, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = GSAttr.get(own, 'data-bs-target');\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #dismissCSS = 'data-bs-dismiss';\r\n    static #toggleCSS = 'data-bs-toggle';\r\n    static #targetCSS = 'data-bs-target';\r\n    static #injectCSS = 'data-inject';\r\n    static #dataCSS = 'data-css';\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\";\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.hasAttribute(GSDataAttr.#dismissCSS)\r\n            || el.hasAttribute(GSDataAttr.#toggleCSS)\r\n            || el.hasAttribute(GSDataAttr.#injectCSS);\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.hasAttribute(GSDataAttr.#toggleCSS)) return el;\r\n        if (el.hasAttribute(GSDataAttr.#dismissCSS)) return el;\r\n        if (el.hasAttribute(GSDataAttr.#injectCSS)) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = GSDataAttr.getInject(el);\r\n        const dismiss = GSDataAttr.getDismiss(el);\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = GSDataAttr.#getToggle(el);\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => hidden.indexOf(el) == -1);\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!GSDataAttr.#isInject(inject)) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = GSAttr.get(source, GSDataAttr.#dataCSS, '');\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => el.innerHTML = html);\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isInject(val) {\r\n        return val && val.length > 0;\r\n    }\r\n\r\n    static #getDismiss(el) {\r\n        return GSAttr.get(el, GSDataAttr.#dismissCSS);\r\n    }\r\n\r\n    static #getToggle(el) {\r\n        return GSAttr.get(el, GSDataAttr.#toggleCSS);\r\n    }\r\n\r\n    static #getInject(el) {\r\n        return GSAttr.get(el, GSDataAttr.#injectCSS);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = GSAttr.get(el, GSDataAttr.#targetCSS) || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        const val = GSDataAttr.#getDismiss(el);\r\n        return GSDataAttr.#isDismiss(val) ? val : '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        const val = GSDataAttr.#getToggle(el);\r\n        return GSDataAttr.#isToggle(val) ? val : '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        const val = GSDataAttr.#getInject(el);\r\n        return GSDataAttr.#isInject(val) ? val : '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return GSDataAttr.#isDismiss(GSDataAttr.#getDismiss(el));\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return GSDataAttr.#isToggle(GSDataAttr.#getToggle(el));\r\n    }\r\n\r\n    /**\r\n     * Return if element is injectable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isInject(el) {\r\n        return GSDataAttr.#isInject(GSDataAttr.#getInject(el));\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get isInitialized() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-ga-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter, fields) {\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static isDesktop() {\r\n        return !GSEnvironment.isMobile();\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop();\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile();\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSi18n from \"./GSi18n.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tif (GSi18n.isInitialized) GSi18n.isInitialized.translateDOM(me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'componentready', me.id, true, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\trequestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        me.self.innerHTML = date.toLocaleTimeString(me.locale);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get #options() {\r\n        return GSAttr.getData(this);\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.DateTimeFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        const o = Date.parse(GSAttr.get(this, 'value'));\r\n        return o || new Date();\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', 'default');\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        const obj = GSAttr.getData(me);\r\n        return Object.apply(obj, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') el.innerHTML = me.message;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t* Retrieve gs-item template or internal content\r\n\t* NOTE: If template set, item content is overriden\r\n\t* \r\n\t* @async\r\n\t* @param {HTMLElement} el \r\n\t* @returns {Promise<string>}\r\n\t*/\r\n\tstatic async getTemplate(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cnt = tpl ? await GSLoader.getTemplate(tpl) : '';\r\n\t\tif (cnt) return cnt;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retuen content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-header':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, false, oldValue);\r\n        GSDOM.toggleClass(el, true, newValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const title = await GSLoader.getTemplate(me.#getTitle(el));\r\n    const message = await GSLoader.getTemplate(me.#getMessage(el));\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n      <div class=\"accordion-item ${me.css}\">\r\n        <slot name=\"content\">\r\n            <h2 class=\"accordion-header\">\r\n              <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                ${title}\r\n              </button>\r\n            </h2>\r\n            <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n              <div class=\"accordion-body\">${message}</div>\r\n            </div>      \r\n        </slot>\r\n    </div>\r\n    `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return el.innerHTML = me.title;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    me.#menu.innerHTML = opts.join('');\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    if (e instanceof Event) {\r\n      e.preventDefault();\r\n      //if (e.target instanceof GSContext) return;\r\n    }\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu.getBoundingClientRect();\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.hasAttribute('data-action'))\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = GSAttr.getData(e.target);\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const style = window.getComputedStyle(me.parentElement);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = me.#getCSS(el);\r\n        const href = me.#getHref(el);\r\n        const action = GSItem.getActionAttr(el);\r\n        const dissmis = GSItem.getDismissAttr(el);\r\n        const target = GSItem.getTargetAttr(el);\r\n        const toggle = GSItem.getToggleAttr(el);\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${action} ${toggle} ${target} ${dissmis}>\r\n                ${tpl || message}\r\n                </a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getCSS(el) {\r\n        return GSAttr.get(el, 'css', '');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    #getHref(el) {\r\n        return GSAttr.get(el, 'href', \"#\");\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'modal', me.#onModal.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onModal(e) {\r\n    const me = this;\r\n    const sts = me.#validateCaller(e, e.target, 'close', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    let sts = me.#validateCaller(e, e.target, 'submit', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #validateCaller(e, own, type, comp) {\r\n    if (e.detail.type !== type) return false;\r\n    const parent = GSDOM.closest(own, comp);\r\n    return parent == this;\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    let sts = true;\r\n    try {\r\n      const action = GSAttr.get(e.path[0], 'data-action');\r\n      if (GSModal.#actions.indexOf(action) < 0) return sts = false;\r\n      GSEvent.prevent(e);\r\n      const isOk = action === 'ok';\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close();\r\n    }\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n  \r\n\t/**\r\n\t * Search for named slot tag or css selector \r\n\t * @param {string} name Tagged slot  name\r\n\t * @param {*} qry CSS selector\r\n\t * @returns {HTMLElement|Array<HTMLElement>}\r\n\t */\r\n\t#findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n\t\tconst el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n\t\tif (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n\t}\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl(this, 'title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    this.title.innerHTML = val;\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl(this, 'body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    this.body.innerHTML = val;\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <div class=\"modal d-none fade\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header border-0\">\r\n              <div class=\"modal-title\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer border-0 justify-content-${me.align}\">\r\n              <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop d-none fade \"></div>    \r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = me.#getIcon(el);\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" id=\"${GSID.id}-nav\"                \r\n                ${GSItem.getDismissAttr(el)} ${GSItem.getTargetAttr(el)} \r\n                ${GSItem.getToggleAttr(el)} ${GSItem.getActionAttr(el)} \r\n                ${GSItem.getInjectAttr(el)} ${GSItem.getCSSAttr(el)}\r\n                ${GSItem.getSelectableAttr(el)} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getIcon(el) {\r\n        return GSAttr.get(el, 'icon');\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content') || GSAttr.get(me.target, 'data-bs-content', '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger') || GSAttr.get(me.target, 'data-bs-trigger', 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.indexOf('focus') > -1;\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.indexOf('hover') > -1;\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return el && (el.firstElementChild instanceof GSPopover || el.nextElementSibling instanceof GSPopover);\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el instanceof HTMLElement && el.hasAttribute('data-bs-content') && GSAttr.get(el, 'data-bs-toggle') === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) bar.innerHTML = me.#fromLabel();\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = 'p-4';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = el.active ? me.#activeTabCSS(el) : '';\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = el.active ? me.#activePaneCSS(el) : '';\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  /*\r\n  #renderPane(el) {\r\n    const me = this;\r\n    const actievCSS = el.active ? me.#activePaneCSS(el) : '';\r\n    const body = GSItem.getBody(el);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n  */\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me.target, 'mouseenter', me.show.bind(me));\r\n        GSEvent.attach(me, me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #render() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupAbsolute(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#render();\r\n            GSDOM.toggleClass(this.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(this.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.innerHTML ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return el && (el.firstElementChild instanceof GSTooltip || el.nextElementSibling instanceof GSTooltip);\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el instanceof HTMLElement && el.hasAttribute('title') && GSAttr.get(el, 'data-bs-toggle') === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) me.#titleEl.innerHTML = me.title;\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement') || GSAttr.get(me.target, 'data-bs-placement', 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', GSAttr.getAsBool(me.target, 'data-bs-backdrop', 'false'));\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', GSAttr.getAsBool(me.target, 'data-bs-scroll', 'false'));\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" flat=\"true\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.self; // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.indexOf(mode) > -1;\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.indexOf(val) > -1;\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defiend mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        return Array.from(this.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th>${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.items.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'title', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', 'form-control');\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].indexOf(val) > -1;\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        //const idx = [...me.parentElement.children].indexOf(me);\r\n        return { name: me.name, title: me.title, width: me.width, sortable: me.sortable, idx: me.index };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = GSDOM.queryAll(me, 'gs-column[filter=true]');\r\n        const columns = GSDOM.queryAll(me, 'gs-column');\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push('<tr is=\"gs-tablefilter\">');\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push('<tr is=\"gs-tablesort\">');\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const heads = [];\r\n        const cols = GSDOM.queryAll(me, 'gs-column');\r\n        cols.forEach((el, i) => {\r\n            heads.push(el.toJSON());\r\n        });\r\n        return heads;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\">`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        me.innerHTML = rows.join('');\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        const val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        return `<td class=\"${me.cssCell}\">${val || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(el.rowIndex));\r\n        GSEvent.send(me, 'select', data, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.childNodes).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.querySelector('gs-header');\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        me.self.innerHTML = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data = []) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.forEach(i => {\r\n            const rec = me.#data[i - 1];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        GSEvent.send(me, 'selected', me.#selected);\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        this.store.sort = data || [];\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        this.store.filter = data || [];\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.path[0];\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (!me.#auto) return;\r\n        GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        if (!list) return el.value;\r\n        const opt = list.querySelector(`option[value=\"${el.value}\"]`);\r\n        if (!opt) return el.value;\r\n        return GSAttr.get(opt, 'data-value', el.value);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(title = '', name = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" href=\"#\" >${title}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', 'First');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', 'Last');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', 'Next');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', 'Previous');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","setAttribute","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","self","hasOwnProperty","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","bind","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","filter","source","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","createElement","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","res","push","innerHTML","innerText","toggle","apply","contains","root","unwrap","querySelectorAll","computedStyleMap","hidden","toValue","every","d","setValue","queryAll","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","callback","timeout","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","path","flat","result","findAll","prototype","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","NO_CACHE","setItem","isFile","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","data","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","customElements","define","extends","super","entries","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","GSDOMObserver","create","disconnect","GSFormExt","HTMLFormElement","deattachListeners","attach","evt","className","reset","comp","checkValidity","valid","reportValidity","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","isInList","clean","getData","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","getAsBool","nav","panel","panelItem","attrs","item","tgtID","GSDataAttr","inject","getInject","dismiss","getDismiss","getTarget","comps","gs","c","allComps","allRoot","pos","neg","objsH","isComp","isBefore","itm","close","tgt","GSi18n","isInitialized","clearInterval","oldVal","newVal","has","translateDOM","auto","HTMLScriptElement","HTMLStyleElement","HTMLLinkElement","HTMLMetaElement","textContent","dname","dval","translate","gsi18n","lang","kv","hk","setInterval","arr","exec","hv","setAsBool","default","GSData","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","GSEnvironment","strAgt","toLocaleLowerCase","isEdge","isDesktop","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","getTemplate","hide","show","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSTimeFormat","attributeChanged","stop","start","date","toLocaleTimeString","interval","getAsNum","setAsNum","GSDateFormat","format","Intl","DateTimeFormat","GSYearFormat","current","offset","getFullYear","GSCurrencyFormat","currency","NumberFormat","GSAlert","observeAttributes","btn","message","activeCSS","dismissible","active","GSItem","validate","cnt","cls","items","generateItem","getToggle","getAction","getCSS","getSelectable","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","selectable","getName","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","genericItems","cssHead","cssBody","itemid","title","autoclose","isVisible","loadData","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSLayout","isVertical","getComputedStyle","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","GSModal","focusable","focus","normal","isOk","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","GSNav","btns","dataAttrs","dataToString","cssnav","cssactive","contentTpl","getCSSAttr","getSelectableAttr","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","trigger","toggleClass","openable","GSProgress","bar","percentage","label","fromTemplateLiteral","Math","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","cssTitle","scroll","closeBtn","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","click","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","ceil","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","abs","GSColumn","clssort","sortable","renderFilter","cssFilter","isCombo","counter","toJSON","GSHeader","columns","cssHeader","heads","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","cols","hdr","isAppend","row","isSelected","rowIndex","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","last","CSS_ITEM","floor","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}