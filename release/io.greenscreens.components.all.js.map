{"version":3,"file":"io.greenscreens.components.all.js","mappings":"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","sources":["webpack:///./modules/base/GSID.mjs","webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/components/ext/GSDataListExt.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/components/ext/GSFormExt.mjs","webpack:///./modules/components/ext/GSInputExt.mjs","webpack:///./modules/components/ext/GSNavLinkExt.mjs","webpack:///./modules/components/ext/GSDataAttr.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/components/intl/GSTimeFormat.mjs","webpack:///./modules/components/intl/GSDateFormat.mjs","webpack:///./modules/components/intl/GSYearFormat.mjs","webpack:///./modules/components/intl/GSCurrencyFormat.mjs","webpack:///./modules/components/GSAlert.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/components/GSAccordion.mjs","webpack:///./modules/components/GSButton.mjs","webpack:///./modules/components/GSCenter.mjs","webpack:///./modules/components/GSContext.mjs","webpack:///./modules/components/GSLayout.mjs","webpack:///./modules/components/GSList.mjs","webpack:///./modules/components/GSModal.mjs","webpack:///./modules/components/GSNav.mjs","webpack:///./modules/base/GSPopper.mjs","webpack:///./modules/components/GSPopover.mjs","webpack:///./modules/components/GSProgress.mjs","webpack:///./modules/components/GSSplitter.mjs","webpack:///./modules/components/GSTab.mjs","webpack:///./modules/components/GSTooltip.mjs","webpack:///./modules/components/GSOffcanvas.mjs","webpack:///./modules/components/filebox/GSAttachment.mjs","webpack:///./modules/components/filebox/GSFileBox.mjs","webpack:///./modules/components/table/GSStore.mjs","webpack:///./modules/components/table/GSColumn.mjs","webpack:///./modules/components/table/GSHeader.mjs","webpack:///./modules/components/table/GSTBody.mjs","webpack:///./modules/components/table/GSTable.mjs","webpack:///./modules/components/table/GSTableSort.mjs","webpack:///./modules/components/table/GSTableFilter.mjs","webpack:///./modules/components/table/GSPagination.mjs","webpack:///./modules/components/toast/GSNotification.mjs","webpack:///./modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tlet no_cache = false;\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            return self.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.indexOf('<') > -1 && val.indexOf('>') > 0;\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\twindow.GSUtil = GSUtil;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\treturn el?.tagName?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (GSDOM.isHTMLElement(el)) el.innerText = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (!hidden && el.dataset.ignore === 'true') return;\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && obj.hasOwnProperty(el.name))\r\n\t\t\t.forEach(el => el.value = obj[el.name]);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tif (el) el.value = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!self.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            self.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            GSLoader.NO_CACHE = self.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n\r\n        if (url.startsWith('http')) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        const uri = new URL(path.replaceAll('//', '/'));\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * <datalist is=\"gs-ext-datalist\">\r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            me.innerHTML = list.join('\\n');\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, document.body, 'action', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e, own) {\r\n        const me = own || this;\r\n        const sts = GSFormExt.#validateCaller(e, me, 'modal', 'GS-MODAL');\r\n        if (!sts) return;\r\n\r\n        if (e.detail.ok) return GSFormExt.#onSubmit(e, me);\r\n\r\n        const evt = e.detail.evt;\r\n        const isReset = evt && evt.target.className.indexOf('reset') > 0;\r\n        if (isReset) me.reset();\r\n    }\r\n\r\n    static #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == e.target || e.composedPath().indexOf(parent) > -1;\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        if (e.detail) e.detail.data = data;\r\n        GSEvent.send(me, 'form', data, true, true);\r\n        return me.reportValidity();\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this,'input,select,textarea')\r\n                    .map(el => el.checkValidity())\r\n                    .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]',\r\n        9: '[0-9]', '#': '[0-9]',\r\n        x: '[a-zA-Z]', X: '[a-zA-Z]',\r\n        _: '[0-9]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.indexOf(v) > -1) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.indexOf(value) > -1;\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        GSEvent.send(own, 'action', { type: 'active', data: el.dataset, source: e }, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal|popup\";\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => hidden.indexOf(el) == -1);\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => el.innerHTML = html);\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.indexOf(val) > -1;\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.indexOf(val) > -1;\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get isInitialized() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSi18n from \"./GSi18n.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tif (GSi18n.isInitialized) GSi18n.isInitialized.translateDOM(me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'componentready', me.id, true, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\trequestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        me.self.innerHTML = date.toLocaleTimeString(me.locale);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        const o = Date.parse(GSAttr.get(this, 'value'));\r\n        return o || new Date();\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', 'default');\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.value;\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        this.innerHTML = this.format;\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') el.innerHTML = me.message;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t* Retrieve gs-item template or internal content\r\n\t* NOTE: If template set, item content is overriden\r\n\t* \r\n\t* @async\r\n\t* @param {HTMLElement} el \r\n\t* @returns {Promise<string>}\r\n\t*/\r\n\tstatic async getTemplate(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cnt = tpl ? await GSLoader.getTemplate(tpl) : '';\r\n\t\tif (cnt) return cnt;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retuen content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template flat=\"${flat}\" href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-header':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, false, oldValue);\r\n        GSDOM.toggleClass(el, true, newValue);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n      <div class=\"accordion-item ${me.css}\">\r\n        <slot name=\"content\">\r\n            <h2 class=\"accordion-header\">\r\n              <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                ${title}\r\n              </button>\r\n            </h2>\r\n            <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n              <div class=\"accordion-body\">${message}</div>\r\n            </div>      \r\n        </slot>\r\n    </div>\r\n    `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return el.innerHTML = me.title;\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    me.#menu.innerHTML = opts.join('');\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    if (e instanceof Event) {\r\n      e.preventDefault();\r\n      //if (e.target instanceof GSContext) return;\r\n    }\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu.getBoundingClientRect();\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const style = window.getComputedStyle(me.parentElement);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = me.#getCSS(el);\r\n        const href = me.#getHref(el);\r\n        const action = GSItem.getActionAttr(el);\r\n        const dissmis = GSItem.getDismissAttr(el);\r\n        const target = GSItem.getTargetAttr(el);\r\n        const toggle = GSItem.getToggleAttr(el);\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${action} ${toggle} ${target} ${dissmis}>\r\n                ${tpl || message}\r\n                </a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getCSS(el) {\r\n        return GSAttr.get(el, 'css', '');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    #getHref(el) {\r\n        return GSAttr.get(el, 'href', \"#\");\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me, 'modal', me.#onModal.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onModal(e) {\r\n    const me = this;\r\n    const sts = me.#validateCaller(e, e.target, 'close', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    me.close();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    let sts = me.#validateCaller(e, e.target, 'submit', 'GS-MODAL');\r\n    if (!sts) return;\r\n    GSEvent.prevent(e);\r\n    sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #validateCaller(e, own, type, comp) {\r\n    if (e.detail.type !== type) return false;\r\n    const parent = GSDOM.closest(own, comp);\r\n    return parent == this;\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    let sts = true;\r\n    try {\r\n      const el = e.composedPath().shift();\r\n      const action = el?.dataset.action;\r\n      if (GSModal.#actions.indexOf(action) < 0) return sts = false;\r\n      GSEvent.prevent(e);\r\n      const isOk = action === 'ok';\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close();\r\n    }\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n  \r\n\t/**\r\n\t * Search for named slot tag or css selector \r\n\t * @param {string} name Tagged slot  name\r\n\t * @param {*} qry CSS selector\r\n\t * @returns {HTMLElement|Array<HTMLElement>}\r\n\t */\r\n\t#findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n\t\tconst el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n\t\tif (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n\t}\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl(this, 'title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    this.title.innerHTML = val;\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl(this, 'body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    this.body.innerHTML = val;\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <div class=\"modal d-none fade ${me.cssModal}\">\r\n        <div class=\"modal-dialog modal-dialog-centered\">\r\n          <div class=\"modal-content ${me.cssContent}\">\r\n            <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n              <div class=\"modal-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"modal-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-backdrop d-none fade \"></div>    \r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = me.#getIcon(el);\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" id=\"${GSID.id}-nav\"                \r\n                ${GSItem.getDismissAttr(el)} ${GSItem.getTargetAttr(el)} \r\n                ${GSItem.getToggleAttr(el)} ${GSItem.getActionAttr(el)} \r\n                ${GSItem.getInjectAttr(el)} ${GSItem.getCSSAttr(el)}\r\n                ${GSItem.getSelectableAttr(el)} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getIcon(el) {\r\n        return GSAttr.get(el, 'icon');\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        me.innerHTML = GSItem.generateItem(data);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.indexOf('focus') > -1;\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.indexOf('hover') > -1;\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            me.innerHTML = '';\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) bar.innerHTML = me.#fromLabel();\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    me.innerHTML = GSItem.generateItem(data);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(this.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // me.innerHTML = '';\r\n           me.firstChild.remove();\r\n        }, 250);\r\n        return GSDOM.toggleClass(this.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) me.#titleEl.innerHTML = me.title;\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].indexOf(this.file.type) > -1;\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.indexOf(mode) > -1;\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.indexOf(val) > -1;\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defiend mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        return Array.from(this.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th>${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssFilter}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.items.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'title', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', 'form-control');\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].indexOf(val) > -1;\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        //const idx = [...me.parentElement.children].indexOf(me);\r\n        return { name: me.name, title: me.title, width: me.width, sortable: me.sortable, idx: me.index };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = GSDOM.queryAll(me, 'gs-column[filter=true]');\r\n        const columns = GSDOM.queryAll(me, 'gs-column');\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push('<tr is=\"gs-tablefilter\">');\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push('<tr is=\"gs-tablesort\">');\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const heads = [];\r\n        const cols = GSDOM.queryAll(me, 'gs-column');\r\n        cols.forEach((el, i) => {\r\n            heads.push(el.toJSON());\r\n        });\r\n        return heads;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\">`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        me.innerHTML = rows.join('');\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        const val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        return `<td class=\"${me.cssCell}\">${val || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(el.rowIndex));\r\n        GSEvent.send(me, 'select', data, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.childNodes).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.querySelector('gs-header');\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        me.self.innerHTML = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data = []) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.forEach(i => {\r\n            const rec = me.#data[i - 1];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        GSEvent.send(me, 'selected', me.#selected);\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        this.store.sort = data || [];\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        this.store.filter = data || [];\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(title = '', name = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" href=\"#\" >${title}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get store() {\r\n        return this.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', 'First');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', 'Last');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', 'Next');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', 'Previous');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","prefx","id","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","self","hasOwnProperty","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","bind","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","normalize","setAttribute","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","filter","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","children","concat","wrap","shift","link","createElement","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","res","push","innerHTML","innerText","toggle","apply","contains","root","unwrap","querySelectorAll","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","hidden","queryAll","ignore","toValue","every","d","setValue","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSDOM","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","callback","timeout","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","prototype","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSComponents","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","NO_CACHE","setItem","path","isFile","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","data","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","customElements","define","extends","super","entries","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","GSDOMObserver","create","disconnect","GSFormExt","HTMLFormElement","deattachListeners","attach","evt","className","reset","comp","checkValidity","source","valid","reportValidity","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","_","placeholder","mask","strict","chars","masks","pattern","isMatch","isInList","clean","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","inject","dismiss","getTarget","comps","gs","c","allComps","allRoot","pos","neg","objsH","isComp","isBefore","itm","close","tgt","GSi18n","isInitialized","clearInterval","oldVal","newVal","has","translateDOM","auto","HTMLScriptElement","HTMLStyleElement","HTMLLinkElement","HTMLMetaElement","textContent","dname","dval","translate","gsi18n","lang","kv","hk","setInterval","arr","exec","hv","getAsBool","setAsBool","default","GSData","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","template","isFlat","FLAT","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","getTemplate","hide","show","on","off","attachEvent","removeEvent","ref","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","GSTimeFormat","attributeChanged","stop","start","date","toLocaleTimeString","interval","getAsNum","setAsNum","GSDateFormat","format","Intl","DateTimeFormat","GSYearFormat","current","offset","getFullYear","GSCurrencyFormat","currency","NumberFormat","GSAlert","observeAttributes","btn","message","activeCSS","dismissible","active","GSItem","validate","cnt","cls","items","generateItem","getDismiss","getToggle","getAction","getInject","getCSS","getSelectable","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","getName","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","genericItems","cssHead","cssBody","itemid","title","autoclose","isVisible","loadData","GSButton","disable","select","blur","disabled","content","icon","dissmis","comment","GSCenter","vel","GSContext","menu","visible","childElementCount","reattach","dark","Event","open","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","GSModal","focusable","focus","normal","isOk","dlg","large","extra","info","closable","waitEvent","confirm","prompt","align","footer","buttonOk","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssFooter","GSNav","btns","dataAttrs","dataToString","cssnav","cssactive","contentTpl","getCSSAttr","getSelectableAttr","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsPlacement","bsContent","trigger","bsTrigger","toggleClass","openable","GSProgress","bar","percentage","label","fromTemplateLiteral","Math","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","popupFixed","firstChild","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsBackdrop","scroll","bsScroll","closeBtn","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","click","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","getData","ceil","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","abs","GSColumn","clssort","sortable","renderFilter","cssFilter","isCombo","counter","toJSON","GSHeader","columns","heads","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","cols","hdr","isAppend","row","isSelected","rowIndex","GSTable","store","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","getElementById","GSPagination","firstlast","nextprev","previous","last","CSS_ITEM","floor","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","success","danger","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast"],"sourceRoot":""}