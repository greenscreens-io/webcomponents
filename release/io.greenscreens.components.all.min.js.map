{"version":3,"file":"io.greenscreens.components.all.min.js","sources":["../modules/base/GSID.mjs","../modules/head/GSBase.mjs","../modules/head/GSCacheStyles.mjs","../modules/base/GSLog.mjs","../modules/base/GSUtil.mjs","../modules/base/GSFunction.mjs","../modules/base/GSAttr.mjs","../modules/base/GSDOM.mjs","../modules/base/GSEvent.mjs","../modules/base/GSComponents.mjs","../modules/base/GSLoader.mjs","../modules/components/ext/GSDataListExt.mjs","../modules/components/ext/GSComboExt.mjs","../modules/base/GSDOMObserver.mjs","../modules/components/ext/GSFormExt.mjs","../modules/components/ext/GSInputExt.mjs","../modules/components/ext/GSNavLinkExt.mjs","../modules/components/ext/GSDataAttr.mjs","../modules/base/GSData.mjs","../modules/base/GSEnvironment.mjs","../modules/base/GSElement.mjs","../modules/components/intl/GSTimeFormat.mjs","../modules/base/GSDate.mjs","../modules/components/intl/GSDateFormat.mjs","../modules/components/intl/GSYearFormat.mjs","../modules/components/intl/GSCurrencyFormat.mjs","../modules/base/GSItem.mjs","../modules/components/GSAccordion.mjs","../modules/components/GSAlert.mjs","../modules/components/GSButton.mjs","../modules/components/GSCenter.mjs","../modules/components/GSContext.mjs","../modules/components/GSDialog.mjs","../modules/components/GSDropdown.mjs","../modules/components/GSFormGroup.mjs","../modules/components/GSLayout.mjs","../modules/components/GSList.mjs","../modules/components/GSModal.mjs","../modules/components/GSNav.mjs","../modules/components/GSOffcanvas.mjs","../modules/base/GSPopper.mjs","../modules/components/GSPopover.mjs","../modules/components/GSPopup.mjs","../modules/components/GSProgress.mjs","../modules/components/GSSplitter.mjs","../modules/components/GSTab.mjs","../modules/components/GSTooltip.mjs","../modules/components/filebox/GSAttachment.mjs","../modules/components/filebox/GSFileBox.mjs","../modules/components/table/GSStore.mjs","../modules/components/table/GSColumn.mjs","../modules/components/table/GSHeader.mjs","../modules/components/table/GSTBody.mjs","../modules/components/table/GSTable.mjs","../modules/components/table/GSTableSort.mjs","../modules/components/table/GSTableFilter.mjs","../modules/components/table/GSPagination.mjs","../modules/components/toast/GSNotification.mjs","../modules/components/toast/GSToast.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching protocol\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isProtocol() {\r\n\t\tconst schema = this.protocol;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isProtocol = me.isProtocol;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isProtocol) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https protocol. \r\n\t * Used to filter under which protocol loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget protocol() {\r\n\t\treturn this.getAttribute('protocol') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom form processing to support forms in modal dialogs\r\n * <form is=\"gs-ext-form\">\r\n * @class\r\n * @extends {HTMLFormElement}\r\n */\r\nexport default class GSFormExt extends HTMLFormElement {\r\n\r\n    static #actions = ['ok', 'reset', 'submit'];\r\n\r\n    static {\r\n        customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n        Object.seal(GSFormExt);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSFormExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSFormExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        //GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    static #attachEvents(me) {\r\n        GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n        GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n        GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} e \r\n     * @param {*} own \r\n     */\r\n    static #onAction(e) {\r\n\r\n        const el = e.composedPath().shift();\r\n        const action = el?.dataset.action || e.detail.action || el?.type;\r\n        if (!GSFormExt.#actions.includes(action)) return;\r\n\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n\r\n        switch (action) {\r\n            case 'reset':\r\n                me.reset();\r\n                break;\r\n            case 'ok':\r\n            case 'submit':\r\n                GSFormExt.#onSubmit(e, me);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Trigger form submit only if form data is valid\r\n     * @param {*} e \r\n     */\r\n    static #onSubmit(e, own) {\r\n        GSEvent.prevent(e);\r\n        const me = own || this;\r\n        const isValid = me.checkValidity() && me.isValid;\r\n        if (!isValid) return me.reportValidity();\r\n        const obj = GSDOM.toObject(me);\r\n        const type = isValid ? 'submit' : 'invalid';\r\n        const data = { type: type, data: obj, source: e, valid: isValid };\r\n        GSEvent.send(me, 'form', data, true, true);\r\n    }\r\n\r\n    get isValid() {\r\n        return GSDOM.queryAll(this, 'input,select,textarea')\r\n            .map(el => el.checkValidity())\r\n            .filter(v => v === false).length === 0;\r\n    }\r\n\r\n    get buttonOK() {\r\n        return GSFormExt.#buttonOK(this);\r\n    }\r\n\r\n    get buttonCancel() {\r\n        return GSFormExt.#buttonCancel(this);\r\n    }\r\n\r\n    get buttonReset() {\r\n        return GSFormExt.#buttonReset(this);\r\n    }\r\n\r\n    static #buttonOK(own) {\r\n        return GSDOM.query(own, 'button[type=\"submit\"]');\r\n    }\r\n\r\n    static #buttonCancel(own) {\r\n        return GSFormExt.#find(own, 'cancel');\r\n    }\r\n\r\n    static #buttonReset(own) {\r\n        return GSFormExt.#find(own, 'reset');\r\n    }\r\n\r\n    static #find(own, name = '') {\r\n        return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = '.^$*+?()[]{}\\|';\r\n\r\n    static #maskType = {\r\n        n: /[0-9]/g,\r\n        x: /[0-9a-fA-F]/g,\r\n        y: /[0-9]/g,\r\n        m: /[0-9]/g,\r\n        d: /[0-9]/g,\r\n        '#': /[a-zA-Z]/g,\r\n        '*': /[0-9a-zA-Z]/g,\r\n        '_': /./g\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask', 'pattern'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n        setTimeout(() => {\r\n            me.#onDataChange();\r\n        }, 250);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        if (name === 'mask' || name === 'pattern') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    get optimized() {\r\n        const me = this;\r\n        const chars = me.mask.split('');\r\n\r\n        const masks = [];\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            if (masks[masks.length - 1] === v) return cnt++;\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n            masks.push(v);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n\r\n        return masks.join('');\r\n    }\r\n\r\n    get autocopy() {\r\n        return this.hasAttribute('autocopy');\r\n    }\r\n\r\n    get autoselect() {\r\n        return this.hasAttribute('autoselect');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.pattern.length > 0) return;\r\n        if (me.mask.length === 0) return;\r\n\r\n        const chars = me.mask.split('');\r\n        const masks = ['^'];\r\n\r\n        let cnt = 0;\r\n        chars.forEach((v, i) => {\r\n            const m = GSInputExt.#maskType[v.toLowerCase()];\r\n            if (!m) {\r\n                if (cnt > 0) masks.push(`{${++cnt}}`);\r\n                cnt = 0;\r\n                if (GSInputExt.#special.indexOf(v) > -1) masks.push('\\\\');\r\n                return masks.push(v);\r\n            }\r\n\r\n            chars[i] = new RegExp(m, 'g');\r\n\r\n            if (masks.length === 0) return masks.push(m.source);\r\n\r\n            if (masks[masks.length - 1] === m.source) return cnt++;\r\n\r\n            if (cnt > 0) masks.push(`{${++cnt}}`);\r\n            cnt = 0;\r\n            masks.push(m.source);\r\n        });\r\n        if (cnt > 0) masks.push(`{${++cnt}}`);\r\n        masks.push('$');\r\n\r\n        me.#masks = chars;\r\n        me.pattern = masks.join('');\r\n        me.maxLength = me.mask.length;\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'keydown', me.#onKeyDown.bind(me));\r\n        GSEvent.attach(me, me, 'keypress', me.#onKeyPress.bind(me));\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'change', me.#onChange.bind(me));\r\n        GSEvent.attach(me, me, 'paste', me.#onPaste.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        GSEvent.attach(me, me, 'click', me.#onClick.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        const frmel = GSDOM.isFormElement(el.tagName);\r\n        if (frmel) {\r\n            GSAttr.toggle(el, 'disabled', !isMatch);\r\n        } else {\r\n            isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        }\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list?.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt?.dataset ||{};\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => el !== me)\r\n                .filter(el => GSAttr.get(el, 'list').length === 0)\r\n                .forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.autocopy) navigator.clipboard.writeText(me.value);\r\n        if (me.autoselect) me.select();\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        if (me.required) me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onPaste(e) {\r\n        GSEvent.prevent(e);\r\n        const val = e.clipboardData.getData('text');\r\n        const me = this;\r\n        me.value = me.formatMask(val);\r\n    }\r\n\r\n    #onKeyDown(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos1 = me.selectionStart;\r\n        let pos2 = me.selectionEnd;\r\n\r\n        let handle = false;\r\n        let pos = pos1;\r\n\r\n        if (e.key === 'Delete') {\r\n            handle = true;\r\n            tmp[pos] = me.mask[pos];\r\n        }\r\n\r\n        if (e.key === 'Backspace') {\r\n            handle = true;\r\n            if (pos1 === pos2) {\r\n                tmp[pos - 1] = me.mask[pos - 1];\r\n                pos = pos1 - 1;\r\n            } else {\r\n                pos = pos1;\r\n            }\r\n        }\r\n\r\n\r\n        if (pos1 !== pos2 && e.key.length === 1) {\r\n            handle = true;\r\n            while (pos1 < pos2) {\r\n                tmp[pos1] = me.mask[pos1];\r\n                pos1++;\r\n            }\r\n        }\r\n\r\n        if (!handle) return;\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos, pos);\r\n        return GSEvent.prevent(e);\r\n\r\n    }\r\n\r\n    #onKeyPress(e) {\r\n        const me = this;\r\n        if (!me.mask) return;\r\n\r\n        const tmp = me.value.split('');\r\n        let pos = me.selectionStart;\r\n        let masks = me.#masks.slice(pos);\r\n        let canceled = true;\r\n\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) {\r\n                if (mask.test(e.key)) {\r\n                    tmp[pos] = e.key;\r\n                    canceled = false;\r\n                }\r\n                GSEvent.prevent(e);\r\n                return false;\r\n            } else {\r\n                tmp[pos] = mask;\r\n            }\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n        if (canceled) return;\r\n\r\n        masks = me.#masks.slice(pos + 1);\r\n        masks.every(mask => {\r\n            if (mask instanceof RegExp) return false;\r\n            pos++;\r\n            return true;\r\n        });\r\n\r\n\r\n        me.value = me.formatMask(tmp.join(''));\r\n        me.setSelectionRange(pos + 1, pos + 1);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        if (me.type !== 'range') return;\r\n        me.title = me.value;\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return; //  me.#onMaskInput(me.value);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.maxLength > 0 && me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        me.value = me.#updateText(me.value);\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n        }\r\n    }\r\n\r\n    formatMask(value = '') {\r\n        const me = this;\r\n        const chars = value.split('');\r\n\r\n        const tmp = [];\r\n\r\n        let pos = 0;\r\n        let valid = false;\r\n\r\n        me.mask.split('').every((v, i) => {\r\n            const vld = me.#masks[i];\r\n\r\n            if (GSUtil.isString(vld)) {\r\n                tmp.push(vld);\r\n                if (chars[0] === vld) chars.shift();\r\n                if (valid) pos++;\r\n            }\r\n\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                const c = chars.shift();\r\n                valid = c && vld.test(c);\r\n                tmp.push(valid ? c : v);\r\n                if (valid) pos++;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        return me.#updateText(tmp.join(''));\r\n    }\r\n\r\n    #updateText(value = '') {\r\n        const me = this;\r\n        const fmt = me.computedStyleMap().get('text-transform').value;\r\n        switch (fmt) {\r\n            case 'lowercase':\r\n                return value.toLocaleLowerCase();\r\n            case 'uppercase':\r\n                return value.toLocaleUpperCase();\r\n            case 'capitalize':\r\n                return GSUtil.capitalizeAll(value);\r\n        }\r\n        return value;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, 'active', false));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, 'active show', false));\r\n            GSDOM.toggleClass(me, 'active', true);\r\n            GSDOM.toggleClass(panelItem, 'active show', true);\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|dialog|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup|dialog\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #flip(el, pos, neg) {\r\n        GSDOM.toggleClass(el, pos, true);\r\n        GSDOM.toggleClass(el, neg, false);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#flip(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#flip(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, 'show', false);\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, 'show', false));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, 'collapsed', null);\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"dialog\":\r\n                break;                \r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get protocol() {\r\n\t\treturn GSAttr.get(this, 'protocol', '');\r\n\t}\r\n\r\n\tset protocol(val) {\r\n\t\tGSAttr.set(this, 'protocol', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidProtocol() {\r\n\t\treturn GSEnvironment.isValidProtocol(this.protocol);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidProtocol;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date = new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency });\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n * </gs-accordion>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAccordion extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-accordion', GSAccordion);\r\n    Object.seal(GSAccordion);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return me.load(newValue);\r\n\r\n\r\n    let css = null;\r\n\r\n    switch (name) {\r\n      case 'css':\r\n        css = '.accordion';\r\n        break;\r\n      case 'css-item':\r\n        css = '.accordion-item';\r\n        break;\r\n      case 'css-head':\r\n        css = '.accordion-button';\r\n        break;\r\n      case 'css-body':\r\n        css = '.accordion-collapse';\r\n        break;\r\n    }\r\n\r\n    if (css) {\r\n      me.queryAll(css).forEach(el => {\r\n        GSDOM.toggleClass(el, oldValue, false);\r\n        GSDOM.toggleClass(el, newValue, true);\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const id = GSID.id;\r\n    const html = await me.#render(id);\r\n    return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n  }\r\n\r\n  async #render(id) {\r\n    const me = this;\r\n    const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n    const html = await Promise.all(list);\r\n    return html.join('');\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get cssItem() {\r\n    return GSAttr.get(this, 'css-item', '');\r\n  }\r\n\r\n  set cssItem(val = '') {\r\n    GSAttr.set(this, 'css-item', val);\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head');\r\n  }\r\n\r\n  set cssHead(val = '') {\r\n    return GSAttr.set(this, 'css-head', val);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body');\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, 'css-body', val);\r\n  }\r\n\r\n  async #html(id, el) {\r\n    const me = this;\r\n    const itemid = GSID.id;\r\n    const tpl = GSItem.getBody(el);\r\n    const title = me.#getTitle(el);\r\n    const message = me.#getMessage(el);\r\n    const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n    const isVisible = me.#isVisible(el);\r\n    return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n  }\r\n\r\n  #getTitle(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #getMessage(el) {\r\n    return GSAttr.get(el, 'message');\r\n  }\r\n\r\n  #isVisible(el) {\r\n    return GSAttr.getAsBool(el, 'visible', false);\r\n  }\r\n\r\n  #getAutoclose(el) {\r\n    return GSAttr.getAsBool(el, 'autoclose', true);\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, activeCSS, !me.#state);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), 'show', false);\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, 'active', me.#state);\r\n        }\r\n        if (!me.select) me.#button?.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, oldValue, false);\r\n            GSDOM.toggleClass(el, newValue, true);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, 'active', me.#state);\r\n        if (name == 'disable') return GSAttr.set(me.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button type=\"${me.type}\" class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type', 'button');\r\n    }\r\n\r\n    set type(val = '') {\r\n        return GSAttr.set(this, 'type', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, oldValue, false);\r\n         GSDOM.toggleClass(el, newValue, true);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, 'show', me.visible);\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDialog class\r\n * @module components/GSDialog\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Native dialog with Bootstrap support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDialog extends GSElement {\r\n\r\n  static CSS = 'rounded shadow-sm';\r\n  static HEADER_CSS = 'p-3';\r\n  static TITLE_CSS = 'fs-5 fw-bold text-muted';\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-dialog', GSDialog);\r\n    Object.seal(GSDialog);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        if (!me.#dialog.open) me.#dialog.showModal();\r\n        me.focusable()?.focus();\r\n      } else {\r\n        me.#dialog.close();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'dialog', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(me.#dialog, 'keydown', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'dialog', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable && e.key === 'Escape') return GSEvent.prevent(e);\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'dialog', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'dialog', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSDialog.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'dialog' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'dialog', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.dialog-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.dialog-cancel');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.card-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */\r\n  large() {\r\n\r\n  }\r\n\r\n  /**\r\n   * N/A - compatibiltiy with gs-modal\r\n   */  \r\n  extra() {\r\n    \r\n  }\r\n\r\n  get #dialog() {\r\n    return this.query('dialog');\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.card-title');\r\n    return this.query('.card-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    //return this.#findSlotOrEl('body', '.card-body');\r\n    return this.query('.card-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, \"css\", GSDialog.CSS);\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", GSDialog.HEADER_CSS);\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", GSDialog.TITLE_CSS);\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"p-0\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, \"css\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n        <dialog class=\"p-0 border-0 ${me.css}\">\r\n        <div class=\"card\">\r\n            <div class=\"card-header user-select-none ${me.cssHeader}\">\r\n              <div class=\"card-title ${me.cssTitle}\">\r\n                <slot name=\"title\"></slot>\r\n              </div>\r\n            </div>\r\n            <div class=\"card-body ${me.cssBody}\">\r\n              <slot name=\"body\"></slot>\r\n            </div>\r\n            <div class=\"card-footer d-flex user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n              <button class=\"btn ${me.cssButtonCancel} dialog-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n              &nbsp;\r\n              <button class=\"btn ${me.cssButtonOk} dialog-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n            </div>\r\n        </div>\r\n        </dialog>\r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, 'show', me.visible);\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n          me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });\r\n\r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, oldValue, false);\r\n      GSDOM.toggleClass(me.#button, newValue, true);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormGroup class\r\n * @module components/GSFormGroup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFormGroup extends GSElement {\r\n\r\n   static CSS_LABEL_CELL = 'col-md-4 col-sm-4 col-xs2 text-md-end';\r\n   static CSS_LABEL = 'user-select-none fw-small fw-light text-secondary';\r\n   static CSS_ICON = 'bi bi-info-circle-fill text-primary me-2 fs-5';\r\n\r\n   static {\r\n      customElements.define('gs-form-group', GSFormGroup);\r\n      Object.seal(GSFormGroup);\r\n   }\r\n\r\n   constructor() {\r\n      super();\r\n      this.#validateAllowed();\r\n  }\r\n\r\n  #validateAllowed() {\r\n      const me = this;\r\n      let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'body');\r\n      if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"body\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n      list = Array.from(me.children).filter(el => !el.slot);\r\n      const tagList = ['TEMPLATE'];\r\n      const allowed = GSDOM.isAllowed(list, tagList);\r\n      if (!allowed) throw new Error(GSDOM.toValidationError(me, tagList));\r\n  }\r\n\r\n   get isFlat() {\r\n      const me = this;\r\n      return me.hasAttribute('flat') ? super.isFlat : true;\r\n   }\r\n\r\n   async getTemplate() {\r\n      const me = this;\r\n      switch (me.layout) {\r\n         case 'floating': return me.#getFloating();\r\n         case 'vertical': return me.#getVertical();\r\n         default: return me.#getHorizontal();\r\n      }\r\n   }\r\n\r\n   #getFloating() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n         <div class=\"form-floating ${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n            ${me.#label}\r\n         </div>\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   #getVertical() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row ${me.css}\">\r\n        <div class=\"col-12\">\r\n            ${me.#label}\r\n        </div>\r\n         <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n            ${me.#input}\r\n         </div>\r\n         ${me.#info}   \r\n      </div>      \r\n      `;\r\n   }\r\n\r\n   #getHorizontal() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"row form-group ${me.css}\">\r\n         ${me.#labelWrap}\r\n         ${me.#field}\r\n         ${me.#info}\r\n      </div>`;\r\n   }\r\n\r\n   get #input() {\r\n      const me = this;\r\n      const tpl = me.query('template');\r\n      if (tpl) return tpl.innerHTML;\r\n      return `<input is=\"gs-ext-input\" class=\"${me.#cssField} ${me.cssField}\" \r\n               id=\"${me.name}\" name=\"${me.name}\" type=\"${me.#type}\" ${me.#placeholder}\r\n               ${me.#autocopy} ${me.#autoselect}\r\n               ${me.#autocomplete} ${me.#autocapitalize} ${me.#multiple} ${me.#checked}\r\n               ${me.#mask} ${me.#pattern} ${me.#value} ${me.#list} ${me.#accept}\r\n               ${me.#step} ${me.#min} ${me.#max} ${me.#value} \r\n               ${me.#minlength} ${me.#maxlength} title=\"${me.description}\"\r\n               ${me.#readonly} ${me.#required} ${me.#disabled}\r\n               >`;\r\n   }\r\n\r\n   get #label() {\r\n      const me = this;\r\n      return `<label class=\"${me.#cssLabel} ${me.cssLabel} user-select-none\" for=\"${me.name}\">${me.label}</label>`;\r\n   }\r\n\r\n   get #labelWrap() {\r\n      const me = this;\r\n      return `<div class=\"${me.cellLabel}\">${me.#label}</label></div>`;\r\n   }\r\n\r\n   get #cssField() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-input ms-0';\r\n      if (me.#isRange) return 'form-range';\r\n      return 'form-control';\r\n   }\r\n\r\n   get #cssLabel() {\r\n      const me = this;\r\n      if (me.#isCheckable) return 'form-check-label';\r\n      if (me.layout === 'floating') return 'ms-2';\r\n      return me.#isVertical ? 'form-label' : '';\r\n   }\r\n\r\n   get #cssCheck() {\r\n      const me = this;\r\n      if (me.#isCheckable) {\r\n         return me.#isSwitch ? 'form-check form-switch ps-3 fs-5' : 'form-check';\r\n      }\r\n      return '';\r\n   }\r\n\r\n   get #field() {\r\n      const me = this;\r\n      return `\r\n      <div class=\"${me.#cssCheck} ${me.cellField}\">\r\n         <slot name=\"body\">\r\n         ${me.#input}         \r\n         </slot>\r\n      </div>`;\r\n   }\r\n\r\n   get #info() {\r\n      const me = this;\r\n      if (!me.#hasTooltip) return '';\r\n      if (!me.#tooltip) return '';\r\n      if (me.hasIcon) return `\r\n      <div class=\"col-auto\">\r\n         ${me.#tooltip}\r\n         ${me.#icon}\r\n      </div>`;\r\n      return me.#tooltip;\r\n   }\r\n\r\n   get #autocopy() {\r\n      return this.autocopy ? `autocopy` : '';\r\n   }\r\n\r\n   get #autoselect() {\r\n      return this.autoselect ? `autocopy` : '';\r\n   }\r\n\r\n   get hasIcon() {\r\n      return GSAttr.get(this, 'icon') !== 'false';\r\n   }\r\n\r\n   get #icon() {\r\n      const me = this;\r\n      return me.hasIcon ? `<i class=\"${me.icon}\"></i>` : '';\r\n   }\r\n\r\n   get #type() {\r\n      const me = this;\r\n      return me.#isSwitch ? 'checkbox' : me.type;\r\n   }\r\n\r\n   get #isCheckable() {\r\n      const me = this;\r\n      return me.#isChecked || me.#isRadio || me.#isSwitch;\r\n   }\r\n\r\n   get #hasTooltip() {\r\n      return customElements.get('gs-tooltip');\r\n   }\r\n\r\n   get #tooltip() {\r\n      const me = this;\r\n      const tgt = me.hasIcon ? '' : `target=\"${me.name}\"`;\r\n      return me.description.trim() ? `<gs-tooltip placement=\"${me.placement}\" title=\"${me.description}\" ${tgt}></gs-tooltip>` : '';\r\n   }\r\n\r\n   get #placeholder() {\r\n      return this.placeholder ? `placeholder=${this.placeholder}` : '';\r\n   }\r\n\r\n   get #pattern() {\r\n      const me = this;\r\n      return me.#isText && me.pattern ? `pattern=${me.pattern}` : '';\r\n   }\r\n\r\n   get #mask() {\r\n      const me = this;\r\n      return me.#isText && me.mask ? `mask=${me.mask}` : '';\r\n   }\r\n\r\n   get #disabled() {\r\n      return this.disabled ? `disabled` : '';\r\n   }\r\n\r\n   get #checked() {\r\n      const me = this;\r\n      return me.#isCheckable && me.checked ? `checked` : '';\r\n   }\r\n\r\n   get #isVertical() {\r\n      return this.layout === 'vertical';\r\n   }\r\n\r\n   get #isChecked() {\r\n      return this.type === 'checkbox';\r\n   }\r\n\r\n   get #isRadio() {\r\n      return this.type === 'radio';\r\n   }\r\n\r\n   get #isSwitch() {\r\n      return this.type === 'switch';\r\n   }\r\n\r\n   get #isNumber() {\r\n      return this.type === 'number';\r\n   }\r\n\r\n   get #isRange() {\r\n      return this.type === 'range';\r\n   }\r\n\r\n   get #isText() {\r\n      return this.type === 'text';\r\n   }\r\n\r\n   get #isPassword() {\r\n      return this.type === 'passsword';\r\n   }\r\n\r\n   get #isEmail() {\r\n      return this.type === 'email';\r\n   }\r\n\r\n   get #isURL() {\r\n      return this.type === 'url';\r\n   }\r\n\r\n   get #isFile() {\r\n      return this.type === 'file';\r\n   }\r\n\r\n   get #multiple() {\r\n      return this.multiple ? `multiple` : '';\r\n   }\r\n\r\n   get #readonly() {\r\n      return this.readonly ? `readonly` : '';\r\n   }\r\n\r\n   get #required() {\r\n      return this.required ? `required` : '';\r\n   }\r\n\r\n   get #accept() {\r\n      const me = this;\r\n      return me.#isFile && me.accept ? `accept=${me.accept}` : '';\r\n   }\r\n\r\n   get #autocapitalize() {\r\n      return this.autocapitalize ? `autocapitalize=${this.autocapitalize}` : '';\r\n   }\r\n\r\n   get #autocomplete() {\r\n      return this.autocomplete ? `autocomplete=${this.autocomplete}` : '';\r\n   }\r\n\r\n   get #value() {\r\n      return this.value ? `value=${this.value}` : '';\r\n   }\r\n\r\n   get #list() {\r\n      return this.list ? `list=${this.list}` : '';\r\n   }\r\n\r\n   get #max() {\r\n      const me = this;\r\n      return isNaN(me.max) ? '' : `max=\"${me.max}\"`;\r\n   }\r\n\r\n   get #min() {\r\n      const me = this;\r\n      return isNaN(me.min) ? '' : `min=\"${me.min}\"`;\r\n   }\r\n\r\n   get #maxlength() {\r\n      const me = this;\r\n      return isNaN(me.maxlength) ? '' : `maxlength=\"${me.maxlength}\"`;\r\n   }\r\n\r\n   get #minlength() {\r\n      const me = this;\r\n      return isNaN(me.minlength) ? '' : `minlength=\"${me.minlength}\"`;\r\n   }\r\n\r\n   get #step() {\r\n      const me = this;\r\n      return isNaN(me.step) ? '' : `step=\"${me.step}\"`;\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', val);\r\n   }\r\n\r\n   get cellLabel() {\r\n      return GSAttr.get(this, 'cell-label', GSFormGroup.CSS_LABEL_CELL);\r\n   }\r\n\r\n   set cellLabel(val = '') {\r\n      return GSAttr.set(this, 'cell-label', val);\r\n   }\r\n\r\n   get cellField() {\r\n      const me = this;\r\n      const val = (me.layout === 'horizontal') ? '6' : '11';\r\n      return GSAttr.get(me, 'cell-field', `col-md-${val} col-sm-${val} col-xs11`);\r\n   }\r\n\r\n   set cellField(val = '') {\r\n      return GSAttr.set(this, 'cell-field', val);\r\n   }\r\n\r\n   get cssLabel() {\r\n      return GSAttr.get(this, 'css-label', GSFormGroup.CSS_LABEL);\r\n   }\r\n\r\n   set cssLabel(val = '') {\r\n      return GSAttr.set(this, 'css-label', val);\r\n   }\r\n\r\n   get cssField() {\r\n      const me = this;\r\n      const mono = me.mask?.trim().length > 0 ? ' font-monospace ' : '';\r\n      return mono + GSAttr.get(this, 'css-field', '');\r\n   }\r\n\r\n   set cssField(val = '') {\r\n      return GSAttr.set(this, 'css-field', val);\r\n   }\r\n\r\n   /**\r\n    * Visual layout (horizontal | vertical | floating)\r\n    */\r\n   get layout() {\r\n      return GSAttr.get(this, 'layout', 'horizontal');\r\n   }\r\n\r\n   set layout(val = '') {\r\n      return GSAttr.set(this, 'layout', val);\r\n   }\r\n\r\n   get description() {\r\n      return GSAttr.get(this, 'description', '');\r\n   }\r\n\r\n   set description(val = '') {\r\n      return GSAttr.set(this, 'description', val);\r\n   }\r\n\r\n   get placement() {\r\n      const me = this;\r\n      const dft = me.hasIcon ? 'right' : 'top';\r\n      return GSAttr.get(this, 'placement', dft);\r\n   }\r\n\r\n   set placement(val = '') {\r\n      return GSAttr.set(this, 'placement', val);\r\n   }\r\n\r\n   get icon() {\r\n      return GSAttr.get(this, 'icon', GSFormGroup.CSS_ICON);\r\n   }\r\n\r\n   set icon(val = '') {\r\n      return GSAttr.set(this, 'icon', val);\r\n   }\r\n\r\n   get label() {\r\n      return GSAttr.get(this, 'label', '');\r\n   }\r\n\r\n   set label(val = '') {\r\n      return GSAttr.set(this, 'label', val);\r\n   }\r\n\r\n   get placeholder() {\r\n      return GSAttr.get(this, 'placeholder', '');\r\n   }\r\n\r\n   set placeholder(val = '') {\r\n      return GSAttr.set(this, 'placeholder', val);\r\n   }\r\n\r\n   get name() {\r\n      return GSAttr.get(this, 'name', '');\r\n   }\r\n\r\n   set name(val = '') {\r\n      return GSAttr.set(this, 'name', val);\r\n   }\r\n\r\n   get type() {\r\n      return GSAttr.get(this, 'type', 'text');\r\n   }\r\n\r\n   set type(val = '') {\r\n      return GSAttr.set(this, 'type', val);\r\n   }\r\n\r\n   get pattern() {\r\n      return GSAttr.get(this, 'pattern', '');\r\n   }\r\n\r\n   set pattern(val = '') {\r\n      return GSAttr.set(this, 'pattern', val);\r\n   }\r\n\r\n   get mask() {\r\n      return GSAttr.get(this, 'mask', '');\r\n   }\r\n\r\n   set mask(val = '') {\r\n      return GSAttr.set(this, 'mask', val);\r\n   }\r\n\r\n   get disabled() {\r\n      return this.hasAttribute('disabled');\r\n   }\r\n\r\n   set disabled(val = '') {\r\n      return GSAttr.toggle(this, 'disabled', GSUtil.asBool(val));\r\n   }\r\n\r\n   get checked() {\r\n      return this.hasAttribute('checked');\r\n   }\r\n\r\n   set checked(val = '') {\r\n      return GSAttr.toggle(this, 'checked', GSUtil.asBool(val));\r\n   }\r\n\r\n   get multiple() {\r\n      return this.hasAttribute('multiple');\r\n   }\r\n\r\n   set multiple(val = '') {\r\n      return GSAttr.toggle(this, 'multiple', GSUtil.asBool(val));\r\n   }\r\n\r\n   get readonly() {\r\n      return this.hasAttribute('readonly');\r\n   }\r\n\r\n   set readonly(val = '') {\r\n      return GSAttr.toggle(this, 'readonly', GSUtil.asBool(val));\r\n   }\r\n\r\n   get required() {\r\n      return this.hasAttribute('required');\r\n   }\r\n\r\n   set required(val = '') {\r\n      return GSAttr.toggle(this, 'required', GSUtil.asBool(val));\r\n   }\r\n\r\n   get accept() {\r\n      return GSAttr.get(this, 'accept', '');\r\n   }\r\n\r\n   set accept(val = '') {\r\n      return GSAttr.set(this, 'accept', val);\r\n   }\r\n\r\n   get autocopy() {\r\n      return this.hasAttribute('autocopy');\r\n  }\r\n\r\n  get autoselect() {\r\n      return this.hasAttribute('autoselect');\r\n  }\r\n     \r\n   get autocapitalize() {\r\n      return GSAttr.get(this, 'autocapitalize', '');\r\n   }\r\n\r\n   set autocapitalize(val = '') {\r\n      return GSAttr.set(this, 'autocapitalize', val);\r\n   }\r\n\r\n   get autocomplete() {\r\n      return GSAttr.get(this, 'autocomplete', '');\r\n   }\r\n\r\n   set autocomplete(val = '') {\r\n      return GSAttr.set(this, 'autocomplete', val);\r\n   }\r\n\r\n   get value() {\r\n      return GSAttr.get(this, 'value', '');\r\n   }\r\n\r\n   set value(val = '') {\r\n      return GSAttr.set(this, 'value', val);\r\n   }\r\n\r\n   get list() {\r\n      return GSAttr.get(this, 'list', '');\r\n   }\r\n\r\n   set list(val = '') {\r\n      return GSAttr.set(this, 'list', val);\r\n   }\r\n\r\n   get maxlength() {\r\n      return GSAttr.getAsNum(this, 'maxlength', NaN);\r\n   }\r\n\r\n   set maxlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'maxlength', val);\r\n   }\r\n\r\n   get minlength() {\r\n      return GSAttr.getAsNum(this, 'minlength', NaN);\r\n   }\r\n\r\n   set minlength(val = '') {\r\n      return GSAttr.setAsNum(this, 'minlength', val);\r\n   }\r\n\r\n   get max() {\r\n      return GSAttr.get(this, 'max', NaN);\r\n   }\r\n\r\n   set max(val = '') {\r\n      return GSAttr.setAsNum(this, 'max', val);\r\n   }\r\n\r\n   get min() {\r\n      return GSAttr.get(this, 'min', NaN);\r\n   }\r\n\r\n   set min(val = '') {\r\n      return GSAttr.setAsNum(this, 'min', val);\r\n   }\r\n\r\n   get step() {\r\n      return GSAttr.getAsNum(this, 'step', NaN);\r\n   }\r\n\r\n   set step(val = '') {\r\n      return GSAttr.setAsNum(this, 'step', val);\r\n   }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Renderer for panel layout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSLayout extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-layout', GSLayout);\r\n        Object.seal(GSLayout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#generateHtml(el));\r\n        const html = await Promise.all(list);\r\n        const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n        const top = me.isFlat ? '' : 'vh-100';\r\n        return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n    }\r\n\r\n    /**\r\n     * Determine if gs-layout is nested in another layout\r\n     * If nested, rendering is flat.\r\n     * @returns {boolean}\r\n     */\r\n    get isFlat() {\r\n        const me = this;\r\n        if (me.owner instanceof GSLayout) return true;\r\n\r\n        const el = me.closest('gs-layout');\r\n        if (el && el !== me) return true;\r\n\r\n        const parent = GSComponents.getOwner(me); // me.parentElement\r\n        const style = window.getComputedStyle(parent);\r\n        return style.display === 'flex' && style.flexGrow !== '0';\r\n    }\r\n\r\n    get anchor() {\r\n        return 'afterend@self';\r\n    }\r\n\r\n    /**\r\n     * Generate html injection source for an gs-item\r\n     * \r\n     * @async\r\n     * @param {HTMLElement} el \r\n     * @returns {Promise<string>}\r\n     */\r\n    async #generateHtml(el) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const id = GSAttr.get(el, 'id');\r\n        const name = GSAttr.get(el, 'name');\r\n        const tpl = GSItem.getBody(el, me.isFlat);\r\n\r\n        const style = me.#generateStyle(el);\r\n        const fixed = style.length > 10 ? true : false;\r\n        const cls = me.#generateClass(el, fixed);\r\n\r\n        const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n\r\n        if (res) {\r\n            const pos = me.#splitter(el);\r\n            if (pos == 0) return child;\r\n            let resize = '';\r\n            if (pos > 0) {\r\n                resize = me.isVertical ? 'top' : 'start';\r\n            } else {\r\n                resize = me.isVertical ? 'bottom' : 'end';\r\n            }\r\n            const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n            return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n        }\r\n\r\n        return child;\r\n    }\r\n\r\n    /**\r\n     * Generate min & max width / height for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    #generateStyle(el) {\r\n        const me = this;\r\n        const sfx = me.isVertical ? 'height' : 'width';\r\n        const max = GSAttr.getAsNum(el, 'max', 0);\r\n        const min = GSAttr.getAsNum(el, 'min', 0);\r\n        const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n        const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n        return ['style=\"', smax, smin, '\"'].join('');\r\n    }\r\n\r\n    /**\r\n    * Generate list of css classes for an gs-item\r\n    * @param {HTMLElement} el \r\n    * @returns {string}\r\n    */\r\n    #generateClass(el, fixed = false) {\r\n        const me = this;\r\n        const res = me.#resizable(el);\r\n\r\n        const css = GSAttr.get(el, 'css');\r\n        let vpos = GSAttr.get(el, 'v-pos');\r\n        let hpos = GSAttr.get(el, 'h-pos');\r\n\r\n        hpos = hpos ? `justify-content-${hpos}` : '';\r\n        vpos = vpos ? `align-items-${vpos}` : '';\r\n\r\n        const cls = ['d-flex', hpos, vpos];\r\n        if (res == false && fixed == false) cls.push('flex-fill');\r\n\r\n        cls.push(css);\r\n\r\n        return cls.join(' ');\r\n    }\r\n\r\n    /**\r\n     * Detect splitter target (previous | next | not supported)\r\n     * @param {HTMLElement} el \r\n     * @returns {number} -1|0|1\r\n     */\r\n    #splitter(el) {\r\n        const me = this;\r\n        const start = el.previousElementSibling;\r\n        const end = el.nextElementSibling;\r\n        if (!end && !start) return 0;\r\n        if (!end) return -1;\r\n        if (!start) return 1;\r\n\r\n        if (!me.#resizable(end)) return 1;\r\n        if (!me.#resizable(start)) return -1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Check if gs-item element has gs-splitter\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    #resizable(el) {\r\n        return GSAttr.getAsBool(el, 'resizable', false);\r\n    }\r\n\r\n    /**\r\n     * Check if layout is vertical or horizontal\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n    }\r\n\r\n    /**\r\n     * Get user defined css for a layout panel\r\n     * @returns {string}\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n\r\n        const icon = GSItem.getIcon(el);\r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form));\r\n\r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit' });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  get #size() {\r\n    switch (this.size) {\r\n      case 'extra' : return 'modal-xl';\r\n      case 'large' : return 'modal-lg';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggle(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggle(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, css, true);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`slot[name=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get size() {\r\n    return GSAttr.get(this, 'size', '');\r\n  }\r\n\r\n  set size(val = '') {\r\n    GSAttr.set(this, 'size', val);\r\n  }\r\n\r\n  get title() {\r\n    //return this.#findSlotOrEl('title', '.modal-title');\r\n    return this.query('.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    // return this.#findSlotOrEl('body', '.modal-body');\r\n    return this.query('.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'button-align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'button-align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered ${me.#size}\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 user-select-none ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 user-select-none justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !== '#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs = GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, 'visible', true);\r\n    GSDOM.toggleClass(me.#closeEl, 'invisible', !me.closable);\r\n    GSDOM.toggleClass(me.#backdropEl, 'show', me.backdrop && me.visible);\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, 'show', me.visible);\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : 'show', true);\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, 'invisible', !(me.backdrop && me.visible));\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${oldValue}`, false);\r\n    GSDOM.toggleClass(me.#canvasEl, `offcanvas-${newValue}`, true);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, oldValue, false);\r\n    GSDOM.toggleClass(me.#canvasEl, newValue, true);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop', me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\tglobalThis.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent || '');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, 'invisible', !me.visible);\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(() => {\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav user-select-none ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, 'show', true);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            // GSDOM.setHTML(me, '');\r\n            // me.firstChild?.remove();\r\n            Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, 'show', false);\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop file/s here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, GSFileBox.CSS, true);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" accept=\"${me.accept}\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    get accept() {\r\n        return GSAttr.get(this, 'accept', '');\r\n    }\r\n\r\n    set accept(val = '') {\r\n        return GSAttr.set(this, 'accept');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        // input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        \r\n        let records = [];\r\n        if (Array.isArray(data)) {\r\n            records = data;\r\n        } else if (Array.isArray(data.data)) {\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        if (append) {\r\n            me.#data = me.#data.concat(records);\r\n        } else {\r\n            me.#page = 1;\r\n            me.#data = records;\r\n        }\r\n        \r\n        me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.getData(me.skip, me.limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    #notify(name = 'data', data) {\r\n        GSEvent.sendDelayed(1, this, name, data, true);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    #map = [];\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    connectedCallback() {\r\n        this.#loadMap();\r\n    }\r\n\r\n    async #loadMap() {\r\n        const me = this;\r\n        const data = await GSLoader.loadSafe(me.src, 'GET', null, true);\r\n        me.#map = Array.isArray(data) ? data : Object.entries(data);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        const cspan = me.colspan ? `colspan=\"${me.colspan}\"` : '';\r\n\r\n        return `<th scope=\"col\" data-sortable=\"${me.sortable}\" data-order=\"${me.#orderID}\" name=\"${me.name}\" ${cspan} class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get #orderID() {\r\n        const me = this;\r\n        if(me.sortable && me.direction) return me.direction === 'asc' ? 1 : -1;\r\n        return 0;\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get direction() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'direction', '');\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    get colspan() {\r\n        return GSAttr.get(this, 'colspan', '');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filterDef() {\r\n        return this.querySelector('gs-item[filter=\"true\"]');\r\n    }\r\n\r\n    get mapDef() {\r\n        return this.querySelector('gs-item[map=\"true\"]');\r\n    }\r\n\r\n    get ref() {\r\n        return GSAttr.get(this.mapDef, 'ref');\r\n    }\r\n\r\n    get src() {\r\n        return GSAttr.get(this.mapDef, 'src');\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.filterDef);\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.mapDef);\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    get #mapping() {\r\n        const me = this;\r\n        if (me.src) return me.#map;\r\n        if (me.#map.length === 0) me.#map =  me.maps.map(el => [GSAttr.get(el, 'value'), GSAttr.get(el, 'map')]);\r\n        return me.#map;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        return {\r\n            ref : me.ref,\r\n            name: me.name,\r\n            title: me.title,\r\n            width: me.width,\r\n            sortable: me.sortable,\r\n            filter: me.filter,\r\n            idx: me.index,\r\n            type: me.type,\r\n            format: me.format,\r\n            css: me.css,\r\n            colspan: me.colspan,\r\n            map: me.#mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    get #columns() {\r\n        return GSDOM.queryAll(this, 'gs-column');\r\n    }\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            me.#columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            const cspan = headers.map(o => o.colspan ? parseInt(o.colspan) | 1 : 1).reduce((a, b) => a + b, 0);\r\n            rows.push(me.#emptyRow(cspan));\r\n        }\r\n\r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        let ref = hdr.ref ? rec[hdr.ref] : val;\r\n        const map = hdr.map?.filter(o => o[0] === '' + ref);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        const cspan = hdr.colspan ? `colspan=\"${hdr.colspan}\"` : '';\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\" ${cspan}>${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n            case 'date':\r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'boolean':\r\n            case 'number':\r\n                break;\r\n            case 'currency':\r\n                const opt = { style: 'currency', currency: hdr.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data: data, evt: evt }, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    get isFilterable() {\r\n        return this.#headers.filter(o => o.filter).length > 0;\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        GSEvent.sendDelayed(10, me.self, 'data', e.detail);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data: me.#selected, evt: data.evt });\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSAttr from \"../../base/GSAttr.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n import GSData from \"../../base/GSData.mjs\";\r\n import GSUtil from \"../../base/GSUtil.mjs\";\r\n \r\n /**\r\n  * table header sorting coluns\r\n  * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n  * @class\r\n  * @extends {HTMLTableRowElement}\r\n  */\r\n export default class GSTableSort extends HTMLTableRowElement {\r\n \r\n     #sc = 0;\r\n \r\n     static {\r\n         customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n         Object.seal(GSTableSort);\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n         GSComponents.store(me);\r\n         me.onReady();\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     onReady() {\r\n         const me = this;\r\n         requestAnimationFrame(() => {\r\n             me.#autoSortable.forEach((el, i) => me.#onColumnSort(el, i > 0));\r\n         });\r\n     }\r\n \r\n     get #autoSortable() {\r\n         return this.#sortable.filter(el => el.dataset.order != '0');\r\n     }\r\n \r\n     get #sorted() {\r\n         return this.#sortable.filter(el => el.dataset.idx != '0');\r\n     }\r\n \r\n     get #sortable() {\r\n         return GSDOM.queryAll(this, 'th[data-sortable=\"true\"]', false, false);\r\n     }\r\n \r\n     #onClick(e) {\r\n         const me = this;\r\n         const el = e.composedPath().shift();\r\n         if (el.tagName !== 'TH') return;\r\n         if (el.dataset.sortable != 'true') return;\r\n         const ord = GSUtil.asNum(el.dataset.order);\r\n         el.dataset.order = ord > 0 ? -1 : 1;\r\n         requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n     }\r\n \r\n     #onColumnSort(el, append = false) {\r\n \r\n         const me = this;\r\n \r\n         const ord = GSUtil.asNum(el.dataset.order, -1);\r\n \r\n         if (append) {\r\n             me.#sc = 1 + Math.max.apply(0, me.#sortable.map(el => GSUtil.asNum(el.dataset.idx, 0)));\r\n             GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n         } else {\r\n             me.#sc = 1;\r\n             GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                 el.dataset.idx = 0;\r\n                 el.dataset.order = 0;\r\n                 GSDOM.toggleClass(el, 'sorting_desc sorting_asc table-active', false);\r\n             });\r\n         }\r\n \r\n         el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n         el.dataset.idx = me.#sc;\r\n         el.dataset.order = ord;\r\n         GSDOM.toggleClass(el, 'table-active', true);\r\n \r\n \r\n         let sort = [];\r\n         me.#sorted.forEach(el => {\r\n             const ord = GSUtil.asNum(el.dataset.order, 1);\r\n             const idx = GSUtil.asNum(el.dataset.idx, 1);\r\n             const name = GSAttr.get(el, 'name', el.innerText);\r\n             const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n             sort.push(cfg);\r\n         });\r\n         sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n \r\n         GSEvent.send(me, 'sort', sort, true);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = me.pages === 0 ? 0 : (Math.floor((me.store.page - 1) / me.pages) * me.pages + 1);\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const el = me.query('div');\r\n    GSDOM.toggleClass(el, oldVal, false);\r\n    GSDOM.toggleClass(el, newVal, true);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, oldValue, false);\r\n      GSDOM.toggleClass(el, newValue, true);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, 'show', true);\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, 'show', false);\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n"],"names":["GSID","static","this","id","prefx","next","s","l","length","h","i","charCodeAt","Object","freeze","GSBase","HTMLElement","refid","observedAttributes","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isProtocol","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","nocache","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","store","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","window","injectStyle","GSLog","msg","print","forced","logging","fn","console","log","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","val","isNumber","trim","str","x","g","word","toUpperCase","slice","split","map","capitalize","join","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","o","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","bind","callback","animating","data","blob","Blob","createObjectURL","createElement","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","src","import","GSFunction","isFunction","isValid","callFunctionAsync","constructor","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSAttr","isHTMLElement","setAttribute","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","filter","GSDOM","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","fromNode","children","concat","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","text","GSEvent","addEventListener","prevent","code","ctrlKey","shiftKey","loaded","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","eventKey","elmap","getElementMap","eventMap","key","fnkey","defineProperty","gsid","writable","cfg","removeListener","m","size","cache","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","GSComponents","Set","els","unlisten","signal","AbortSignal","find","waitForInternal","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listener","onStyles","listenStyles","GSLoader","GS_TEMPLATE_URL","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","documentElement","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSDataListExt","HTMLDataListElement","super","objToHTML","setHTML","entries","GSComboExt","HTMLSelectElement","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","onObserve","forRemove","filtersDel","filtersAdd","hasFilters","hasFiltersAdd","hasFiltersDel","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","isFunctions","getFilter","exec","create","disconnect","GSFormExt","HTMLFormElement","registerFilter","onMonitorFilter","onMonitorResult","onMonitorRemove","attachEvents","deattachListeners","attach","onSubmit","onAction","action","actions","reset","reportValidity","toObject","source","valid","buttonOK","buttonCancel","buttonReset","GSInputExt","HTMLInputElement","y","_","masks","placeholder","mask","toPattern","onDataChange","strict","optimized","chars","cnt","special","autocopy","hasAttribute","autoselect","maskType","maxLength","onKeyDown","onKeyPress","onInput","onChange","onPaste","onBlur","onClick","onMonitor","togleEl","isMatch","isFormElement","show","hide","isInList","clean","p","dataGroup","clipboard","writeText","select","required","clipboardData","getData","formatMask","pos1","selectionStart","pos2","selectionEnd","handle","pos","setSelectionRange","canceled","title","onNumberInput","onTextInput","substring","updateText","vld","lastIndex","c","toLocaleLowerCase","toLocaleUpperCase","capitalizeAll","GSNavLinkExt","HTMLAnchorElement","cl","selectable","trigger","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","isCollapsible","bsDismiss","bsToggle","inject","toClicker","dismiss","getTarget","onToggle","onDismiss","onInject","comps","gs","allComps","allRoot","isType","isHidden","hidden","neg","flip","getByType","objsH","getHidden","getVisible","faded","SPEED","removeEl","isComp","isToggle","findTarget","onToggleBefore","onToggleAfter","onToggleHandler","isBefore","itm","hideExt","isDismiss","close","dismissValues","toggleValues","tgt","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","ready","removed","content","proxied","opts","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidProtocol","online","anchor","updateUI","getStyle","getTemplate","evt","on","off","attachEvent","removeEvent","isAllowRender","isConfig","injection","ref","removeFlat","onOrientation","onReady","pe","styleChange","attachShadow","mode","useTemplate","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","aplyTemplate","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","update","date","toLocaleTimeString","interval","setInterval","clearInterval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","isMondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","formatHour","hh","meridiem","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","kk","W","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","options","currency","NumberFormat","GSItem","validate","tags","getFlat","getAnchor","acss","cls","generateItems","generateItem","generateArgs","items","kv","numOrString","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","toType","childs","isObject","_nam","_val","_typ","GSAccordion","observeAttributes","genericItems","cssItem","cssHead","cssBody","itemid","getTitle","message","getMessage","autoclose","getAutoclose","isVisible","loadData","GSAlert","dismissCSS","state","btn","activeCSS","dismissible","GSButton","disable","button","blur","disabled","icon","dissmis","comment","setAsBool","GSCenter","vel","GSContext","caller","attached","submenus","menu","visible","childElementCount","renderMenuDOM","attachTarget","onResize","attachSubmenu","attachOptions","reattach","dark","Event","open","popup","position","top","transform","createMenu","renderMenu","hasSubmenu","sub","onPopup","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","updateSubmenus","option","onSubmenu","li","ul","offsetTop","targets","isSub","renderSub","renderChild","header","GSDialog","dialog","showModal","focusable","focus","onForm","onEscape","isAcceptedAction","isOk","forms","form","reportForm","submitForm","info","closable","waitEvent","confirm","prompt","buttonCancelEl","buttonOkEl","align","footer","findSlotOrEl","large","extra","buttonOk","cssButtonOk","cssButtonCancel","CSS","cssContent","cssHeader","HEADER_CSS","cssTitle","TITLE_CSS","cssFooter","GSDropdown","updatePos","w","parseInt","ww","wh","updateSub","menustyle","substyle","ml","mw","sl","sw","attachItems","getAttrs","rtl","attrs","GSFormGroup","validateAllowed","tagList","layout","getFloating","getVertical","getHorizontal","cssCheck","cellField","input","label","labelWrap","field","cssField","autocomplete","autocapitalize","multiple","accept","step","min","max","minlength","maxlength","description","readonly","cssLabel","cellLabel","isCheckable","isRange","isVertical","isSwitch","hasTooltip","tooltip","hasIcon","isChecked","isRadio","isPassword","isEmail","isURL","CSS_LABEL_CELL","CSS_LABEL","CSS_ICON","GSLayout","generateHtml","display","flexGrow","resizable","generateStyle","fixed","generateClass","splitter","resize","sfx","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSModal","showEL","hideEL","normal","setSize","dlg","cssModal","GSNav","btns","getTemplateChild","isBar","cssnav","getCssNav","getCssNavWrap","cssactive","getCssActiveTab","contentTpl","hreftgt","GSOffcanvas","backdropEl","canvasEl","titleEl","closeEl","backdrop","updateAnim","updateShow","updateBackdrop","updatePlacement","updateCSS","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","headSlot","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","fromPlacement","isPlacementValid","margin","offh","offw","boundingRect","arect","updateArrow","offH","offW","srcH","srcW","calcFixed","inset","srect","getOffset","calcAbsolute","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","unfocus","isPopover","hasPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","bsTrigger","openable","GSPopup","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","validateCaller","comp","GSProgress","bar","percentage","fromLabel","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","cursor","autostore","full","isPreceeding","save","onMouseDown","onMouseUp","onMouseMove","updateX","updateY","dir","dx","GSTab","tabs","renderTab","panes","renderPane","renderPanel","tab","renderTabsVertical","renderTabsHorizontal","isReverse","csspane","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","cssNavWrap","actievCSS","activeTabCSS","cssNav","renderPaneFlat","renderPaneShadow","activePaneCSS","cssPane","GSTooltip","isTooltip","GSAttachment","file","directory","transfer","transferredFiles","files","f","File","fullPath","isImage","isVideo","isDirectory","traverse","roots","resolve","entry","reject","reader","createReader","read","readEntries","results","getEntries","getFile","some","webkitGetAsEntry","GSFileBox","dragging","cssInput","cssList","onDragenter","onDragleave","onDrop","listEl","fileEl","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","hasFile","dropEffect","pastedFile","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","GSStore","remote","skip","limit","page","total","hasSetter","reload","MODES","table","toURL","pages","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","formatFilter","formatSort","filterData","sortData","notify","encodeURIComponent","fromLiteral","sendDelayed","GSColumn","loadMap","clssort","sortable","cspan","colspan","orderID","renderFilter","renderFixed","renderFlexi","renderField","cssFilter","renderOptions","auto","isCombo","direction","counter","filterDef","mapDef","maps","mapping","toJSON","GSHeader","columns","filtered","available","cssColumns","GSTBody","HTMLTableSectionElement","onMenu","cssCell","cssRow","cssSelect","multiselect","rows","arrayToHTML","noDataText","reduce","emptyRow","innerText","cols","hdr","genRow","fmt","Number","isAppend","onRowSelect","row","isSelected","GSTable","selected","selectCSS","tableCSS","headerCSS","rowCSS","cellCSS","setCSS","dataID","waitFor","contextMenu","onColumnSort","onColumnFilter","onContextMenu","onData","isFilterable","processData","hasHeaders","prepareHeaders","renderTable","renderPage","recToHeader","defs","dom","ctx","GSTableSort","HTMLTableRowElement","sc","autoSortable","sorted","cellIndex","GSTableFilter","attachChangeListener","attachDataListener","getRoot","getValue","listID","getElementById","GSPagination","firstlast","nextprev","getHtml","previous","CSS_ITEM","onStore","GSNotification","BOTTOM_END","connectCallback","fromPosition","DEFAULT","native","success","danger","primary","secondary","light","requestPermission","showNative","showWeb","notification","Notification","clearNative","nn","isNativeSupported","isGranted","permission","GSToast","toast"],"mappings":"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"}