{"version":3,"file":"io.greenscreens.components.core.js","mappings":"mBAce,MAAMA,eAAeC,YAEnCC,SAAa,EAEb,GAAS,GAEEC,gCACV,MAAO,EACR,CAMAD,gBAEC,OADAF,QAAO,IACA,SAASA,QAAO,GACxB,CAOAE,gBAAgBE,GACf,IAAIC,EAAI,EACPC,EAAIF,EAAEG,OACNC,EAAI,EAEL,GAAIF,EAAI,EAEP,KAAOE,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAKzC,OAAOH,CACR,CAaAH,iBAAiBQ,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GACnG,MAAMC,EAAQ,IAAIC,YAAYN,EAAM,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IACrG,OAAON,EAAOU,cAAcH,EAC7B,CASAf,0BAA0BQ,EAASC,SAAUC,EAAMC,EAAM,IACxDQ,uBAAsB,KACrBrB,OAAOsB,UAAUZ,EAAQE,EAAMC,EAAI,GAErC,CAKAU,oBAEC,MAAMC,EAAKC,KAEX,GAAID,EAAGE,KAAOF,EAAGG,eAAgB,CAEhC,MAAMC,EAAO5B,OAAO6B,SAASL,EAAGE,KAGhC,GADYf,SAASmB,cAAc,eAAeF,OAIjD,YADAJ,EAAGO,SAIJ,MAAMC,EAAKR,EAAGS,SACRC,EAAYF,aAAcG,QAE5BH,IAAOE,IAEVF,EAAGI,QAAQR,KAAOA,EAEdJ,EAAGa,OACN1B,SAAS2B,KAAKC,YAAYP,GAG1BR,EAAGgB,sBAAsB,WAAYR,GAGlCR,EAAGiB,SACNT,EAAGU,GAAKV,EAAGU,GAAKV,EAAGU,GAAK1C,OAAO2C,SAC/BnB,GAAG,EAASQ,EAAGU,IAIlB,CAEKlB,EAAGiB,QACPjB,EAAGO,QAGL,CAKAa,uBAEC,MAAMpB,EAAKC,KACX,GAAID,EAAGiB,QAAUjB,GAAG,EAAQ,CAC3B,MAAMQ,EAAKrB,SAASmB,cAAc,IAAIN,GAAG,KACrCQ,GAAIA,EAAGD,QACZ,CACAP,EAAGqB,SAEJ,CASAC,yBAAyBlC,EAAMmC,EAAUC,GACxC,MAAMxB,EAAKC,KACXJ,uBAAsB,KACrBG,EAAGyB,kBAAkBrC,EAAMmC,EAAUC,EAAS,GAEhD,CAQAC,kBAAkBrC,EAAMmC,EAAUC,GAElC,CAKAf,SAEA,CAKAY,UAEA,CAMIK,eACH,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UACxF,CAMIC,eACH,MAAMC,EAAShC,KAAKgC,OACpB,IAAKA,EAAQ,OAAO,EACpB,MAAMC,EAAWC,SAASD,SAASE,QAAQ,IAAK,IAChD,MAAI,SAAWH,GAAUC,IAAaD,GAClC,UAAYA,GAAUC,IAAaD,CAExC,CAMII,cACH,OAAOpC,KAAKqC,SAAS,eACtB,CAQAA,SAASC,EAAQ,IAEhB,IAAKA,EAAO,OAAO,EACnB,MAAMC,EAASD,EAAME,cACrB,GAAId,UAAUC,cAAe,CAC5B,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IACnCA,EAAEC,MAAML,cAAcM,QAAQP,IAAW,IAC5CE,GAAM,EACP,IAEMA,CACR,CAEA,MAAMM,EAAQ,IAAIC,OAAO,GAAGV,IAAS,KAErC,QADYZ,UAAUI,UAAUmB,MAAMF,EAEvC,CAMA7C,eAEC,MAAMH,EAAKC,KAELyB,EAAW1B,EAAG0B,SACdW,EAAUrC,EAAGqC,QACbL,EAAWhC,EAAGgC,SACdmB,EAASnD,EAAGmD,OACZC,EAAMpD,EAAGoD,IAEf,QAAKpB,KAEO,WAARoB,IAAgC,IAAZf,MAIZ,YAARe,IAAiC,IAAZf,MAIb,WAARe,IAAiC,IAAb1B,MAIZ,YAAR0B,IAAkC,IAAb1B,MAIpB1B,EAAGsC,SAASa,MAKlB,CAMIC,UACH,OAAOnD,KAAKoD,aAAa,QAAU,EACpC,CAMIF,aACH,OAAOlD,KAAKoD,aAAa,WAAa,EACvC,CAMInD,UAEH,MAAMF,EAAKC,KACX,IAAIC,EAAMF,EAAGqD,aAAa,QAAU,GAEpC,GAAe,WAAXrD,EAAGoD,IACN,MAAO,KAAOlD,EAKf,GAAIF,GAAG,EACN,IACC,IAAIsD,EAAO,GAAGnB,SAASoB,SAASpB,SAASqB,WACrCtD,EAAIuD,WAAW,OAAMH,EAAOnB,SAASoB,QACrCrD,EAAIuD,WAAW,UAASH,OAAOI,GACnC,MAAMC,EAAM,IAAIC,IAAI1D,EAAKoD,GACzBK,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OACpC9D,EAAMyD,EAAIM,IAGX,CAFE,MAAOC,GACRC,QAAQC,IAAIF,EACb,CAGD,OAAOhE,CACR,CAMImE,WACH,MAAMrE,EAAKC,KACX,IAAIoE,EAAOrE,EAAGqD,aAAa,SAAW,GAQtC,OAPKgB,IACArE,EAAGE,IAAI6C,QAAQ,OAAS,EAC3BsB,EAAO,kBACGrE,EAAGE,IAAI6C,QAAQ,QAAU,IACnCsB,EAAO,aAGFA,CACR,CAMIC,YACH,OAAOrE,KAAKsE,iBAAiB,QAAS,QACvC,CAMIC,YACH,OAAOvE,KAAKsE,iBAAiB,QAAS,QACvC,CAMI1D,aACH,OAAOZ,KAAKsE,iBAAiB,OAC9B,CAMItD,aACH,OAAOhB,KAAKsE,iBAAiB,OAC9B,CAOItC,aACH,OAAOhC,KAAKoD,aAAa,WAAa,EACvC,CAMIoB,YACH,OAAOxE,KAAKoD,aAAa,UAAY,EACtC,CAEIqB,kBACH,OAAOzE,KAAKoD,aAAa,cAC1B,CAEIsB,oBACH,OAAO1E,KAAKoD,aAAa,kBAAoB,MAC9C,CAEIuB,gBACH,OAAO3E,KAAKoD,aAAa,YAC1B,CAEIwB,qBACH,OAAO5E,KAAKoD,aAAa,iBAC1B,CAOAkB,iBAAiBnF,EAAO,GAAI0F,EAAM,QAEjC,MAAe,UADH7E,KAAKoD,aAAajE,IAAS0F,EAExC,CAEI,QAEG,OAAIC,KAAKC,eAAe,eACbD,KAAKE,cAETC,cAAuD,QAAvCA,aAAaC,QAAQ,cACnD,QAGCC,OAAOC,KAAK7G,OACb,ECxZc,MAAM8G,cAEpB5G,SAAgB,IAAI6G,IAQpB7G,WAAWwC,EAAIsE,GACd,MAAMxF,EAAKC,KAKX,GAJIuF,aAAiBC,eACpBzF,GAAG,EAAO0F,IAAIxE,EAAIsE,GAGE,iBAAVA,EAAoB,CAC9B,MAAMG,EAAQ,IAAIF,cAClBE,EAAMC,YAAYJ,GAClBxF,GAAG,EAAO0F,IAAIxE,EAAIyE,EACnB,CAEA,OAAO3F,EAAG6F,IAAI3E,EAEf,CAOAxC,cAAcwC,GACb,OAAOjB,MAAK,EAAO6F,OAAO5E,EAC3B,CAOAxC,WAAWwC,GACV,OAAOjB,MAAK,EAAO4F,IAAI3E,EACxB,CAQAxC,gBAAgBwC,EAAIsE,GACnB,GAAIA,GAAmC,IAA1BA,EAAMO,SAAShH,OAAc,OAC1C,MAAMiB,EAAKsF,cACL9E,EAAKR,EAAG6F,IAAI3E,GAClB,OAAIV,GACGR,EAAG0F,IAAIxE,EAAIsE,EACnB,CAMWQ,oBACV,OAAOC,MAAMC,KAAK,IAAIX,IAAI,IAAID,eAAc,GAAQa,MAAK,CAACC,EAAGC,IAAMC,OAAOF,EAAE,IAAIG,cAAcF,EAAE,OAAMG,SACvG,CAKA9H,mBAAmB+H,EAAM,GAAIrG,EAAO,GACnC,GAAKqG,EACL,IACCrG,EAAOA,GAAQ5B,OAAO6B,SAASoG,GAC/B,MAAMd,EAAQ,IAAIF,cAClBE,EAAMC,YAAYa,GAClBnB,cAAcoB,SAAStG,EAAMuF,GAC7BxG,SAASwH,mBAAqBrB,cAAcU,MAG7C,CAFE,MAAO9B,GACRC,QAAQC,IAAIF,EACb,CACD,QAGCkB,OAAOwB,OAAOtB,eACduB,OAAOvB,cAAgBA,cACvB,MAAME,EAAQ,oHACdF,cAAcwB,YAAYtB,EAC3B,ECrFc,MAAMuB,kBAAkBC,gBAEtC,GAAY,KAEZC,cACCC,QACA,MAAMlH,EAAKC,KACND,EAAGmH,QAAOnH,EAAGmH,MAAQ3I,OAAO2C,UAC5BnB,EAAGoH,QACRpH,GAAG,EAAYqH,YAAYrH,GAAG,EAAQsH,KAAKtH,GAAK,GACjD,CAEAD,oBACA,CAEAqB,uBAEC,IADWnB,KACHmH,MAAO,OACf,MAAMzB,EAAQL,cAAc/E,OAFjBN,KAE2BkH,OACtC3I,OAAO+I,mBAAmBpI,SAAU,WAAYwG,EACjD,CAEA,KACC,MAAM3F,EAAKC,KAEX,IADcD,EAAG2F,MACL,OACZ6B,cAAcxH,GAAG,GAEjBsF,cAAcwB,YAAY9G,EAAGyH,OAAQzH,EAAGmH,OACxC,MAAMO,EAAQpC,cAAcO,IAAI7F,EAAGmH,OACnC3I,OAAO+I,mBAAmBpI,SAAU,WAAYuI,EACjD,CAMID,aACH,OAAOrC,OAAOoB,OAAOvG,KAAK0F,MAAMI,UAAU4B,KAAIC,GAAKA,EAAEC,UAASC,KAAK,GACpE,CAMInC,YACH,MAAM3F,EAAKC,KACX,OAAOmF,OAAOoB,OAAOrH,SAAS4I,aAAaC,QAAOC,GAAMA,EAAGC,YAAclI,IAAImI,KAC9E,CAMIf,YAEH,MAAkB,eADPnH,KACDmI,KADCnI,KAC0BgE,KAAKlB,QAAQ,QAAW,CAC9D,CAMIoE,YACH,OAAOlH,KAAKoD,aAAa,QAC1B,CAEI8D,UAAMkB,EAAM,IACf,OAAOpI,KAAKqI,aAAa,QAASD,EACnC,QAGCE,eAAeC,OAAO,cAAezB,UAAW,CAAE0B,QAAS,SAC3DrD,OAAOwB,OAAOG,UACf,EC1Ec,MAAM2B,mBAAmBC,iBAEvC,GAAY,KAEZ1B,cACCC,QACA,MAAMlH,EAAKC,KACND,EAAGmH,QAAOnH,EAAGmH,MAAQ3I,OAAO2C,UACjCnB,GAAG,EAAYqH,YAAYrH,GAAG,EAAQsH,KAAKtH,GAAK,EACjD,CAEAD,oBACA,CAEAqB,uBACC,MACMuE,EAAQL,cAAc/E,OADjBN,KAC2BkH,OACtC3I,OAAO+I,mBAAmBpI,SAAU,WAAYwG,EACjD,CAEA,KACC,MAAM3F,EAAKC,KAEX,IADcD,EAAG2F,MACL,OACZ6B,cAAcxH,GAAG,GAEjBsF,cAAcwB,YAAY9G,EAAGyH,OAAQzH,EAAGmH,OACxC,MAAMO,EAAQpC,cAAcO,IAAI7F,EAAGmH,OACnC3I,OAAO+I,mBAAmBpI,SAAU,WAAYuI,EACjD,CAEID,aACH,OAAOrC,OAAOoB,OAAOvG,KAAK0F,MAAMI,UAAU4B,KAAIC,GAAKA,EAAEC,UAASC,KAAK,GACpE,CAEInC,YACH,MAAM3F,EAAKC,KACX,OAAOmF,OAAOoB,OAAOrH,SAAS4I,aAAaC,QAAOC,GAAMA,EAAGC,YAAclI,IAAImI,KAC9E,CAEIhB,YACH,OAAOlH,KAAKoD,aAAa,QAC1B,CAEI8D,UAAMkB,EAAM,IACf,OAAOpI,KAAKqI,aAAa,QAASD,EACnC,QAGCjD,OAAOwB,OAAO8B,YACdH,eAAeC,OAAO,eAAgBE,WAAY,CAAED,QAAS,SAC9D,ECzCc,MAAMG,cAAcpK,OAEvBG,gCACV,MAAO,CAAC,YAAYkK,OAAO3B,MAAMvI,mBAClC,CAEA8C,kBAAkBrC,EAAMmC,EAAUC,GACjC,MAAMxB,EAAKC,KACX,GAAa,aAATb,EACJ,OAAOY,EAAG8I,WAAa9I,EAAGqB,UAAYrB,EAAGS,QAC1C,CAEAwG,cACCC,QACA,MAAMlH,EAAKC,KACXD,EAAG+I,SAAyB,GAAd/I,EAAGgJ,SAAoBhJ,EAAGiJ,QAAUL,MAAMM,WAEzD,CAQA5E,eACC,MAAMtE,EAAKC,KACX,IAAID,EAAG8I,WAAP,CACK9I,EAAGmH,QAAOnH,EAAGmH,MAAQ3I,OAAO2C,UAEjC,IACC,MAAMgI,QAAYC,MAAMpJ,EAAGE,KAC3B,IAAKiJ,EAAIE,GAAI,OACb,MAAM5C,QAAY0C,EAAIG,OACtBhE,cAAcwB,YAAYL,EAAKzG,EAAGmH,OAClC,MAAMxB,EAAQL,cAAcO,IAAI7F,EAAGmH,OAC/BxB,GAAOnH,OAAO+I,mBAAmBpI,SAAU,WAAYwG,EAI5D,CAHE,MAAOzB,GACRoB,cAAc/E,OAAOP,EAAGmH,OACxBhD,QAAQC,IAAIF,EACb,CAbyB,CAe1B,CAEA7C,UACC,MAAMrB,EAAKC,KACX,IAAKD,EAAGiB,OAAQ,OAChB,MAAM0E,EAAQL,cAAcO,IAAI7F,EAAGmH,OACnC7B,cAAc/E,OAAOP,EAAGmH,OACxB3I,OAAO+I,mBAAmBpI,SAAU,WAAYwG,GAChDxG,SAASwH,mBAAqBrB,cAAcU,MAC7C,CAMImB,YACH,OAAOlH,KAAKoD,aAAa,QAC1B,CAEI8D,UAAMkB,EAAM,IACf,OAAOpI,KAAKqI,aAAa,QAASD,EACnC,CAMIW,cACH,MAAwC,SAAjC/I,KAAKoD,aAAa,UAC1B,CAMI0F,eACH,OAAO9I,KAAKoD,aAAa,WAC1B,CAEI0F,aAASV,EAAM,IAClB,OAAOpI,KAAKqI,aAAa,WAAY,GAAKD,GAAO,OAClD,CAMIS,iBACH,MAAyB,SAAlB7I,KAAK8I,QACb,CAMIE,YACH,OAAOhJ,KAAKoD,aAAa,UAAY,SACtC,CAMW6F,yBAEV,OADW,IAAIK,gBAAgBpH,SAAS/B,KAAKoJ,MAAM,IACzC3D,IAAI,UAAY,SAC3B,CAEAnH,SAAgBwF,GACf,MAAM+E,EAAQL,MAAMM,YACpBjD,MAAMC,KAAK/G,SAASsK,iBAAiB,WACnCzB,QAAOxH,GAAoB,GAAdA,EAAGwI,UAChBpG,SAAQpC,GAAMA,EAAGuI,SAAWvI,EAAGyI,QAAUA,GAC5C,QAGC7D,OAAOwB,OAAOgC,OACdL,eAAeC,OAAO,SAAUI,OAChC/B,OAAO6C,iBAAiB,aAAcd,OAAM,GAAU,EACvD,ECrIc,MAAMe,iBAAiBnL,OAKrCiC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAASyK,cAAc,UAKlC,OAHApJ,EAAGqJ,IAAM7J,EAAGE,IACZF,EAAG8J,oBAAoB9B,QAAOnF,GAAW,QAANA,IAAaD,SAAQC,GAAKrC,EAAG8H,aAAazF,EAAG7C,EAAGqD,aAAaR,MAEzFrC,CAER,QAGC+H,eAAeC,OAAO,YAAamB,UACnCvE,OAAOwB,OAAO+C,SACf,ECnBc,MAAMI,eAAevL,OAKnCiC,SAEC,MAAMT,EAAKC,KACLO,EAAKrB,SAASyK,cAAc,QAOlC,OALApJ,EAAGyD,KAAOjE,EAAGE,IACbF,EAAG8J,oBAAoB9B,QAAOnF,GAAW,QAANA,IAAaD,SAAQC,GAAKrC,EAAG8H,aAAazF,EAAG7C,EAAGqD,aAAaR,MAE5F7C,EAAGgK,QAAqB,eAAXxJ,EAAG4H,KAAsB5H,EAAG8H,aAAa,KAAM,eAEzD9H,CAER,CAEI4H,UACH,MAAMpI,EAAKC,KACX,IAAImI,EAAMpI,EAAGqD,aAAa,QAAU,GAMpC,OALK+E,GACApI,EAAGE,IAAI6C,QAAQ,UAClBqF,EAAM,cAGDA,CACR,CAEI4B,aACH,MAAuC,SAAhC/J,KAAKoD,aAAa,SAC1B,QAGCkF,eAAeC,OAAO,UAAWuB,QACjC3E,OAAOwB,OAAOmD,OACf,ECxCc,MAAME,mBAAmBC,YAEpCxL,SAAmB,IAAI6G,IAEvB,GAAa,IAAI4E,IAWjBzL,YAAYU,EAAO,GAAIiF,EAAO,GAAI+F,GAC9B,OAAOH,WAAWI,SAASjL,GAAMkL,KAAKjG,EAAM+F,EAChD,CAQA1L,aAAaU,EAAO,IAChB,OAAOA,GAAQ6K,YAAW,EAAUM,IAAInL,EAC5C,CAOAV,gBAAgBU,EAAO,IAInB,OAHK6K,WAAWO,MAAMpL,IAClB6K,YAAW,EAAUvE,IAAItG,EAAM,IAAI6K,YAEhCA,YAAW,EAAUpE,IAAIzG,EACpC,CAOAV,kBAAkBU,EAAO,IACrB,MAAMqL,EAAMR,YAAW,EAAUpE,IAAIzG,GAErC,OADIqL,GAAKA,GAAI,IACNR,YAAW,EAAUnE,OAAO1G,EACvC,CAEA,KACI,MAAMY,EAAKC,KACXgG,MAAMC,KAAKlG,GAAG,GAAY4C,SAAQgF,IAC9B5H,EAAG0K,oBAAoB9C,EAAEvD,KAAMuD,EAAE+C,SAAS,IAE9C3K,GAAG,EAAW4K,OAClB,CAEA,GAAYC,GACR,MAAqB,mBAAPA,CAClB,CAQAC,GAAGzG,EAAO,GAAIsG,GACV,MAAM3K,EAAKC,KACX,GAAKD,GAAG,EAAY2K,GAEpB,OADA3K,GAAG,EAAW+K,IAAI,CAAC1G,KAAKA,EAAMsG,SAAWA,IAClC3K,EAAG0J,iBAAiBrF,EAAMsG,EACrC,CAQAK,KAAK3G,EAAMsG,GACP,MAAM3K,EAAKC,KACX,IAAKD,GAAG,EAAY2K,GAAW,OAC/B,MAAMM,KAAQ/G,IACVyG,EAASzG,GACTlE,GAAG,EAAW8F,OAAOmF,KAAK,EAK9B,OAHAA,KAAK5G,KAAOA,EACZ4G,KAAKN,SAAWA,EAChB3K,GAAG,EAAW+K,IAAIE,MACXjL,EAAG0J,iBAAiBrF,EAAM4G,KAAM,CAAED,MAAM,GACnD,CAQAE,IAAI7G,EAAO,GAAIsG,GACX,MAAM3K,EAAKC,KACX,QAAKD,GAAG,EAAY2K,KACpB1E,MAAMC,KAAKlG,GAAG,GACbgI,QAAOJ,GAAKA,EAAEvD,OAASA,GAAQuD,EAAE+C,WAAaA,IAC9C/H,SAAQgF,GAAK5H,GAAG,EAAW8F,OAAO8B,KAC5B5H,EAAG0K,oBAAoBrG,EAAMsG,GACxC,CAQAL,KAAKjG,EAAO,GAAI+F,GACZ,MAAMe,EAAM,IAAIzL,YAAY2E,EAAM,CAAE1E,OAAQyK,IAC5C,OAAOnK,KAAKL,cAAcuL,EAC9B,ECpHW,MAAM,oCAAsBC,iBAEvC1M,SAAqB,IAAI6G,IACzB7G,SAAqB,IAAI6G,IAQzB8F,QAAQ7K,EAAI8K,GACR,MAAMC,EAAMD,GAAO,CAAEE,WAAW,EAAMC,SAAS,GAC/C,OAAOvE,MAAMmE,QAAQ7K,EAAI+K,EAC7B,CAOA7M,cAAc8B,GACV,MAAMkL,EAAW,IAAI,4BAAc,6BAAc,GAEjD,OADAA,EAASL,QAAQ7K,GACVkL,CACX,CAOAhN,SAAkBiN,GAAY,GAC1B,OAAOA,EAAY,6BAAc,EAAc,6BAAc,CACjE,CAKW,eACP,OAAO,6BAAc,GAAkB,6BAAc,CACzD,CAEW,eACP,OAAO,6BAAc,EAAYC,KAAO,CAC5C,CAEW,eACP,OAAO,6BAAc,EAAYA,KAAO,CAC5C,CAMAlN,SAAkBmN,GACT,6BAAc,GACnBA,EAAUjJ,SAASkJ,IACX,6BAAc,GAAgBA,EAASC,WAAWnJ,SAAQpC,GAAM,6BAAc,EAAMA,EAAI,6BAAc,KACtG,6BAAc,GAAgBsL,EAASE,aAAapJ,SAAQpC,GAAM,6BAAc,EAAMA,EAAI,6BAAc,IAAa,GAEjI,CAQA9B,SAAauN,EAAQC,GACjB,OAAqB,IAAjBA,EAAQN,OACZ,6BAAc,EAAOK,EAAQC,GAC7BD,EAAOE,WAAWvJ,SAAQpC,GAAM,6BAAc,EAAMA,EAAI0L,MACjD,EACX,CAQAxN,SAAc8B,EAAI0L,GACdA,EAAQtJ,SAAQ,CAACC,EAAGuJ,KAChB,IACQA,EAAE5L,IAAKqC,EAAErC,EAGjB,CAFE,MAAO0D,GACLC,QAAQC,IAAIF,EAChB,IAER,CAWAxF,SAAa8B,EAAIwH,EAAQqE,GACrB,GAAI7L,aAAc/B,aAAe,EAAO,OAAO,EAC/C,MAAM6N,EAAM,IAAI/G,IAEhB,OADA+G,EAAI5G,IAAIsC,EAAQqE,GACT,6BAAc,EAAM7L,EAAI8L,EACnC,CAOA5N,SAAmBmM,GACf,MAAqB,mBAAPA,CAClB,CAQAnM,SAAoBsJ,EAAQqE,GACxB,OAAO,6BAAc,EAAYrE,IAAW,6BAAc,EAAYqE,EAC1E,CAWA3N,sBAAsBsJ,EAAQqE,EAAUV,GAAY,GAEhD,QAAK,6BAAc,EAAa3D,EAAQqE,KAExC,6BAAc,EAAWV,GAAWjG,IAAIsC,EAAQqE,GAG3CV,GAAW,6BAAc,EAAMxM,SAASoN,KAAMvE,EAAQqE,IAEpD,EACX,CAUA3N,wBAAwBmM,EAAIc,GAAY,GACpC,QAAO,6BAAc,EAAYd,IAAM,6BAAc,EAAWc,GAAW7F,OAAO+E,EACtF,QAMIzF,OAAOwB,OAAO,6BACdC,OAAO2F,cAAgB,4BACvB,MAAMd,EAAW,4BAAce,OAAOtN,SAASuN,iBAC/C7F,OAAO6C,iBAAiB,UAAU,KAAQgC,EAASiB,YAAW,GAClE,EC7KW,MAAMC,MAKpBlO,gBAAiB,EAOjBA,YAAY8B,EAAIqM,GACf5M,MAAK,EAAOO,EAAIqM,GAAK,EAAM,OAC5B,CAOAnO,YAAY8B,EAAIqM,GACf5M,MAAK,EAAOO,EAAIqM,GAAK,EAAM,OAC5B,CAOAnO,aAAa8B,EAAIqM,GAChB5M,MAAK,EAAOO,EAAIqM,GAAK,EAAM,QAC5B,CASAnO,WAAW8B,EAAIqM,EAAKC,GACnB7M,MAAK,EAAOO,EAAIqM,EAAKC,EACtB,CAEApO,SAAc8B,EAAIqM,EAAKC,EAAQzI,GAC9B,IAAMyI,IAAU7M,KAAK8M,QAAU,OAC/B,IAAIlC,EAAK1G,QAAQE,GAAQ,OAEzB,GADAwG,EAAmB,mBAAPA,EAAoBA,EAAK1G,QAAQC,IACzC5D,EAAI,OAAOqK,EAAG,GAAGrK,EAAGwM,eAAexM,EAAGU,OAAO2L,KACjDhC,EAAGgC,EACJ,QAGCzH,OAAOC,KAAKuH,MACb,ECrDc,MAAMK,OAEpBvO,SAAoB,EACpBA,YAA8B,GAAhBqG,KAAKmI,QACnBxO,gBAAkB,mBAElBA,gBAAmByO,IAAgBC,MAAMC,WAAWF,KAAOG,SAASH,GAEpEzO,gBAAkB6D,GAA0B,iBAAVA,EAElC7D,cAAgB6D,GAASA,QAEzB7D,gBAAkB,CAAC6D,EAAQ,IAAMA,EAAMgL,SAAS,GAEhD7O,aAAe,CAAC2J,EAAM,IAAM4E,OAAOO,SAASnF,GAAOgF,WAAWhF,GAAO,EAErE3J,cAAgB,CAAC2J,GAAM,IAAkD,SAAxCA,EAAIkF,WAAWE,OAAOhL,cAEvD/D,mBAAqB,CAACgP,EAAKrO,IAAQqO,EAAItL,QAAQ,cAAc,CAACuL,EAAGC,IAAMvO,EAAIuO,KAE3ElP,kBAAqBmP,GAASA,EAAK,GAAGC,cAAgBD,EAAKrE,MAAM,GAAG/G,cAEpE/D,sBAAyBmP,GAASA,EAAKE,MAAM,KAAKpG,KAAI,CAAC9E,EAAG7D,IAAMA,EAAIiO,OAAOe,WAAWnL,GAAKA,IAAGiF,KAAK,IAEnGpJ,iBAAmB,KAAQ,MAAM,IAAIuP,MAAM,oCAAmC,EAO9EvP,aAAe,CAACwB,EAAM,KAAO,8CAA8C4B,KAAK5B,EAAIuN,QAEpF/O,cAAgB,CAAC2J,EAAM,KAAOA,EAAItF,QAAQ,MAAQ,GAAKsF,EAAItF,QAAQ,KAAO,EAM/DmL,oBACV,OAAOvM,UAAUwM,SAAWxM,UAAUwM,SAAWxM,UAAUyM,UAAU,EACtE,CAEA1P,oBAAoB2J,EAAM,IACzB,MAAqB,iBAAPA,IAAoBA,EAAI5E,WAAW,MAAQ4E,EAAI5E,WAAW,KACzE,CAOA/E,kBAAkB2J,EAAM,IACvB,OAAOpC,MAAMoI,QAAQhG,IAAsB,iBAAPA,CACrC,CAOA3J,cAAc2J,EAAM,IACnB,OAAO4E,OAAOqB,aAAajG,IAAQ4E,OAAOsB,WAAWlG,EACtD,CAOA3J,cAAc2J,EAAM,IACnB,OAAI4E,OAAOqB,aAAajG,GAAamG,KAAKC,MAAMpG,GAC5C4E,OAAOsB,WAAWlG,GAAaA,GACnCuE,MAAM8B,KAAK,KAAM,sCAAsCrG,KAChD,KACR,CAOA3J,iBAAiB2J,EAAKsG,EAAM,IAC3B,OAAO1B,OAAO2B,SAASvG,GAAOA,EAAIoF,QAAUpF,GAAOsG,GAAKpB,UACzD,CAYA7O,2BAA2BmQ,EAAKC,GAC/B,MAAMC,EAAQ3J,OAAO4J,KAAKF,GACpBG,EAAO7J,OAAOoB,OAAOsI,GAC3B,OAAO,IAAII,YAAYH,EAAO,YAAYF,OAAnC,IAAgDI,EACxD,CAOAvQ,kBAAkB6D,GACjB,IAAK0K,OAAOkC,iBAAiB5M,GAAQ,OAErC,IAAIqF,EAAIf,OACJgE,EAAK,KAQT,OAPAtI,EAAMkL,OAAOM,MAAM,KAAKnL,SAAQ,CAACC,EAAG7D,EAAGoH,KACtC,GAAKwB,EACL,OAAI5I,EAAIoH,EAAErH,OAAS,EACX6I,EAAIA,EAAE/E,QAEdgI,EAAKjD,EAAE/E,GAAE,IAEHgI,CACR,CAQAnM,wBAAwB2J,EAAM,IAC7B,OAAQ4E,OAAOmC,cAAc/G,EAC9B,CAQA3J,qBAAqB2J,EAAM,IAC1B,QAAI4E,OAAO2B,SAASvG,IAAmC,IAAtBA,EAAIoF,OAAO1O,MAE7C,CASAL,qBAAqB2Q,EAAMC,GAC1B,MAAMC,EAAStC,OAAOkC,iBAAiBE,GACjCG,EAASvC,OAAOkC,iBAAiBG,GACvC,OAAIC,GAAUC,EACNH,EAAK5B,OAAOhL,eAAiB6M,EAAM7B,OAAOhL,cAE3C8M,IAAWC,CACnB,CASA9Q,qBAAqB+Q,EAAO,GAC3B,OAAO,IAAI9O,SAAS+O,IACnBC,WAAWD,EAAEpI,KAAK,MAAM,GAAOmI,EAAK,GAEtC,CAQA/Q,6BAA6B2N,GAC5B,GAAwB,mBAAbA,EACX,OAAIY,QAAO,EAAa,EAAUZ,KAClCY,QAAO,IACAlI,KAAKlF,uBAAsB,KACjC,IACCwM,GAKD,CAJE,MAAOnI,GACRC,QAAQC,IAAIF,EACb,CAAE,QACD+I,QAAO,GACR,KAEF,CAiBCvO,gBAAgBU,EAAMwQ,EAAOC,EAAKxK,GAAO,EAAMuB,GAAS,EAAOkJ,GAAS,GACnErR,YAAYsR,cAAcH,KAC3BrH,eAAe1C,IAAIzG,KACvBmJ,eAAeC,OAAOpJ,EAAMwQ,EAAO,CAACnH,QAAUoH,GAAKpN,gBAC/C4C,IAASD,OAAO4K,SAASJ,IAAQxK,OAAOC,KAAKuK,GAC7ChJ,IAAWxB,OAAO6K,SAASL,IAAQxK,OAAOwB,OAAOgJ,GACjDE,IAAQ/K,KAAK6K,EAAMxQ,MAAQwQ,IAChC,QAGCxK,OAAOC,KAAK4H,QACZlI,KAAKkI,OAASA,MACf,EC7Nc,MAAMiD,WAQjBxR,kBAAqBmM,GAAqB,mBAAPA,EASnCnM,mBAAmBkJ,EAAGiD,GAClB,OAAOjD,GAAKsI,WAAWC,WAAWvI,EAAEiD,GACxC,CAQAnM,uBAAuBmM,GACnB,IAAKqF,WAAWC,WAAWtF,GAAK,OAAO,EAEvC,IAAIuF,EAAUvF,aADQqF,WAAWG,kBAAkBpJ,YAGnD,OADKmJ,IAASA,EAAoC,iBAA1BvF,EAAGyF,OAAOC,cAC3BH,CACX,CAWA1R,+BAA+BmM,EAAI2F,GAC/B,IACI,aAAa3F,EAAG2F,EAGpB,CAFE,MAAOtM,GACL,OAAOA,CACX,CACJ,CAUAxF,wBAAwBmM,EAAI2F,GACxB,IACI,OAAO3F,EAAG2F,EAGd,CAFE,MAAOtM,GACL,OAAOA,CACX,CACJ,CASAxF,oBAAoBmM,EAAI2F,GACpB,GAAKN,WAAWC,WAAWtF,GAC3B,OAAIqF,WAAWO,gBAAgB5F,GACpBqF,WAAWG,kBAAkBxF,EAAI2F,GAErCN,WAAWQ,iBAAiB7F,EAAI2F,EAC3C,CAQA9R,qBAAqB6D,GACjB,MAAMsI,EAAKoC,OAAO0D,WAAWpO,GAC7B,OAAO2N,WAAWC,WAAWtF,GAAMA,EAAK,IAC5C,QAGIzF,OAAOC,KAAK6K,WAChB,ECjGW,MAAMU,KAEpBlS,SAAa,EAKbA,eACCuB,MAAK,EAAM,CACZ,CAOAvB,YAAYmS,EAAQ,SACnB,MAAO,GAAGA,IAAQ5Q,MAAK,KACxB,CAMWiB,gBACV,OAAOjB,KAAK6Q,MACb,CAOApS,gBAAgBE,GACf,MAAME,GAAKF,GAAK,IAAIG,OACpB,IAAIF,EAAI,EAAGG,EAAI,EACf,GAAU,IAANF,EAAS,OAAOD,EACpB,KAAOG,EAAIF,GACVD,GAAKA,GAAK,GAAKA,EAAID,EAAEK,WAAWD,KAAO,EAExC,OAAOH,CACR,QAGCuG,OAAOwB,OAAOgK,KACf,EC3Cc,MAAMG,OAOpBrS,qBAAqB8B,GACpB,OAAOA,aAAc/B,WACtB,CAUAC,WAAW8B,EAAIpB,EAAMiJ,GACf0I,OAAOC,cAAcxQ,KACtByM,OAAOgE,UAAU5I,GACpB7H,EAAG8H,aAAalJ,EAAMiJ,GAEtB7H,EAAG0Q,gBAAgB9R,GAErB,CAUAV,WAAW8B,EAAIpB,EAAO,GAAIiJ,EAAM,IAC/B,IAAK0I,OAAOC,cAAcxQ,GAAK,OAAO6H,EACtC,MAAMxF,EAAIrC,EAAG6C,aAAajE,IAASiJ,EACnC,OAAO4E,OAAOgE,UAAUpO,EACzB,CAUAnE,iBAAiB8B,EAAIpB,EAAO,GAAIiJ,EAAM,SACrC,MAAM8I,EAAOJ,OAAOlL,IAAIrF,EAAIpB,EAAMiJ,GAClC,OAAO4E,OAAOmE,OAAOD,EACtB,CAUAzS,gBAAgB8B,EAAIpB,EAAO,GAAIiJ,EAAM,KACpC,MAAM8I,EAAOJ,OAAOlL,IAAIrF,EAAIpB,EAAMiJ,GAClC,OAAO4E,OAAOoE,MAAMF,EACrB,CAUAzS,iBAAiB8B,EAAIpB,EAAO,GAAIiJ,EAAM,KACrC,MAAM8I,EAAOJ,OAAOlL,IAAIrF,EAAIpB,EAAMiJ,EAAK,CAAC,GACxC,OAAOmG,KAAKC,MAAM0C,EACnB,CAEAzS,iBAAiB8B,EAAIpB,EAAO,GAAIiJ,EAAM,SACrC,OAAO0I,OAAOrL,IAAIlF,EAAIpB,EAAM6N,OAAOmE,OAAO/I,IAAM,EACjD,CAEA3J,gBAAgB8B,EAAIpB,EAAO,GAAIiJ,EAAM,KACpC,OAAO0I,OAAOrL,IAAIlF,EAAIpB,EAAM6N,OAAOoE,MAAMhJ,GAAMiJ,IAChD,CAEA5S,iBAAiB8B,EAAIpB,EAAO,GAAIiJ,EAAM,KACrC,OAAO0I,OAAOrL,IAAIlF,EAAIpB,EAAMoP,KAAK+C,UAAUlJ,GAAM,KAClD,CAOA3J,oBAAoB8B,GACnB,OAAOyF,MAAMC,KAAK1F,EAAGgR,YACnBxJ,QAAOnF,GAAKA,EAAEzD,KAAKqE,WAAW,WAC9BkE,KAAI9E,GAAK,GAAGA,EAAEzD,SAASyD,EAAEN,WACzBuF,KAAK,IACR,QAGC1C,OAAOC,KAAK0L,OACb,EC3Gc,MAAMU,MAGpB/S,aAAe,IAUfA,aAAagT,EAAO,GAAIC,GAAS,EAAOC,EAAO,aAC9C,IACC,MACMC,GADS,IAAIC,WACAC,gBAAgBL,EAAME,GACzC,OAAOD,EAASE,GAAKtF,MAAMyF,kBAAoBH,CAIhD,CAHE,MAAO3N,GAER,MADA0I,MAAMqF,MAAM,KAAM/N,GACZA,CACP,CACD,CAQAxF,oBAAoBwT,EAAKrI,EAAM,GAAIsI,GAAY,GAE9C,MAAMN,EAAMJ,MAAMhD,MAAM5E,GAClBuI,EAAQX,OAAM,EAAUI,EAAI/Q,KAAKuR,UAAUxJ,OAAO4I,OAAM,EAAUI,EAAItF,KAAK8F,WAC3EpH,EAAOkH,GAA8B,IAAjBC,EAAMrT,OAE1B8P,EAAM4C,MAAMxG,KAAKiH,EAAKjH,EAAO,KAAOmH,EAAME,SAEhD,KAAOF,EAAMrT,OAAS,GAAG8P,EAAI9N,YAAYqR,EAAME,SAE/C,OAAOzD,CACR,CASAnQ,YAAYwT,EAAK/O,GAChB,OAAOsO,MAAMc,KAAKL,EAAK/O,GAAUhE,SAASyK,cAAc,YACzD,CASAlL,YAAYwT,EAAK/O,GAGhB,OAFAA,EAAOmF,aAAa,QAAS,IAAI4J,EAAIhR,MACjCgR,EAAIM,MAAMrP,EAAOmF,aAAa,OAAQ4J,EAAIM,MACvCrP,CACR,CAEAzE,SAAiB0T,GAChB,OAAOnM,MAAMC,KAAKkM,GAAS,IAAIpK,QAAOxH,IAAOiR,MAAMgB,OAAOjS,IAC3D,CASA9B,iBAAiB8B,EAAI6D,GACpB,GAAIA,GAAQ7D,EACX,GAAoB,iBAAT6D,GACV,GAAIA,EAAKyJ,gBAAkBtN,EAAGkS,QAAS,OAAOlS,OACxC,GAAIA,aAAc6D,EAAM,OAAO7D,EAEvC,OAAO,CACR,CAMA9B,yBAAyB8B,GACxB,OAAOA,aAAcmS,mBACtB,CAMAjU,qBAAqB8B,GACpB,OAAOA,aAAc/B,WACtB,CAMAC,oBAAoB8B,GACnB,OAAOA,aAAcoS,UACtB,CAMAlU,cAAc8B,GACb,OAAOA,aAAcqS,IACtB,CAMAnU,iBAAiB8B,GAChB,OAAOA,aAAcsS,OACtB,CAKApU,mBAAmB8B,GAClB,OAAuC,IAAhCA,GAAIkS,SAAS3P,QAAQ,MAC7B,CAOArE,iBAAiB8B,GAChB,OAAkD,IAA3CA,GAAI6C,aAAa,OAAON,QAAQ,MACxC,CAOArE,iBAAiB8B,GAChB,OAAOyF,MAAMC,KAAK1F,GAAI2L,YAAc,IAAInE,QAAO9D,GAAKuN,MAAMsB,YAAY7O,IACvE,CAQAxF,YAAY8B,EAAIwS,GAAc,GAC7B,OAAOxS,GAAIyS,WAAWlI,IAAIiI,EAAc,sBAAwB,UACjE,CAQAtU,YAAY8B,EAAIwS,GAAc,GAC7B,OAAOxS,GAAIyS,WAAW1S,OAAOyS,EAAc,sBAAwB,UACpE,CAQAtU,kBAAkByE,EAAQ+P,GACzB,MAAMC,EAAa1B,MAAMT,cAAckC,IAAUzB,MAAM2B,aAAaF,GAC9DG,EAAO5B,MAAMT,cAAc7N,IAAWgQ,EACtCG,EAAUnQ,IAAW+P,GAAS/P,EAAOoQ,aAAeL,GAAS/P,EAAOqQ,qBAAuBN,EACjG,SAAOG,GAASC,IAAUnQ,EAAOoQ,WAAWE,aAAaP,EAAO/P,EAAOqQ,mBACxE,CAQA9U,mBAAmByE,EAAQ+P,GAE1B,UADazB,MAAMT,cAAc7N,IAAWsO,MAAMT,cAAckC,KACjD/P,IAAW+P,IAAQ/P,EAAOpC,YAAYmS,EACtD,CASAxU,sBAAsByE,EAAQ+P,EAAOQ,GACpC,MAAMC,EAAOlC,MAAMT,cAAc7N,IAAWsO,MAAMT,cAAckC,GAC1DI,EAAUnQ,IAAW+P,GAAS/P,EAAOoQ,aAAeL,EAC1D,SAAOS,GAASL,IAAUnQ,EAAOnC,sBAAsB0S,EAAWR,EACnE,CAOAxU,qBAAqB8B,GACpB,OAAOA,GAAI+S,YAAYK,YAAYpT,EACpC,CAWA9B,YAAYmV,EAAMC,GAAU,EAAOC,GAAM,EAAO/J,GAAS,GACxD,OAAO8J,EAAUrC,MAAMuC,UAAUH,GAAQpC,MAAMwC,SAASJ,EAAME,EAAK/J,EACpE,CAWAtL,gBAAiBmV,EAAME,GAAM,EAAO/J,GAAS,EAAMkK,GAAQ,GAC1D,IAAKL,EAAM,OACPK,UAAaL,GACb7J,UAAeyH,MAAMwC,SAASJ,EAAKM,WAAYJ,EAAK/J,GAAQ,IAChE,MAAMoK,EAAOL,EAAMF,EAAK1H,WAAa0H,EAAKxB,SAC1C,GAAK+B,EACL,IAAK,IAAIF,KAASE,QACV3C,MAAMwC,SAASC,EAAOH,EAAK/J,GAAQ,EAE5C,CAQAtL,cAAc8B,GACb,OAAOA,EAAMA,EAAG6T,eAAiB7T,EAAG+S,YAAc/S,EAAG8T,KAAQ,IAC9D,CAQA5V,iBAAkB8B,GACjB,IAAI0D,EAAIuN,MAAM8C,OAAO/T,GACrB,KAAO0D,SACAA,EACNA,EAAIuN,MAAM8C,OAAOrQ,GAElB,GAAIA,EAAG,aAAaA,CACrB,CAOAxF,eAAe8B,GACd,IAAKA,EAAI,OAAO,KAEhB,MAAMgU,EAAK/C,MAAMuC,UAAUxT,GAC3B,IAAK,IAAIqC,KAAK2R,EAAI,CACjB,GAAI3R,aAAa4R,WAAY,OAAO5R,EACpC,GAAIA,aAAa6R,gBAAiB,OAAO7R,CAC1C,CAEA,OAAO,IACR,CAQAnE,eAAe8B,EAAIU,GAClB,IAAMV,IAAMmU,IAAM,OAAO,KACzB,MAAMH,EAAK/C,MAAMmD,KAAKpU,GAAI,GAC1B,IAAK,IAAIoH,KAAK4M,EACb,GAAI5M,EAAE1G,KAAOA,EAAI,OAAO0G,EAEzB,OAAO,IACR,CAQAlJ,eAAe8B,EAAImU,GAClB,IAAMnU,IAAMmU,EAAM,OAAO,KACzB,MAAMH,EAAK/C,MAAMmD,KAAKpU,GAAI,GAC1B,IAAK,IAAIoH,KAAK4M,EACb,GAAI/C,MAAMoD,QAAQjN,EAAG+M,GAAM,OAAO/M,EAEnC,OAAO,IACR,CASAlJ,aAAa8B,EAAImU,GAChB,IAAMnU,IAAMmU,EAAM,OAAO,KACzB,GAAIlD,MAAMoD,QAAQrU,EAAImU,GAAM,OAAOnU,EACnC,MAAMgU,EAAK/C,MAAMmD,KAAKpU,GAAI,GAAO,GACjC,IAAK,IAAIoH,KAAK4M,EACb,GAAI/C,MAAMoD,QAAQjN,EAAG+M,GAAM,OAAO/M,EAEnC,OAAO,IACR,CAQAlJ,eAAe8B,EAAImU,GAElB,OAAOnU,GAA4B,mBAAfA,EAAGqU,SAA0BrU,EAAGqU,QAAQF,EAC7D,CASAjW,gBAAgB8B,EAAImU,GACnB,MAAMxL,EAAM,GACZ,IAAM3I,IAAMmU,EAAM,OAAOxL,EACzB,MAAMqL,EAAK/C,MAAMmD,KAAKpU,GAAI,GAAO,GACjC,IAAK,IAAIoH,KAAK4M,EACT/C,MAAMoD,QAAQjN,EAAG+M,IAAMxL,EAAI2L,KAAKlN,GAErC,OAAOuB,CACR,CASAzK,eAAe8B,EAAI6H,EAAM,KAGR7H,aAAciU,YAAcjU,aAAc/B,aAAe+B,aAAcmS,uBAC1EnS,EAAGuU,UAAY1M,EAC7B,CAQA3J,eAAe8B,EAAI6H,EAAM,IACpB7H,IAAKA,EAAGwU,YAAc3M,EAC3B,CASA3J,mBAAmB8B,EAAIkC,GAAM,EAAM2F,EAAM,UACxC,QAAKoJ,MAAMT,cAAcxQ,QACpB6H,GAA4B,GAArBA,EAAIoF,OAAO1O,UACvBsJ,EAAMA,EAAI0F,MAAM,KAAK/F,QAAOnF,GAAKA,GAAKA,EAAE4K,OAAO1O,OAAS,IAC5C,OAAR2D,EAAqB2F,EAAIzF,SAAQC,GAAKrC,EAAGyS,UAAUgC,OAAOpS,UAC9DH,EAAMlC,EAAGyS,UAAUlI,IAAImK,MAAM1U,EAAGyS,UAAW5K,GAAO7H,EAAGyS,UAAU1S,OAAO2U,MAAM1U,EAAGyS,UAAW5K,KAC3F,CAQA3J,gBAAgB8B,EAAI6H,EAAM,IACzB,OAAO7H,GAAIyS,WAAWkC,SAAS9M,EAChC,CAOA3J,mBAAmB8R,EAAOmE,EAAM,mBAC/B,MAAMS,EAAO3D,MAAM4D,OAAO7E,GAC1B3Q,uBAAsB,KACrBuV,EAAK3L,iBAAiBkL,GAAK/R,SAASpC,GAAOA,EAAG+B,MAAQ,IAAG,GAE3D,CAOA7D,eAAe8B,GACd,IAAKiR,MAAMT,cAAcxQ,GAAK,OAC9B,GAAI,aAAeA,EAAG6D,KAAM,OAAO7D,EAAG8U,QACtC,IAAI/S,EAAQ/B,EAAG+B,MACf,GAAI,SAAW/B,EAAG6D,KAAM,CACvB,MAAMsD,EAAM8J,MAAM8D,WAAW/U,EAAI,kBAC7BmH,IACC,aAAeA,EAAIpF,QAAOA,EAAQ/B,EAAG+B,MAAME,eAC3C,aAAekF,EAAIpF,QAAOA,EAAQ/B,EAAG+B,MAAMuL,eAEjD,CACA,OAAOvL,CACR,CAQC7D,iBAAiB8B,EAAI6H,GAChBoJ,MAAMT,cAAcxQ,KACT,aAAZA,EAAG6D,KACN7D,EAAG8U,QAAiB,GAAPjN,EAEb7H,EAAG+B,MAAQ8F,EAEb,CAOA3J,kBAAkB8B,EAAIpB,GACrB,MAAMuI,EAAM8J,MAAM+D,qBAAqBhV,GACvC,MAAuB,mBAAZmH,EAAI9B,IAA2B8B,EAAI9B,IAAIzG,GAC3CuI,EAAIvI,EACZ,CAOAV,4BAA4B8B,GAC3B,OAAIA,EAAGiV,iBAAyBjV,EAAGiV,mBAC/B5O,OAAO6O,iBAAyB7O,OAAO6O,iBAAiBlV,GACrD,IACR,CASA9B,gBAAgB8R,EAAOmE,EAAM,0BAA2BgB,GAAS,GAChE,MAAMP,EAAO3D,MAAM4D,OAAO7E,GACpB1B,EAAS,CAAC,EACVsF,EAAO3C,MAAMmE,SAASR,EAAMT,GAOlC,OANA1O,MAAMC,KAAKkO,GACTpM,QAAOxH,GAAMA,EAAGpB,OAChBwD,SAAQpC,KACHmV,GAAgC,SAAtBnV,EAAGI,QAAQiV,UAC1B/G,EAAOtO,EAAGpB,MAAQqS,MAAMqE,QAAQtV,GAAG,IAE9BsO,CACR,CASApQ,kBAAkB8R,EAAOnR,EAAKsV,EAAM,2BACnC,IAAKtV,EAAK,OACV,MAAM+V,EAAO3D,MAAM4D,OAAO7E,GACpB4D,EAAO3C,MAAMmE,SAASR,EAAMT,GAClC1O,MAAMC,KAAKkO,GACTpM,QAAOxH,GAAMA,EAAGpB,MAAQC,EAAI2F,eAAexE,EAAGpB,QAC9CwD,SAAQpC,GAAMiR,MAAMsE,UAAUvV,EAAInB,EAAImB,EAAGpB,QAC5C,CAMAV,yBAAyB8R,GACxBrO,SAAS/B,KAAKoJ,MAAM,GAAGuE,MAAM,KAAKiI,OAAOnT,IACxC,GAAIA,EAAE9D,OAAS,EAAG,OAAO,EACzB,MAAMkX,EAAIpT,EAAEkL,MAAM,KAElB,OADA0D,MAAMyE,SAAS,cAAcD,EAAE,MAAOA,EAAE,GAAIzF,IACrC,CAAI,GAEb,CAOA9R,cAAc8R,GACb,OAAOA,EAAQA,EAAMzL,MAAQyL,EAAQrR,QACtC,CAOAT,mBAAmBwT,EAAKyC,EAAM,uBAC7BlD,MAAMmE,SAAS1D,EAAKyC,GAAK/R,SAAQpC,GAAMA,EAAG0Q,gBAAgB,aAC3D,CAOAxS,oBAAoBwT,EAAKyC,EAAM,uBAC9BlD,MAAMmE,SAASpV,GAAImU,GAAK/R,SAAQpC,GAAMA,EAAG8H,aAAa,YAAY,IACnE,CAQA5J,gBAAgBiW,EAAKtM,EAAK6J,GACzB,MAAM1R,EAAKiR,MAAM0E,MAAMjE,EAAKyC,GAC5BlD,MAAMsE,UAAUvV,EAAI6H,EACrB,CAOA3J,sBAAsB8B,GACrB,MAAMoU,EAAOzV,SAASiX,iBAAiB5V,GAAMrB,SAAUkX,WAAWC,UAAW,MAAM,GAC7ElQ,EAAI,GACV,IAAI+G,EACJ,KAAOA,EAAIyH,EAAK2B,YAAYnQ,EAAE0O,KAAK3H,GACnC,OAAO/G,CACR,CAMA1H,iBAAiB0W,GAChB,MAAMoB,EAAK/E,MAAMgF,eAAerB,GAAQjW,UAAU6I,QAAO0O,GAAmC,IAA9BA,EAAEC,UAAUlJ,OAAO1O,SACjFyX,EAAGxO,QAAOxH,GAAMA,EAAGoW,uBAAuB/D,OAAMjQ,SAAQpC,GAAMA,EAAGD,WACjEiW,EAAG5T,SAAQ8T,GAAKA,EAAEG,UAAYH,EAAEC,UAAUG,WAAW,aAAc,MAAMA,WAAW,sBAAuB,KAC5G,CAWApY,gBAAgBwT,EAAKQ,EAASqE,EAAWC,GAAU,GAClD,GAAI9E,EAAIQ,UAAYA,EAAS,CAC5B,GAAIsE,EAAS,OAAO,EACpB,MAAM,IAAI/I,MAAM,mBAAmBiE,EAAIQ,eAAeR,EAAIhR,gCAAgCwR,IAC3F,CAGA,GADWjB,MAAMwF,UAAUhR,MAAMC,KAAKgM,EAAI/F,YAAa4K,GAC/C,OAAO,EACf,GAAIC,EAAS,OAAO,EACpB,MAAMnK,EAAM4E,MAAMyF,kBAAkBhF,EAAK6E,GACzC,MAAM,IAAI9I,MAAMpB,EACjB,CAQAnO,iBAAiB8B,EAAIuW,GACpB,OAAI9Q,MAAMoI,QAAQ7N,GAAuE,IAA3DA,EAAGwH,QAAOxH,GAAMiR,MAAMwF,UAAUzW,EAAIuW,KAAYhY,SACrEyB,aAAcqS,MAAQrS,aAAcsS,WAAgD,IAAnCiE,EAAUhU,QAAQvC,EAAGkS,QAChF,CAEAhU,yBAAyBwT,EAAK6E,GAC7B,MAAM3C,EAAO,IAAI2C,EAAUjP,KAAK,WAChC,MAAO,GAAGoK,EAAIQ,eAAeR,EAAIhR,qCAAqCkT,IACvE,CAUA1V,uBAAuBwT,EAAKhS,GAC3B,IAAKgS,GAAKiC,sBAAsBM,WAAY,OAAO,EACnD,IAAI/R,GAAM,EACV,IACC,MAAMyG,QAAYC,MAAMlJ,GACxB,IAAKiJ,EAAIE,GAAI,OACb,MAAM5C,QAAY0C,EAAIG,OAChB3D,EAAQ,IAAIF,cAClBE,EAAMC,YAAYa,GAClByL,EAAIiC,WAAWxN,mBAAqB,CAAChB,EAItC,CAHE,MAAOzB,GACRC,QAAQC,IAAIF,GACZxB,GAAM,CACP,CACA,OAAOA,CACR,QAGC0C,OAAOC,KAAKoM,OACZ5K,OAAO4K,MAAQA,KAChB,EChpBc,MAAM0F,QAEpBzY,SAAgB,IAAI6G,IAEpB7G,UAAiB,EAKjBA,iBACCmI,OAAO6C,iBAAiB,eAAgBxF,IACvCiT,QAAQC,QAAQlT,EAAE,IAGnB/E,SAASuK,iBAAiB,WAAYjK,IACrC,MAAM4X,EAAO5X,EAAM4X,KACnB,MAAY,OAARA,MAEO5X,EAAM6X,UAAW7X,EAAM8X,UAAoB,QAARF,SAAvC,EAEP,GAEF,CAWA3Y,0BAA0ByE,EAAQ/D,EAAO,SAAUiN,EAAUmL,EAAU,KACjEL,SAAQ,SAAeA,QAAQM,KAAK5Q,OAAQ,QACjDsQ,SAAQ,GAAU,QACZlK,OAAOuK,QAAQA,GACrBtH,WAAWwH,aAAarL,GACxB8K,QAAQQ,cAAcxU,EAAQ/D,EAC/B,CASAV,gCAAgC2N,GAC/B,OAAO,IAAI1L,SAAQ,CAAC+O,EAAGxL,KACtBrE,uBAAsB,KACrB,IACC6P,IACwB,mBAAbrD,GAAyBA,GAIrC,CAHE,MAAOuL,GACRzT,QAAQC,IAAIwT,GACZ1T,EAAE0T,EACH,IACC,GAEJ,CAWAlZ,cAAcwT,EAAKyC,EAAKlV,EAAO4M,EAAUf,GAAM,GAC9C,OAAKqJ,GAAOzC,EAAYA,EAAIxI,iBAAiBjK,EAAO4M,EAAUf,GACvDmG,MAAMmE,SAAS1D,EAAKyC,GAAKhN,KAAInH,GAAMA,EAAGkJ,iBAAiBjK,EAAO4M,EAAUf,IAChF,CAUA5M,gBAAgBwT,EAAKyC,EAAKlV,EAAO4M,GAChC,OAAKsI,GAAOzC,EAAYA,EAAIxH,oBAAoBjL,EAAO4M,GAChDoF,MAAMmE,SAAS1D,EAAKyC,GAAKhN,KAAInH,GAAMA,EAAGkK,oBAAoBjL,EAAO4M,IACzE,CAUA3N,YAAYwT,EAAKyC,EAAKlV,EAAO4M,GAC5B,OAAO8K,QAAQU,OAAO3F,EAAKyC,EAAKlV,EAAO4M,EAAU,CAAErB,MAAM,GAC1D,CAUAtM,YAAYwT,EAAK9S,EAAO,IAEvB,OAAO,IAAIuB,SAAQ,CAAC+O,EAAGxL,KACtB,IAAK9E,EAAM,OAAO8E,EAAE,oBACpBiT,QAAQnM,KAAKkH,EAAK,KAAM9S,GAAO8E,GAAMwL,EAAExL,EAAEvE,SAAQ,GAEnD,CAOAjB,eAAewF,GACVgM,WAAW4H,YAAY5T,EAAG,mBAAmBA,EAAE6T,iBAC/C7H,WAAW4H,YAAY5T,EAAG,oBAAoBA,EAAE8T,iBACrD,CAaAtZ,YAAYQ,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAC9F,MAAMC,EAAQ,IAAIC,YAAYN,EAAM,CAAEO,OAAQN,EAAKC,QAASA,EAASC,SAAUA,EAAUC,WAAYA,IACrG,OAAON,EAAOU,cAAcH,EAC7B,CAaAf,qBAAqBQ,EAASC,SAAUC,EAAMC,EAAM,GAAIC,GAAU,EAAOC,GAAW,EAAOC,GAAa,GAClGJ,GACLS,uBAAsB,KACrBsX,QAAQc,KAAK/Y,EAAQE,EAAMC,EAAKC,EAASC,EAAUC,EAAW,GAEhE,CAYAd,cAAcwT,EAAK1R,EAAIpB,EAAO,GAAIyL,EAAIG,GAAO,EAAOkN,GAAU,GAC7D,IAAK1X,EAAI,OAAO,EAChB,GAAIA,EAAG2X,QAAS,OAAO,EACvB,IAAKjI,WAAWC,WAAWtF,GAAK,OAAO,EACvC,IAAKqF,WAAW4H,YAAYtX,EAAI,oBAAqB,OAAO,EAC5D,MAAMR,EAAKC,KACLZ,EAAMW,GAAG,EAAUkS,EAAK1R,EAAIpB,EAAMyL,GAClCuN,EAAQpY,GAAG,EAAekS,GAehC,OAdYlS,GAAG,EAAUoY,EAAO/Y,EAAIgZ,KAChC3S,IAAIrG,EAAIiZ,MAAOjZ,GACnBA,EAAI6Y,QAAUA,EACVlN,IACH3L,EAAI2L,KAAQ9G,IACX,IACC7E,EAAIwL,GAAG3G,EAGR,CAFE,QACDlE,EAAGO,OAAOlB,EAAI6S,IAAK7S,EAAImB,GAAInB,EAAID,KAAMC,EAAI2L,KAC1C,GAED5F,OAAOmT,eAAelZ,EAAI2L,KAAM,OAAQ,CAAEzI,MAAOsI,EAAG2N,KAAMC,UAAU,KAErEjY,EAAGkJ,iBAAiBtK,EAAM4L,EAAO3L,EAAI2L,KAAO3L,EAAIwL,GAAI,CAAEG,KAAMA,EAAMkN,QAASA,KACpE,CACR,CASAxZ,cAAcwT,EAAK1R,EAAIpB,EAAO,GAAIyL,GACjC,MAAM7K,EAAKC,KACLZ,EAAMW,GAAG,EAAUkS,EAAK1R,EAAIpB,EAAMyL,GAClCuN,EAAQpY,GAAG,EAAekS,GAC1BvK,EAAM3H,GAAG,EAAUoY,EAAO/Y,EAAIgZ,KAC9B9M,EAAM5D,EAAI9B,IAAIxG,EAAIiZ,OACxB,GAAI/M,EACH5D,EAAI7B,OAAOyF,EAAI+M,OACftY,GAAG,EAAgBuL,QACb,GAAIlM,EAAIiZ,QAAUjZ,EAAIgZ,IAC5B,IAAK,IAAIK,KAAK/Q,EAAInB,SACjBmB,EAAI7B,OAAO4S,EAAEJ,OACbtY,GAAG,EAAgB0Y,GAGJ,IAAb/Q,EAAIiE,MAAYwM,EAAMtS,OAAOzG,EAAIgZ,KAClB,IAAfD,EAAMxM,MAAY5L,GAAG,EAAO8F,OAAOoM,EACxC,CAMAxT,yBAAyBwT,GACxB,MAAMlS,EAAKC,KACL0H,EAAM3H,GAAG,EAAkBkS,GACjC,IAAKvK,EAAK,OAEV,MAAM6M,EAAK7M,EAAInB,SACf,IAAK,IAAIkS,KAAKlE,EAAI,CACjB,IAAK,IAAI5M,KAAK8Q,EAAElS,SACfxG,GAAG,EAAgB4H,GAEpB8Q,EAAE9N,OACH,CACAjD,EAAIiD,OACL,CASAlM,SAAiBwT,EAAK1R,EAAIpB,EAAO,GAAIyL,EAAK,IACzC,IAAKrK,EAAI,OAAO,EAChB,MACMmY,EADK1Y,MACK,EAAcO,GACxBoY,EAFK3Y,MAEK,EAAe4K,GAG/B,MAAO,CAAEqH,IAAKA,EAAKrH,GAAIA,EAAIrK,GAAIA,EAAIpB,KAAMA,EAAMiZ,IAFnCzH,KAAKvQ,SAAS,GAAGsY,IAAOvZ,KAEqBkZ,MAD3C1H,KAAKvQ,SAAS,GAAGsY,IAAOvZ,IAAOwZ,GAAQ,MAEtD,CAQAla,SAAiB0Z,EAAOC,GAEvB,IAAI1Q,EAAMyQ,EAAMvS,IAAIwS,GAKpB,OAJK1Q,IACJA,EAAM,IAAIpC,IACV6S,EAAM1S,IAAI2S,EAAK1Q,IAETA,CACR,CAEAjJ,SAAsBmM,GACrB,OAAKqF,WAAWC,WAAWtF,IACtBA,EAAG2N,MAAMpT,OAAOmT,eAAe1N,EAAI,OAAQ,CAAEtI,MAAOqO,KAAKE,OAAQ2H,UAAU,IACzE5N,EAAG2N,MAF6B,IAGxC,CAEA9Z,SAAqB8B,GACpB,IAAImY,EAAO5H,OAAOlL,IAAIrF,EAAI,eAK1B,OAJKmY,IACJA,EAAO/H,KAAKE,OACZC,OAAOrL,IAAIlF,EAAI,cAAemY,IAExBA,CACR,CAOAja,SAAsBwT,GAErB,OADWjS,MACD,EADCA,MACY,EAAQiS,EAChC,CAEAxT,SAAyBwT,GACxB,MACMvK,EADK1H,MACI,EAAO4F,IAAIqM,GAC1B,GAAKvK,EAEL,OAJW1H,MAGR,EAAO6F,OAAOoM,GACVvK,CACR,CAEAjJ,SAAuBkJ,GACtBA,EAAEpH,GAAGkK,oBAAoB9C,EAAExI,KAAMwI,EAAEoD,KAAOpD,EAAEoD,KAAOpD,EAAEiD,GAAI,CAAEqN,QAAStQ,EAAEsQ,UACtEtQ,EAAEpH,GAAK,KACPoH,EAAEiD,GAAK,KACPjD,EAAEoD,KAAO,IACV,QAGC5F,OAAOwB,OAAOuQ,QACf,EC9Tc,MAAM0B,aAKjBna,SAAgB,IAAIyL,IAOpBzL,aAAa8B,GACTqY,cAAa,EAAO9N,IAAIvK,EAC5B,CAOA9B,cAAc8B,GACVqY,cAAa,EAAO/S,OAAOtF,EAC/B,CAOA9B,WAAWwC,EAAK,IACZ,MAAM4X,EAAM7S,MAAMC,KAAKjG,MAAK,GAAQ+H,QAAOxH,GAAMA,EAAGU,KAAOA,IAC3D,OAAsB,IAAf4X,EAAI/Z,OAAe,KAAO+Z,EAAI,EACzC,CAEApa,SAAwBU,EAAO,GAAIoY,EAAU,EAAG9H,GAC5C,MAAM7E,GAAM3G,IACR,MAAM1D,EAAK0D,EAAEvE,OAEb,GADeP,EAAKqE,WAAW,QAAUjD,EAAGkS,UAAYtT,EAAK0O,eAC/CtN,EAAGU,KAAO9B,EAEpB,OADA+X,QAAQ4B,SAAS5Z,SAASoN,KAAM,KAAM,iBAAkB1B,IACjD6E,EAAElP,EACb,EAEE8K,EAAM,CAAEN,MAAM,EAAOkN,SAAS,GAChCV,EAAU,IAAGlM,EAAI0N,OAASC,YAAYzB,QAAQA,IAClDL,QAAQU,OAAO1Y,SAASoN,KAAM,KAAM,iBAAkB1B,GAAIS,EAC9D,CAOA5M,eAAeU,EAAO,GAAIoY,EAAU,GAChC,OAAO,IAAI7W,SAAQ,CAAC+O,EAAGxL,KACnB,IAAI1D,EAAKqY,aAAaK,KAAK9Z,IAASyZ,aAAahT,IAAIzG,GACrD,OAAOoB,EAAKkP,EAAElP,GAAMqY,cAAa,EAAiBzZ,EAAMoY,EAAS9H,EAAE,GAE3E,CAOAhR,iBAAiBU,EAAO,GAAIyL,GACxB,IAAKqF,WAAWC,WAAWtF,GAAK,OAAO,EACvC,MAAMwB,SAAYnI,IACd,MAAM1D,EAAK0D,EAAEiV,eAAe7G,QAE5B,OADW9R,EAAGU,KAAO9B,GAAQoB,EAAGkS,UAAYtT,EAChCyL,EAAGrK,EAAI0D,QAAKR,CAAS,EAE/BlD,EAAKqY,aAAaK,KAAK9Z,IAASyZ,aAAahT,IAAIzG,GACvD,OAAIoB,EAAWqK,EAAGrK,IAClB2W,QAAQU,OAAO1Y,SAASoN,KAAM,KAAM,iBAAkBF,UAC/CA,SACX,CASA3N,eAAeU,EAAO,GAAIga,GAAO,EAAMpP,GAAS,GAE5C,IAAIqP,EAASpT,MAAMC,KAAK2S,cAAa,GAKrC,OAJIzZ,IAAMia,EAASA,EAAOrR,QAAOxH,GAAMA,GAAMiR,MAAMoD,QAAQrU,EAAIpB,MAC1Dga,IAAMC,EAASA,EAAOrR,QAAOxH,GAAMA,EAAG2T,cACtCnK,IAAQqP,EAASA,EAAOrR,QAAOxH,IAAOA,EAAG2T,cAEvCkF,CACX,CASA3a,YAAYU,EAAO,GAAIga,GAAO,EAAMpP,GAAS,GACzC,OAAO6O,aAAaS,QAAQla,EAAMga,EAAMpP,GAAQsI,OACpD,CAOA5T,iBAAiBU,EAAO,IACpB,OAAOqS,MAAMsB,YAAY3T,IAASqS,MAAMsB,YAAY3T,EAAKma,UAC7D,CAOA7a,eAAeU,EAAO,IAClB,OAAOqS,MAAM+H,UAAUpa,IAASqS,MAAM+H,UAAUpa,EAAKma,UACzD,CAQA7a,gBAAgB8B,EAAI6D,GAEhB,KADaoN,MAAMsB,YAAYvS,IAAOiR,MAAMT,cAAcxQ,IAC/C,OAAO,KAElB,MAAMgU,EAAK/C,MAAMuC,UAAUxT,GAC3B,IAAK,IAAIqC,KAAK2R,EAAI,CACd,IAAK3R,EAAG,MACR,GAAIA,aAAa4R,WAAY,CACzB,MAAMF,EAAS9C,MAAM8C,OAAO1R,GAC5B,OAAKwB,EACDoN,MAAMgI,UAAUlF,EAAQlQ,GAAckQ,EACnCsE,aAAaa,SAASnF,EAAQlQ,GAFnBkQ,CAGtB,CACA,GAAI9C,MAAMgI,UAAU5W,EAAGwB,GAAO,OAAOxB,CACzC,CAEA,OAAOwB,EAAO,KAAOoN,MAAM8C,OAAO/T,EACtC,CAQA9B,iBAAiBwT,EAAK9S,GAClB,OAAOyZ,aAAac,QAAQzH,EAAK9S,EAAM,MAC3C,CAQAV,iBAAiBwT,EAAK9S,GAClB,OAAOyZ,aAAac,QAAQzH,EAAK9S,EAAM,MAC3C,CASAV,eAAewT,EAAK9S,EAAMyL,GACtB,MAAM+O,EAAOC,QAAQC,yBAAyB5H,EAAI6H,UAAW3a,GAC7D,OAAOwa,GAA4B,mBAAbA,EAAK/O,EAC/B,CAMAnM,sBACQma,cAAa,IACjB1Z,SAASuK,iBAAiB,WAAYmP,cAAa,GACnDA,cAAa,GAAY,EAC7B,CAMAna,wBACIS,SAASuL,oBAAoB,WAAYmO,cAAa,GACtDA,cAAa,GAAY,CAC7B,CAEAna,UAAmB,EACnBA,WACImB,uBAAsB,KAClBgZ,aAAaS,QAAQ,MAAM,GAAO,GAAMtR,QAAOxH,GAAMA,EAAG2T,aAAYvR,SAAQpC,GAAMA,EAAG2T,WAAWxN,mBAAqBrB,cAAcU,QAAO,GAElJ,QAGIZ,OAAOwB,OAAOiS,cACdA,aAAamB,eACbnT,OAAOgS,aAAeA,YAC1B,ECvNW,MAAMoB,OAOjBvb,aAAa0L,GACT,OAAOnE,MAAMC,KAAK,IAAIiE,IAAIC,GAC9B,CASA1L,mBAAmB0H,EAAGC,GAElB,GAAID,IAAMC,EAAG,OAAO,EACpB,IAAKJ,MAAMoI,QAAQjI,GAAI,OAAO,EAC9B,IAAKH,MAAMoI,QAAQhI,GAAI,OAAO,EAE9BD,EAAED,OACFE,EAAEF,OAEF,IAAK,IAAInH,EAAI,EAAGA,EAAIoH,EAAErH,SAAUC,EAC5B,GAAIoH,EAAEpH,KAAOqH,EAAErH,GAAI,OAAO,EAG9B,OAAO,CACX,CAQAN,mBAAmBwb,EAAQ,GAAIC,EAAS,IACpC,OAAOD,EAAMrR,OAAOsR,GAAQnS,QAAO,CAACzF,EAAO6X,EAAOrV,IAASA,EAAKhC,QAAQR,KAAW6X,GACvF,CAEA1b,kBAAkBsJ,EAAQoC,EAAMiQ,GAE5B,OAAyB,IAAlBrS,EAAOjJ,OAAeqL,EAAOA,EAAKpC,QAAOsS,GAAOL,OAAOM,aAAaD,EAAKtS,EAAQqS,IAC5F,CAEA3b,oBAAoB4b,EAAKtS,EAAQqS,GAG7B,MADmC,iBAAXrS,EACNiS,OAAOO,aAAaF,EAAKtS,EAAQqS,GAAUJ,OAAOQ,cAAcH,EAAKtS,EAC3F,CAEAtJ,oBAAoB4b,EAAKtS,EAAS,GAAIqS,GAClCrS,EAASA,EAAOvF,cAChB4X,EAASA,GAAUjV,OAAO4J,KAAKsL,GAC/B,IAAI/X,EAAQ,KACZ,IAAK,IAAI8V,KAAOgC,EAEZ,GADA9X,EAAQ+X,EAAIjC,GACR9V,GAASA,EAAMgL,WAAW9K,cAAcM,QAAQiF,IAAW,EAAG,OAAO,EAE7E,OAAO,CACX,CAEAtJ,qBAAqB4b,EAAKtS,GACtB,IAAI0S,GAAQ,EACZ,IAAK,IAAIC,KAAO3S,EAEZ,GADA0S,EAAQA,GAASJ,EAAItV,eAAe2V,EAAIvb,OAASkb,EAAIK,EAAIvb,MAAM2D,QAAQ4X,EAAIpY,QAAU,GAChFmY,EAAO,MAGhB,OAAOA,CACX,CAEAhc,gBAAgByH,EAAMiE,GAClB,OAAoB,IAAhBjE,EAAKpH,OAAqBqL,EACvBA,EAAKjE,MAAK,CAACC,EAAGC,IAAM4T,OAAOW,SAASxU,EAAGC,EAAGF,IACrD,CAEAzH,gBAAgB0H,EAAGC,EAAGF,GAClB,MACMkI,EAAUpI,MAAMoI,QAAQjI,GAC9B,IAAI1D,EAAM,EAYV,OAVAyD,EAAKvD,SAAQ,CAACgF,EAAG5I,KACb,IAAK4I,EAAG,OACR,MAAMiT,EAAMjT,EAAEkT,KAAO9b,EACfqZ,EAAMhK,EAAUwM,EAAMjT,EAAExI,KACxB2b,EAAK3U,EAAEiS,GACP2C,EAAK3U,EAAEgS,GAEb3V,EAAMuX,OAAOgB,QAAQF,EAAIC,EAAIpT,EAAEsT,IAAKxY,EAAI,IAGrCA,CACX,CAEAhE,eAAeqc,EAAIC,EAAI7T,EAAOzE,GAE1B,OAAIuK,OAAOO,SAASuN,GACTrY,GAAOuX,OAAOkB,WAAWJ,EAAIC,EAAI7T,GACnB,iBAAP4T,EACPrY,GAAOuX,OAAOmB,cAAcL,EAAIC,EAAI7T,GAExCzE,CACX,CASAhE,qBAAqBqc,EAAIC,EAAIE,GACzB,OAAOA,EAAM,EAAIF,EAAGzU,cAAcwU,GAAMA,EAAGxU,cAAcyU,EAC7D,CASAtc,kBAAkBqc,EAAIC,EAAIE,GACtB,OAAOA,EAAM,EAAIF,EAAKD,EAAKA,EAAKC,CACpC,QAGI5V,OAAOC,KAAK4U,OAChB,EClIW,MAAMoB,SAEjB3c,oBAAsBqG,KAAKuW,iBAAmBnZ,SAASoB,OACvD7E,iBAAkB,SAGd,IAAKqG,KAAKuW,gBAAiB,CACvB,MAAMpb,EAAMiC,SAAS8B,KAAK8J,MAAM,KAAK5F,MACrC,IAAIoT,EAAMrb,EAAI6N,MAAM,KACpBsN,SAASG,aAAetb,EAAIub,SAAS,KAAOvb,EAAMqb,EAAI/R,MAAM,GAAI,GAAG1B,KAAK,KACxE/C,KAAKuW,gBAAkBD,SAASG,YACpC,CAEIzW,KAAKC,eAAe,iBACpBqW,SAASK,UAAgC,IAArB3W,KAAKE,YACrBC,cAAcA,aAAayW,QAAQ,cAAeN,SAASK,WAEnEL,SAASK,WAAWxW,cAAsD,QAAvCA,aAAaC,QAAQ,cAE5D,CAMAzG,oBAAoBwB,EAAM,GAAIoD,GAAO,GAEjCpD,EAAMA,GAAO,GACb,IAAI0b,EAAO,KACX,MAAMC,EAAS1Z,SAASqB,SAASuK,MAAM,KAAK5F,KAAK,GAAGpF,QAAQ,MAAS,EAC/D+Y,EAAQ5b,EAAI6C,QAAQ,iBAAiB,EAIvC6Y,EAHU1b,EAAIuD,WAAW,SAEhBqY,EACF5b,EACAA,EAAIuD,WAAW,KACf,GAAGtB,SAASoB,UAAUrD,IACtB2b,EACA,GAAG1Z,SAASoB,SAASpB,SAASqB,eAAetD,IAE7C,GAAGiC,SAASoB,SAASpB,SAASqB,YAAYtD,IAGrD0b,EAAOA,EAAK7N,MAAM,OAAOpG,KAAI9E,GAAKA,EAAEiU,WAAW,UAAW,OAAMhP,KAAK,OACrE,MAAMnE,EAAM,IAAIC,IAAIgY,GAKpB,OAFKtY,GAAQ+X,SAASK,UAAU/X,EAAIE,aAAaC,OAAO,MAAOC,KAAKC,OAE7DL,EAAIM,IACf,CAQAvF,kBAAkBwB,EAAM,GAAI6b,EAAQ,GAChC,OAAQ7b,GAAO,IAAI6N,MAAM,KAAKvE,MAAM,GAAI,EAAIuS,GAAOjU,KAAK,IAC5D,CAUApJ,yBAAyBiQ,EAAM,IAE3B,IAAKA,EAAK,OAAOA,EAGjB,GADcA,EAAIlL,WAAW,KAClB,CACP,MAAMjD,EAAKiR,MAAM0E,MAAMhX,SAASuN,gBAAiBiC,GACjD,OAAOnO,EAAKA,EAAGuU,UAAYpG,CAC/B,CAGA,OADe1B,OAAO+O,OAAOrN,GACVA,GAEnBA,EAAM0M,UAAS,EAAgB1M,GACxB0M,SAASY,SAAStN,GAC7B,CAOAjQ,SAAuBwB,EAAM,IAMzB,OADAA,EAAMA,EAAIuD,WAAW,MAAQ4X,UAAS,EAAe,IAAMnb,EAAMA,EAC1Dmb,SAASa,aAAahc,EACjC,CAMW,eACP,OAAOmb,SAASa,aAAab,UAAS,GAAe,EACzD,CAMW,eACP,OAAOA,SAASG,aAAeH,SAASG,aAAapZ,QAAQ,KAAM,KAAO,EAC9E,CAWA1D,0BAA0B2J,EAAM,GAAI8T,EAAS,OACzC,MAAMjc,EAAMmb,UAAS,EAAgBhT,GACrC,aAAagT,SAASe,KAAKlc,EAAKic,EACpC,CAWAzd,kBAAkB2J,EAAM,GAAI8T,EAAS,MAAOE,EAASC,GAAS,GAC1D,IAAIlS,EAAO,KACX,MAAMmS,EAAK,gBACXF,EAAUA,GAAW,CAAC,GACdE,GAAMD,EAAS,mBAAqBD,EAAQE,IAAO,aAC3D,MAAMrc,EAAMmb,SAASa,aAAa7T,GAAK,GACjCc,QAAYC,MAAMlJ,EAAK,CAAEic,OAAQA,EAAQE,QAASA,IAExD,OADIlT,EAAIE,KAAIe,EAAOkS,QAAenT,EAAIqT,aAAerT,EAAIG,QAClDc,CACX,CAYA1L,sBAAsBwB,EAAM,GAAIic,EAAS,MAAOE,EAASC,GAAS,EAAOxX,GACrE,IACI,GAAI5E,EAAK,OAAOmb,SAASe,KAAKlc,EAAKic,EAAQE,EAASC,EAGxD,CAFE,MAAOpY,GACL0I,MAAMqF,MAAMhS,KAAMiE,EACtB,CACA,OAAIY,IACGwX,EAAS,CAAC,EAAI,GACzB,CAUA5d,sBAAsB2J,EAAM,IAExB,MAAMoU,EAASxP,OAAOwP,OAAOpU,GACvBqU,GAAQD,GAAUvM,WAAWyM,cAActU,GAC3CuU,EAAS1M,WAAWC,WAAWuM,GAKrC,KAJgBE,GAAU3P,OAAO0D,WAAWtI,IAE9BoU,KAAQpU,EAAM4E,OAAO4P,OAAOxU,IAEtCuU,EAAQ,CAGJvU,EAFY6H,WAAWO,gBAAgBiM,SAE3BxM,WAAWG,kBAAkBqM,EAAMzc,MAEzCiQ,WAAWwH,aAAagF,EAEtC,CAEA,GAAKzP,OAAOsB,WAAWlG,GAEvB,OAAOA,CACX,QAGIjD,OAAOC,KAAKgW,SAChB,EC7MW,MAAMyB,eAAere,YAEnCC,SAAkB,kBAElBA,SAAiB,iBAEjBA,SAAiB,iBAEjBA,SAAiB,cAEjBA,SAAiB,cAEjBA,SAAc,WAEdA,SAAqB,kBAErBA,SAAe,CAAC,UAAW,mBAG1B6J,eAAeC,OAAO,UAAWsU,QACjC1X,OAAOC,KAAKyX,OACb,CAEA7V,cACCC,QACA4V,OAAOC,SAAS9c,KACjB,CAEAvB,gBAAgBwT,EAAKQ,EAAU,WAC9B,OAAOjB,MAAMsL,SAAS7K,EAAKQ,EAASoK,QAAO,EAC5C,CAQApe,eAAe8B,EAAI4Y,GAAO,GACzB,IAAIvK,EAAMiO,OAAOE,YAAYxc,GAC7B,MAAMyc,EAASH,OAAOI,QAAQ1c,GACxB2c,EAAMpM,OAAOlL,IAAIrF,EAAI,eAAgB,IAC3C,OAAIqO,EAAY,sBAAsBoO,GAAU7D,YAAevK,aAAesO,qBAC9EtO,EAAMrO,EAAGF,cAAc,YAChBuO,GAAKkG,WAAa,GAC1B,CAOArW,oBAAoB0W,GACnB,OAAK3D,MAAMT,cAAcoE,GAClBnP,MAAMC,KAAKkP,EAAKjJ,YAAYnE,QAAOxH,GAAoB,WAAdA,EAAGkS,UADZ,EAExC,CAUAhU,oBAAoB2J,EAAM,IACzB,OAAK4E,OAAOsB,WAAWlG,GAClBpC,MAAMoI,QAAQhG,GACZyU,QAAO,EAAezU,GADGyU,QAAO,EAAczU,GADjB,EAGrC,CAEA3J,SAAoB2J,GACnB,OAAO4E,OAAOO,SAASnF,IAAQ4E,OAAOkC,iBAAiB9G,EACxD,CAEA3J,SAAsBkJ,GACrB,OAAOA,EAAED,KAAIzD,GAAK4Y,QAAO,EAAc5Y,KAAI4D,KAAK,KACjD,CAEApJ,SAAqBkJ,GAGpB,MAAO,YAFMkV,QAAO,EAAclV,MACnB3B,MAAMoI,QAAQzG,EAAEwV,OAASN,OAAOO,aAAazV,EAAEwV,OAAS,cAExE,CAEA1e,SAAqBkJ,GACpB,OAAOxC,OAAOkY,QAAQ1V,GAAGI,QAAOuV,GAAMT,QAAO,EAAaS,EAAG,MAC3D5V,KAAI4V,GAAM,GAAGA,EAAG,OAAOA,EAAG,QAAOzV,KAAK,IACzC,CAEApJ,sBAAsB8B,GACrB,MAAMqC,EAAIia,OAAOU,WAAWhd,GAC5B,OAAOqC,EAAI,GAAGia,QAAO,MAAaja,KAAO,EAC1C,CAEAnE,qBAAqB8B,GACpB,MAAMqC,EAAIia,OAAOW,UAAUjd,GAC3B,OAAOqC,EAAI,GAAGia,QAAO,MAAYja,KAAO,EACzC,CAEAnE,qBAAqB8B,GACpB,MAAMqC,EAAIia,OAAOY,UAAUld,GAC3B,OAAOqC,EAAI,GAAGia,QAAO,MAAYja,KAAO,EACzC,CAEAnE,qBAAqB8B,GACpB,MAAMqC,EAAIia,OAAOa,UAAUnd,GAC3B,OAAOqC,EAAI,GAAGia,QAAO,MAAYja,KAAO,EACzC,CAEAnE,qBAAqB8B,GACpB,MAAMqC,EAAIia,OAAOc,UAAUpd,GAC3B,OAAOqC,EAAI,GAAGia,QAAO,MAAYja,KAAO,EACzC,CAEAnE,kBAAkB8B,GACjB,MAAMqC,EAAIia,OAAOe,OAAOrd,GACxB,OAAOqC,EAAI,GAAGia,QAAO,MAASja,KAAO,EACtC,CAEAnE,yBAAyB8B,GACxB,MAAMqC,EAAIia,OAAOgB,cAActd,GAC/B,OAAOqC,EAAI,GAAK,GAAGia,QAAO,MAAgBja,IAC3C,CAEAnE,iBAAiB8B,GAChB,OAAOuQ,OAAOgN,UAAUvd,EAAI,SAC7B,CAEA9B,iBAAiB8B,GAChB,OAAOuQ,OAAOlL,IAAIrF,EAAI,SACvB,CAEA9B,kBAAkB8B,GACjB,OAAOuQ,OAAOlL,IAAIrF,EAAI,UACvB,CAEA9B,iBAAiB8B,GAChB,OAAOuQ,OAAOlL,IAAIrF,EAAI,SACvB,CAEA9B,iBAAiB8B,GAChB,OAAOuQ,OAAOlL,IAAIrF,EAAI,SACvB,CAEA9B,iBAAiB8B,GAChB,OAAOuQ,OAAOlL,IAAIrF,EAAI,SACvB,CAEA9B,qBAAqB8B,GACpB,OAAOuQ,OAAOgN,UAAUvd,EAAI,cAAc,EAC3C,CAEA9B,eAAe8B,GACd,OAAOuQ,OAAOgN,UAAUvd,EAAI,QAAQ,EACrC,CAEA9B,eAAe8B,GACd,OAAOuQ,OAAOlL,IAAIrF,EAAI,OAAQ,GAC/B,CAEA9B,cAAc8B,GACb,OAAOuQ,OAAOlL,IAAIrF,EAAI,MAAO,GAC9B,CAEA9B,mBAAmB8B,GAClB,OAAOuQ,OAAOlL,IAAIrF,EAAI,WAAY,GACnC,CAEIwd,kBACH,OAAOlB,OAAOmB,eAAehe,KAC9B,CAEIie,iBACH,OAAOpB,OAAOqB,cAAcle,KAC7B,CAEIme,iBACH,OAAOtB,OAAOuB,cAAcpe,KAC7B,CAEIqe,iBACH,OAAOxB,OAAOyB,cAActe,KAC7B,CAEIue,iBACH,OAAO1B,OAAO2B,cAAcxe,KAC7B,CAEIye,aACH,OAAO5B,OAAOa,UAAU1d,KACzB,CAEI0e,cACH,OAAO7B,OAAOU,WAAWvd,KAC1B,CAEIkD,aACH,OAAO2Z,OAAOW,UAAUxd,KACzB,CAEIgV,aACH,OAAO6H,OAAOY,UAAUzd,KACzB,CAEI2e,aACH,OAAO9B,OAAOc,UAAU3d,KACzB,CAEI4e,iBACH,OAAO/B,OAAOgB,cAAc7d,KAC7B,CAEImZ,WACH,OAAO0D,OAAOI,QAAQjd,KACvB,CAEIb,WACH,OAAO0d,OAAOgC,QAAQ7e,KACvB,CAEIwG,UACH,OAAOqW,OAAOe,OAAO5d,KACtB,CAEI8e,aACH,OAAOjC,OAAOkC,UAAU/e,KACzB,CAEIgf,eACH,OAAOnC,OAAOE,YAAY/c,KAC3B,CAEIsM,WACH,OAAOuQ,OAAOoC,QAAQ1e,GACvB,CAgBC9B,aAAaW,EAAK8f,EAAM,UAAW/f,EAAO,OAAQmD,EAAQ,QAAS8B,EAAO,OAAQ6P,GAAQ,GAE1F,MAAM5H,EAAM,GA2DZ,OAzDK4H,GAAO5H,EAAIwI,KAAK,2BAEjB7O,MAAMoI,QAAQhP,GACjBA,EAAIuD,SAAQ,CAACgF,EAAG5I,KAEf,MAAMogB,SAAcxX,EACdyG,EAAUpI,MAAMoI,QAAQzG,IACfyG,GAAoB,WAAT+Q,GAEb/Q,GACZ/B,EAAIwI,KAAK,IAAIqK,KAAO9a,eACpBiI,EAAIwI,KAAKgI,OAAOuC,MAAMzX,EAAGuX,EAAK/f,EAAMmD,EAAO8B,GAAM,KAEjDiI,EAAIwI,KAAK,IAAIqK,KAAO5c,MAAUqF,MAAMvD,MAAS+a,OAG9C9S,EAAIwI,KAAK,KAAKqK,KAAO,IAKtB/Z,OAAOkY,QAAQje,GAAKuD,SAAQ2a,IAE3B,MAAM+B,EAAQ/B,EAAG,GACXgC,EAAOhC,EAAG,GACV6B,SAAcG,EAEdlR,EAAUpI,MAAMoI,QAAQkR,GACxBC,GAASnR,GAAoB,WAAT+Q,EAC1B,IAAIK,GAAW,EAEf,GAAIpR,GAAWkR,EAAKxgB,OAAS,EAAG,CAC/B,MAAM2gB,EAAYzZ,MAAMoI,QAAQkR,EAAK,IAC/BI,EAA6B,iBAAZJ,EAAK,GAC5BE,IAAaC,GAAaC,EAC3B,CAEIF,GAGOpR,GAFV/B,EAAIwI,KAAK,IAAIqK,KAAO/f,MAASkgB,MAAUjb,cACvCiI,EAAIwI,KAAKgI,OAAOuC,MAAME,EAAMJ,EAAK/f,EAAMmD,EAAO8B,GAAM,KAI1Cmb,GACVlT,EAAIwI,KAAK,IAAIqK,KAAO/f,MAASkgB,MAAUjb,eACvCiI,EAAIwI,KAAKgI,OAAOuC,MAAME,EAAMJ,EAAK/f,EAAMmD,EAAO8B,GAAM,KAEpDiI,EAAIwI,KAAK,IAAIqK,KAAO/f,MAASkgB,MAAU/c,MAAUgd,MAASlb,MAAS+a,OAGpE9S,EAAIwI,KAAK,KAAKqK,KAAO,IAKlBjL,GAAO5H,EAAIwI,KAAK,cAEdxI,EAAIxE,KAAK,GACjB,CAeApJ,cAAc8B,EAAIpB,EAAO,OAAQmD,EAAQ,QAAS8B,EAAO,QAGxD,KAAM7D,aAAc/B,aAAc,MAAO,CAAC,EAE1C,MAAMmhB,EAAQpf,EAAG6C,aAAajE,GACxBygB,EAAOrf,EAAG6C,aAAad,GACvBud,EAAQtf,EAAG6C,aAAagB,GAE9B,IAAIhF,EAAM,KAEV,OAAQygB,GACP,IAAK,QACJzgB,EAAM,GACN,MACD,IAAK,SACJA,EAAM,CAAC,EACP,MACD,QACC,OAAOyd,QAAO,EAAQ+C,EAAMC,GAG9B,MAAMC,EAAS9Z,MAAMC,KAAK1F,EAAG6R,UACvBhE,EAAoB,UAAVyR,EACVE,EAAqB,WAAVF,EAgBjB,OAdAC,EAAOnd,SAAQpC,IACd,MAAMyf,EAAOzf,EAAG6C,aAAajE,GAC7B,GAAIiP,EACHhP,EAAIyV,KAAKgI,OAAOD,OAAOrc,EAAIpB,EAAMmD,EAAO8B,SAClC,GAAG2b,EAAU,CACnB,MAAM1T,EAAMwQ,OAAOD,OAAOrc,EAAIpB,EAAMmD,EAAO8B,GAC3ChF,EAAI4gB,GAAQ3T,CACb,KAAO,CACN,MAAM4T,EAAO1f,EAAG6C,aAAad,GACvB4d,EAAO3f,EAAG6C,aAAagB,GAC7BhF,EAAIugB,GAAOK,GAAQnD,QAAO,EAAQoD,EAAMC,EACzC,KAGM9gB,CACR,CAEAX,SAAe2J,EAAKhE,GACnB,OAAQA,GACP,IAAK,UAAY,MAAe,SAARgE,EACxB,IAAK,SAAW,OAAQgF,WAAWhF,GACnC,QAAS,OAAOA,EAElB,ECxXc,MAAM+X,gBAAgB3hB,YAEjCwI,cACIC,OACJ,CAEAnH,oBACeE,KACHiB,IADGjB,KACIqI,aAAa,KAAMsI,KAAK1P,GAC3C,CAEAE,uBACI,MACMZ,EAAKiR,MAAM0E,MAAMhX,SAASoN,KADrBtM,KAC8ByH,OACrClH,GAAIA,EAAGD,QACf,CAMImH,YACA,OAAOqJ,OAAOlL,IAAI5F,KAAM,QAC5B,QAGIsI,eAAeC,OAAO,WAAY4X,SAClChb,OAAOC,KAAK+a,QAChB,EChCW,MAAMC,cAMN3e,sBACP,OAAIC,UAAUC,cAAsBD,UAAUC,cAAcC,OACrD,iEAAiEC,KAAKH,UAAUI,UAC3F,CAMWue,uBACP,OAAQD,cAAc3e,QAC1B,CAEW6e,sBACP,MAAO,SAASze,KAAMH,UAAUI,UAAUU,cAC9C,CAOA/D,sBAAsB2J,EAAM,IACxB,IAAKA,EAAK,OAAO,EACjB,MAAM7F,EAAS6F,EAAI5F,cACnB,GAAId,UAAUC,cAAe,CACzB,IAAIc,GAAM,EAMV,OALAf,UAAUC,cAAce,OAAOC,SAASC,IAChCA,EAAEC,MAAML,cAAcM,QAAQP,IAAW,IACzCE,GAAM,EACV,IAEGA,CACX,CACA,MAAM8d,EAAS7e,UAAUI,UAAU0e,oBAC7BC,EAASF,EAAOzd,QAAQ,OAAS,EACvC,SAAI2d,IAAUle,EAAOiB,WAAW,UACxBid,GAAUF,EAAOzd,QAAQP,GAAU,CAC/C,CAOA9D,0BAA0B2J,EAAM,IAE5B,OAAKA,IAEO,YAARA,EACOgY,cAAcC,UAGb,WAARjY,EACOgY,cAAc3e,SAGlB2e,cAAcM,SAAStY,GAClC,CAOA3J,gBAAgB2J,EAAM,IAClB,IAAKA,EAAK,OAAO,EACjB,MAAM7F,EAAS6F,EAAI5F,cAEnB,GAAId,UAAUC,eAAiBD,UAAUC,cAAcgf,SAAU,CAE7D,OADiBjf,UAAUC,cAAcgf,SAASne,gBAC9BD,CACxB,CAGA,OADeb,UAAUI,UAAU0e,oBACrB1d,QAAQP,GAAU,CACpC,CAUA9D,0BAA0B2J,EAAM,IAE5B,IAAKA,EAAK,OAAO,EAEjB,IAAKwY,OAAO7N,YAAa,OAAO,EAEhC,MAAM8N,EAAQD,OAAO7N,YAAY3O,KAEjC,OAAIyc,EAAM/d,QAAQ,aAAe,EACd,aAARsF,GAA8B,aAARA,IAG7ByY,EAAM/d,QAAQ,cAAgB,KACf,cAARsF,GAA+B,eAARA,EAItC,QAGIjD,OAAOC,KAAKgb,cAChB,ECnGW,MAAMU,kBAAkBtiB,YAEtC,IAAS,EACT,KAAW,EACX,IAAW,KACX,IAAY,KAEZ,KAAW,EACX,IAAQ,YAGP8J,eAAeC,OAAO,aAAcuY,UACrC,CAEA9Z,cACCC,OACD,CAEAxI,yBAAyB8S,GACxB,OAAOyI,OAAO+G,YAAYxP,EAAYuP,UAAUpiB,mBACjD,CAMWA,gCACV,MAAO,CAAC,cAAe,KACxB,CAWIsgB,eACH,OAAOlO,OAAOlL,IAAI5F,KAAM,WAAY,GACrC,CAEIgf,aAAS5W,GACZ0I,OAAOrL,IAAIzF,KAAM,WAAYoI,EAC9B,CAOI4U,aACH,OAAOhQ,OAAOgU,MAAQlQ,OAAOgN,UAAU9d,KAAM,OAC9C,CAKIihB,cACH,OAAOjhB,MAAK,EACb,CAMIyH,YACH,OAAOqJ,OAAOlL,IAAI5F,KAAM,SAAS,EAClC,CAUIkhB,kBACH,OAAOpQ,OAAOlL,IAAI5F,KAAM,cAAe,GACxC,CAEIkhB,gBAAY9Y,GACf0I,OAAOrL,IAAIzF,KAAM,cAAeoI,EACjC,CAMI+Y,SACH,OAAOrQ,OAAOlL,IAAI5F,KAAM,KAAM,GAC/B,CAEImhB,OAAG/Y,GACN0I,OAAOrL,IAAIzF,KAAM,KAAMoI,EACxB,CAOIgZ,cACH,OAAOtQ,OAAOlL,IAAI5F,KAAM,UAAW,GACpC,CAEIohB,YAAQhZ,GACX0I,OAAOrL,IAAIzF,KAAM,UAAWoI,EAC7B,CASI2K,kBACH,OAAOjC,OAAOlL,IAAI5F,KAAM,cAAe,GACxC,CAEI+S,gBAAY3K,GACf0I,OAAOrL,IAAIzF,KAAM,cAAeoI,EACjC,CAOIiZ,cACH,OAAOvQ,OAAOlL,IAAI5F,KAAM,UAAW,GACpC,CAEIqhB,YAAQjZ,GACX0I,OAAOrL,IAAIzF,KAAM,UAAWoI,EAC7B,CAOIkZ,yBACH,OAAOlB,cAAckB,mBAAmBthB,KAAKkhB,YAC9C,CAMIK,gBACH,OAAOnB,cAAcM,SAAS1gB,KAAKmhB,GACpC,CAMIK,yBACH,OAAOpB,cAAcoB,mBAAmBxhB,KAAK+S,YAC9C,CAMI0O,qBACH,OAAOrB,cAAcqB,eAAezhB,KAAKohB,QAC1C,CAMI7Q,YACH,OAAOqI,aAAaa,SAASzZ,KAC9B,CAMIkY,cACH,OAAOlY,MAAK,EACb,CAMI0hB,aACH,OAAQ1hB,MAAK,EACd,CAKI2hB,YACH,OAAO3hB,MAAK,CACb,CAQI4hB,aACH,MACM/c,EAAM,iBACZ,OAFW7E,KAEDyH,MAAQ5C,EAAMiM,OAAOlL,IAAI5F,KAAM,SAAU6E,EACpD,CAMIC,WACH,MAAM/E,EAAKC,KACX,OAAOD,EAAGkhB,SAAWlhB,GAAG,cAAoB+gB,UAAY/gB,GAAG,GAAS+E,KAAO/E,GAAG,EAC/E,CAKA8hB,WACC,MAAM9hB,EAAKC,KACND,EAAGmU,aACRnU,EAAGmU,WAAWxN,mBAAqBrB,cAAcU,OACjDmR,QAAQc,KAAK9Y,SAASoN,KAAM,OAAQvM,EAAGmU,YACxC,CAMA4N,WACC,OAAOhR,OAAOlL,IAAI5F,KAAM,QAAS,GAClC,CAOA+hB,QAAQ7L,EAAQ,IACf,OAAO1E,MAAMuQ,QAAQ/hB,KAAMkW,EAC5B,CAOArC,QAAQqC,EAAQ,IACf,OAAO1E,MAAMqC,QAAQ7T,KAAMkW,EAC5B,CAOAA,MAAMA,EAAQ,IACb,OAAO1E,MAAM0E,MAAMlW,KAAK8E,KAAMoR,EAC/B,CAOAP,SAASO,EAAQ,IAChB,OAAO1E,MAAMmE,SAAS3V,KAAK8E,KAAMoR,EAClC,CAQA7R,kBAAkBqK,EAAM,IACvB,OAAO0M,SAAS2B,YAAYrO,EAC7B,CAMAsT,KAAKjP,GAAc,GAClBvB,MAAMwQ,KAAKhiB,KAAM+S,EAClB,CAMAkP,KAAKlP,GAAc,GAClBvB,MAAMyQ,KAAKjiB,KAAM+S,EAClB,CAQA1O,gBAAgBlF,EAAO,IACtB,IAAKA,EAAM,MAAM,IAAI6O,MAAM,oBAC3B,MAAMjO,EAAKC,KACX,OAAO,IAAIU,SAAQ,CAAC+O,EAAGxL,KACtBlE,EAAGgL,KAAK5L,GAAO+L,GAAQuE,EAAEvE,EAAIxL,SAAQ,GAEvC,CAOAqL,KAAK5L,EAAMsd,GACV,OAAOzc,KAAK4X,OAAOzY,EAAMsd,GAAM,EAChC,CAQA5R,GAAG1L,EAAMsd,EAAM1R,GAAO,GACrB,OAAO/K,KAAK4X,OAAOzY,EAAMsd,EAAM1R,EAChC,CAQAE,IAAI9L,EAAMsd,GACT,OAAOzc,KAAK8Y,SAAS3Z,EAAMsd,EAC5B,CAQA7E,OAAOzY,EAAMsd,EAAM1R,GAAO,GACzB,OAAO/K,KAAKkiB,YAAYliB,KAAMb,EAAMsd,EAAM1R,EAC3C,CAQA+N,SAAS3Z,EAAMsd,GACd,OAAOzc,KAAKmiB,YAAYniB,KAAMb,EAAMsd,EACrC,CAWAyF,YAAY3hB,EAAIpB,EAAO,GAAIyL,EAAIG,GAAO,GACrC,OAAOmM,QAAQkL,OAAOpiB,KAAMO,EAAIpB,EAAMyL,EAAIG,EAC3C,CASAoX,YAAY5hB,EAAIpB,EAAO,GAAIyL,GAC1B,OAAOsM,QAAQ5W,OAAON,KAAMO,EAAIpB,EAAMyL,EACvC,CAKA9K,oBACC,MAAMC,EAAKC,KAEX,IAAID,GAAG,KAAP,CAEA,KAAMA,EAAGuhB,oBAAsBvhB,EAAG0hB,gBAAkB1hB,EAAGwhB,WACtD,OAAOxhB,EAAGO,SAGNP,EAAGkB,KAAIlB,EAAGkB,GAAK0P,KAAK1P,IACzBlB,GAAG,GAAQA,GAAG,KACdA,GAAG,GAAWA,GAAG,GAAMsiB,IACvBzJ,aAAa0J,MAAMviB,GACnBA,GAAG,IAVuB,CAW3B,CAKAoB,uBACC,MAAMpB,EAAKC,KACXD,GAAG,IAAW,EACVA,GAAG,IAAWA,GAAG,GAAU2M,aAC/BkM,aAAatY,OAAOP,GACpBmX,QAAQqL,kBAAkBxiB,GAC1BA,GAAG,KACHA,GAAG,GAAY,KACfA,GAAG,GAAW,KACdA,GAAG,GAAQ,IACZ,CASAsB,yBAAyBlC,EAAMmC,EAAUC,GACxC,MAAMxB,EAAKC,KACE,gBAATb,GAAwBY,GAAG,KAClB,OAATZ,IACHyZ,aAAatY,OAAOgB,GACpBsX,aAAa0J,MAAMviB,IAEhBA,GAAG,GACNiN,OAAOpN,uBAAsB,KAC5BG,EAAGyB,kBAAkBrC,EAAMmC,EAAUC,EAAS,GAGjD,CAQAC,kBAAkBrC,EAAMmC,EAAUC,GAElC,CAMCihB,UACA,MAAMziB,EAAKC,KACX,GAAID,EAAGmY,QAAS,OAChBnY,GAAG,GAAS,EACZ,MAAM6K,EAAKqF,WAAWyM,cAAc3c,EAAGshB,SACvCpR,WAAWwH,aAAa7M,GACxBsM,QAAQc,KAAK9Y,SAASoN,KAAM,iBAAkBvM,EAC/C,CAKA,IAAekE,GACd,MAAMlE,EAAKC,KACXgN,OAAOpN,uBAAsB,KACxBG,EAAGmY,UACPnY,EAAGyhB,mBAAqBzhB,EAAGkiB,MAAK,GAAQliB,EAAGiiB,MAAK,GAAI,GAEtD,CAEA,MACC,MACMS,EAAK7J,aAAaa,SADbzZ,KAC0B8gB,WACrC,OAAO2B,GAAMA,EAAGxB,OACjB,CAEA,MACC,MAAMlhB,EAAKC,KACXgN,OAAOpN,uBAAsB,KAC5BG,EAAG8hB,UAAU,GAEf,CAMK,SACJ,MAAM9hB,EAAKC,KAMX,OALKD,EAAGmU,aACPnU,EAAG2iB,aAAa,CAAEC,KAAM,SACxB5iB,GAAG,GAAYwM,cAAcC,OAAOzM,GAAG,IACvCA,EAAG8hB,YAEG9hB,EAAGmU,UACX,CAEI,SACH,MAAMnU,EAAKC,KACX,OAAQD,GAAG,IAAYA,EAAGid,SAAYjd,GAAG,EAC1C,CAOAsE,WAEC,MAAMtE,EAAKC,KAEX,GAAID,EAAGmY,QAAS,OAEhB,MAAM0K,EAAS7iB,GAAG,GACZ6J,EAAMgZ,QAAe7iB,EAAGgd,YAAYhd,EAAGif,UAAYjf,EAAG8iB,gBAEtD3L,QAAQ4L,oBAAmB,KAEhC,GAAI/iB,EAAGmY,QAAS,OAEhB,MAAMyG,EAAS5e,GAAG,GAElB,GAAIA,GAAG,GAUN,OATI6iB,EACH7iB,GAAG,GAAWyR,MAAMuR,aAAahjB,EAAI6J,GAAK,IAE1C7J,GAAG,GAAWyR,MAAMhD,MAAM5E,GAAK,GAC/B7J,GAAG,GAASkB,GAAKlB,EAAGkB,GACpBlB,EAAGkB,GAAK0P,KAAK1P,IAEduQ,MAAMc,KAAKvS,EAAIA,GAAG,SAClByR,MAAMwR,eAAerE,EAAOzb,OAAQnD,GAAG,GAAU4e,EAAOiD,QAIzD,GAAIjD,EAAOzb,SAAWnD,EAAtB,CAiBA,GAAI4e,EAAOzb,SAAWnD,EAAGqU,cAGxB,OAFArU,GAAG,GAAWA,EAAGid,OAASjd,EAAKA,GAAG,QAClCyR,MAAMyR,QAAQljB,GAAG,GAAU6J,GAI5B7J,GAAG,GAAWyR,MAAMuR,aAAahjB,EAAI6J,GAAK,GAC1C4H,MAAMc,KAAKvS,EAAIA,GAAG,IAClByR,MAAMwR,eAAerE,EAAOzb,OAAQnD,GAAG,GAAU4e,EAAOiD,OAXxD,MAbC,GAAI7hB,EAAGid,OACN,GAAIpT,EAAK,CACR,MAAMgF,EAAM4C,MAAMuR,aAAahjB,EAAI6J,GAAK,GACxC7J,GAAG,GAAW6O,EACd4C,MAAMwR,eAAerE,EAAOzb,OAAQ0L,EAAK+P,EAAOiD,OACjD,MACC7hB,GAAG,GAAWA,OAGfA,GAAG,GAAWA,GAAG,GACjByR,MAAMyR,QAAQljB,GAAG,GAAU6J,EAckC,IAGhE7J,EAAG8hB,UACJ,CAEA,MAEC,MAAM9hB,EAAKC,KACL4O,EAAM7O,EAAG6hB,OACThH,EAAMhM,EAAI9L,QAAQ,KAExB,IAAI8e,EAAShH,EAAM,EAAIhM,EAAIrF,MAAM,EAAGqR,GAAOhM,EACvC1L,EAAS0X,EAAM,EAAIhM,EAAIrF,MAAMqR,EAAM,GAAK,OAE7B,SAAXgH,GAAgC,WAAXA,IACxB1e,EAASA,GAAkB0e,EAC3BA,EAAS,MAGVA,EAAS5U,OAAOgE,UAAU4Q,EAAQ,aAClC1e,EAAS8J,OAAOgE,UAAU9N,EAAQ,QAElC,IAAI3C,EAAK,KACT,OAAQ2C,GACP,IAAK,OACJ3C,EAAKR,EACL,MACD,IAAK,SACJQ,EAAKR,EAAGqU,cACR,MACD,QACC7T,EAAKiR,MAAM0E,MAAMhX,SAASuN,gBAAiBvJ,GAG7C,IAAK3C,EAAI,CACR,MAAMqM,EAAM,4CAA4C7M,EAAG0S,eAAe1S,EAAGkB,WAAWiC,IAExF,MADAyJ,MAAMqF,MAAMjS,EAAI6M,GACV,IAAIoB,MAAMpB,EACjB,CAIA,MAAO,CACNgV,OAAQA,EACR1e,OAAQ3C,EACR8hB,MALa9hB,IAAOR,GAAMQ,IAAOR,EAAGqU,eAOtC,CAEA,MACC,MAAMrU,EAAKC,KACPD,GAAG,IAAYA,GAAG,GAASO,SAC9BP,GAAG,GAASO,SACZP,GAAG,GAAW,KAEhB,CAQAsE,WACC,MAAMtE,EAAKC,WAELD,GAAG,KACLA,EAAGmY,SACFnY,GAAG,KACHA,EAAGid,QAAQjd,EAAGmiB,YAAYliB,KAAMd,SAAU,WAAYa,GAAG,GAAasH,KAAKtH,IAChFA,EAAGmiB,YAAYliB,KAAM4gB,OAAO7N,YAAa,SAAUhT,GAAG,GAAesH,KAAKtH,IAC1EiN,OAAOpN,uBAAsB,IAAMG,EAAGyiB,YACvC,EC5oBc,MAAMU,eAAe1kB,YAEhCC,UAAe,WAEfA,WAAe,EACf,IAAa,IAAI6G,IAEjB,GAAS,IAAI4E,IACb,KAAW,EAEX,IAAY,EACZ,KAAe,EACf,IAAUlK,MAAK,GAAUqH,KAAKrH,MAC9B,GAAYA,MAAK,GAAYqH,KAAKrH,aAG9BsI,eAAeC,OAAO,UAAW2a,QACjC/d,OAAOC,KAAK8d,QACZhkB,SAASoN,KAAK7C,iBAAiB,QAASxF,IAChCif,OAAOC,SAASD,OAAOC,QAAQC,aAAanf,EAAEvE,OAAO,GAEjE,CAEWhB,gCACP,MAAO,CAAC,OAAQ,OACpB,CAEWykB,qBACP,OAAOD,QAAO,EAClB,CAEAlc,cACIC,OACJ,CAEAnH,oBACI,MAAMC,EAAKC,KAGX,GAFAD,EAAGkB,GAAKlB,EAAGkB,GAAKlB,EAAGkB,GAAK0P,KAAK1P,GAC7BlB,GAAG,KAAe6Y,aAAaK,KAAKjZ,KAAKyS,SACrC1S,GAAG,GAAc,OAAOmE,QAAQC,IAAI,GAAGpE,EAAG0S,eAAe1S,EAAGkB,8DAChEiiB,QAAO,GAAQnjB,EACf6Y,aAAa0J,MAAMviB,GACnBA,GAAG,IACP,CAEAoB,uBACI,MAAMpB,EAAKC,KACXuH,cAAcxH,GAAG,IACjB,6CAA+BA,GAAG,GAASA,GAAG,GAC9C6Y,aAAatY,OAAOP,GACpBA,GAAG,GAAW4K,QACd5K,GAAG,GAAa,KAChBA,GAAG,EAAY,KACfA,GAAG,GAAU,KACRA,GAAG,KAAcmjB,QAAO,GAAQ,KACzC,CAEA7hB,yBAAyBlC,EAAO,GAAIkkB,EAAS,GAAIC,EAAS,IACtDtjB,MAAK,GAAkBb,EAAMkkB,EAAQC,EACzC,CAEAjf,SAAwBlF,EAAO,GAAIkkB,EAAS,GAAIC,EAAS,IAErD,MAAMvjB,EAAKC,KAEE,SAATb,IACKY,GAAG,GAAWuK,IAAIgZ,UACbvjB,GAAG,GAAMujB,GAEnBvjB,EAAGqjB,aAAalkB,SAASuN,gBAAiB1M,EAAGwjB,OAGpC,SAATpkB,GACAY,GAAG,IAEX,CAEA,IAAiBQ,GACb,QAAUA,aAAcijB,mBACjBjjB,aAAcmI,kBACdnI,aAAcwG,iBACdxG,aAAckjB,iBACdljB,aAAcsS,QACzB,CAEA,IAAUtS,GAEN,MACMiS,EAASjS,aAAcqS,KAE7B,GAAIJ,GAA0C,GAAhCjS,EAAGwU,YAAYvH,OAAO1O,OAAa,OAAO,EAExD,MAAMuN,EAAMmG,EAASjS,EAAG6T,cAAgB7T,EACxC,OANWP,MAMD,GAAiBqM,IANhBrM,MAM2B,GAAgBqM,EAC1D,CAEA,IAAgB9L,GACZ,MAAuC,UAAhCuQ,OAAOlL,IAAIrF,EAAI,YAC1B,CAEA,IAAYA,GACGP,MACR,EAAO8K,IAAIvK,EAClB,CAEA,MACI,MAAMR,EAAKC,KACPD,GAAG,IACgB,IAAnBA,GAAG,EAAO4L,MACd/L,uBAAsB,KAClB,IACIoG,MAAMC,KAAKlG,GAAG,GAAQ4C,SAAQpC,IAC1BR,GAAG,EAAO8F,OAAOtF,GACjBR,GAAG,GAAaQ,EAAG,GAI3B,CAFE,MAAM0D,GACJC,QAAQC,IAAIF,EAChB,IAER,CAEA,IAAa1D,GACT,MAAMR,EAAKC,KACX,GAAID,GAAG,GAAW,EAAG,OAAOA,GAAG,EAAO+K,IAAIvK,GAC1C,GAAIA,IAAOrB,SAASuN,gBACjB1M,EAAGqjB,aAAa7iB,EAAIR,EAAGwjB,UACnB,CACahjB,aAAcqS,KACrB7S,GAAG,GAAiBQ,GAAMR,GAAG,GAAkBQ,EAC5D,CACIA,EAAG2T,YAAYnU,EAAGqjB,aAAa7iB,EAAG2T,WAAYnU,EAAGwjB,KACzD,CAEA,IAAkBhjB,GACd,MAAMR,EAAKC,KACXD,EAAGoU,KAAKxR,SAAQuO,GAAQnR,GAAG,GAAiBQ,EAAI2Q,IACpD,CAEA,IAAiB3Q,EAAIpB,GAEjB,MAEMukB,EAAQ,eAAevkB,IAE7B,IAAIwkB,EAAO7S,OAAOlL,IAAIrF,EAAImjB,GACtBtb,EAAM0I,OAAOlL,IAAIrF,EAAIpB,GAErBwkB,EACAvb,EAAMub,EACCvb,GACP0I,OAAOrL,IAAIlF,EAAImjB,EAAOtb,GAGtBA,GAAK0I,OAAOrL,IAAIlF,EAAIpB,EAbba,KAasB4jB,UAAUxb,GAC/C,CAEA,IAAiB7H,GAEbA,EAAGsjB,OAAStjB,EAAGsjB,QAAUtjB,EAAGwU,YAC5BxU,EAAGwU,YAFQ/U,KAES4jB,UAAUrjB,EAAGsjB,OACrC,CAEAxf,SAAYyf,EAAO,IAEf,MAAM/jB,EAAKC,KACLoc,EAAU,CACZ,gBAAiB,WACjB,OAAU,YAGd,IAAIlT,EAAM,KACV,IACInJ,GAAG,KACH,MAAME,EAAMmb,SAASa,aAAa,GAAGlc,EAAGE,OAAO6jB,UAI/C,GAFA5a,QAAYkS,SAASe,KAAKlc,EAAK,MAAOmc,GAAS,IAC1ClT,GAAO4a,EAAKhhB,QAAQ,KAAO,IAAGoG,QAAYnJ,GAAG,GAAM+jB,EAAKhW,MAAM,KAAK,MACnE5E,EAAK,OAAO,EACjBnJ,GAAG,EAAO+jB,EAAM5a,EAIpB,CAFE,QACEnJ,GAAG,IACP,CAIA,OAFKA,EAAGwjB,MAAMxjB,GAAG,MAEV,CACX,CAWA,GAAO+jB,EAAM1kB,GACT,IAAMA,IAAO0kB,EAAO,OAAO,EAC3B,MAAMpc,EAAM1H,MAAK,GAAa8jB,GAK9B,OAJA3e,OAAOkY,QAAQje,GAAKuD,SAAS2a,IACzB,MAAMyG,EAAKpT,KAAKvQ,SAASkd,EAAG,IAC5B5V,EAAIjC,IAAIse,EAAIzG,EAAG,GAAG,KAEf,CACX,CAOA,IAAalV,EAAM,IACf,MAAMrI,EAAKC,KAKX,OAJKD,GAAG,GAAWuK,IAAIlC,KACnBrI,GAAG,GAAW0F,IAAI2C,EAAK,IAAI9C,KAC3BvF,GAAG,GAAMqI,IAENrI,GAAG,GAAW6F,IAAIwC,EAC7B,CAEA,MACI,MAAMrI,EAAKC,KACPD,EAAGwjB,MACH,2CAA6BxjB,GAAG,GAASA,GAAG,GAC5CA,GAAG,GAAYqH,YAAYrH,GAAG,GAAYsH,KAAKtH,GAAK,OAEpD,6CAA+BA,GAAG,GAASA,GAAG,GAC9CwH,cAAcxH,GAAG,IAEzB,CAQAqjB,aAAa7iB,EAAIgjB,GAAO,GAEpB,MAAMxjB,EAAKC,KAEPO,IAAOrB,SAASuN,iBAAiB1M,GAAG,EAAO+K,IAAIvK,GACnDyF,MAAMC,KAAK1F,EAAG2L,YACTnE,QAAOxH,GAAMR,GAAG,GAAUQ,KAC1BoC,SAAQpC,GAA8B,GAAxBA,EAAG2L,WAAWpN,OAAciB,GAAG,EAAO+K,IAAIvK,GAAMR,EAAGqjB,aAAa7iB,GAAI,KAElFgjB,GAAMxjB,GAAG,IAClB,CAUA6jB,UAAUxb,GAEN,GAAI4E,OAAOmC,cAAc/G,GAAM,OAAOA,EAEtC,MAAMrI,EAAKC,KAEX,IAAIqM,EAAMjE,EACNgQ,EAAM,KACNlP,EAAM,KACN8a,EAAM,KAGV,IADAd,QAAO,GAAMe,WAAa,EACgB,QAAlCD,EAAMd,QAAO,GAAMgB,KAAK9b,KAC5BgQ,EAAM4L,EAAI,GACV9a,EAAMnJ,EAAGkZ,KAAKb,EAAI7O,MAAM,GAAI,IAC5B8C,EAAMA,EAAIlK,QAAQiW,EAAKlP,GAG3B,OAAOmD,CACX,CASA4M,KAAK7Q,GACD,MACM+b,EAAKxT,KAAKvQ,SAASgI,GACzB,OAFWpI,MAED,GAFCA,KAEe8jB,MAAMle,IAAIue,IAAO/b,CAC/C,CAMImb,WACA,OAAOzS,OAAOgN,UAAU9d,KAAM,QAAQ,EAC1C,CAEIujB,SAAKnb,EAAM,IACX0I,OAAOsT,UAAUpkB,KAAM,OAAQoI,EACnC,CAKI+a,cACA,OAAOrS,OAAOlL,IAAI5F,KAAM,UAAWd,SAASuN,gBAAgBqX,MAAQpiB,UAAUwM,SAClF,CAEIiV,YAAQ/a,EAAM,IACd0I,OAAOrL,IAAIzF,KAAM,UAAWoI,EAChC,CAKI0b,WACA,OAAOhT,OAAOlL,IAAI5F,KAAM,OAAQA,KAAKmjB,QACzC,CAEIW,SAAK1b,EAAM,IACX0I,OAAOrL,IAAIzF,KAAM,OAAQoI,EAC7B,CAKI+L,WAEA,OADYrD,OAAOlL,IAAI5F,KAAM,OAAQ,iBAC1B8N,MAAM,IACrB,CAEIqG,SAAK/L,EAAM,IACXA,EAAMpC,MAAMoI,QAAQhG,GAAOA,EAAIP,KAAK,KAAOO,EAC3C0I,OAAOrL,IAAIzF,KAAM,OAAQoI,EAC7B,CAKInI,UACA,OAAO6Q,OAAOlL,IAAI5F,KAAM,MAAO,GAAGkC,SAASoB,eAC/C,CAEIrD,QAAImI,EAAM,IACV0I,OAAOrL,IAAIzF,KAAM,MAAOoI,EAC5B,EC/VW,MAAMic,gBAEpB5lB,cAAgB,IAAI6G,IAQpB7G,aAAaU,EAAM6f,GAClBhf,KAAKskB,OAAO7e,IAAItG,EAAM6f,EACvB,CAOAvgB,cAAcU,GACb,OAAOa,KAAKskB,OAAOze,OAAO1G,EAC3B,CAOAV,YAAYU,GACX,OAAOa,KAAKskB,OAAO1e,IAAIzG,EACxB,CASAV,mBAAmBU,EAAM6f,GACxB,MAAMjf,EAAKskB,gBACX,IAAI9jB,EAAKR,EAAGoc,KAAKhd,GACjB,OAAIoB,IACJA,EAAKR,EAAGyM,OAAOwS,GACfjf,EAAGuiB,MAAMnjB,EAAMoB,GACRA,EACR,CAQA9B,cAAcugB,GACb,MAAMze,EAAKrB,SAASyK,cAAc,YAElC,OADA6H,MAAMyR,QAAQ1iB,EAAIye,GACXze,CACR,CAQA9B,aAAaugB,GACZ,OAAOxN,MAAM+S,kBAAkBvF,GAAYA,EAASwF,QAAQC,WAAU,GAAQ,IAC/E,CAQAhmB,0BAA0BmQ,GACzB,MAAMhE,EAAKqF,WAAWyM,cAAc9N,GACpC,QAAOqB,WAAWC,WAAWtF,IAAMA,CACpC,CAQAnM,sBAAsBmQ,GACrB,MAAMxG,EAAMwG,EAAMA,EAAIpB,OAAS,GAE/B,QAAO,YAAY3L,KAAKuG,IAAOwG,CAChC,CAQAnQ,qBAAqBmQ,GACpB,MAAMxG,EAAMwG,EAAMA,EAAIpB,OAAS,GAC/B,QAAO,gCAAgC3L,KAAKuG,IAAOwG,CACpD,CAUAnQ,oBAAoBimB,GAAS,EAAOvlB,EAAO,GAAI6f,GAC9C,MAAMjf,EAAKskB,gBACX,OAAIK,EAAe3kB,EAAG4kB,YAAYxlB,EAAM6f,GACjCjf,EAAGyM,OAAOwS,EAClB,CAUAvgB,wBAAwBimB,GAAS,EAAOvlB,EAAO,GAAIyP,GAClD,MAAM7O,EAAKskB,gBACL1c,EAAI5H,EAAG6kB,eAAehW,GAC5B,OAAKjH,EACE5H,EAAG8kB,aAAaH,EAAQvlB,EAAMwI,GADtBA,CAEhB,CAWAlJ,6BAA6BimB,GAAS,EAAOvlB,EAAO,GAAIyP,GACvD,MAAM7O,EAAKskB,gBAGL1c,EAAIiH,EACV,IACC,IAAIoQ,EAAW,KAEf,OADI0F,IAAQ1F,EAAWjf,EAAGoc,KAAKxU,IAC3BqX,EAAiBA,GACrBA,QAAiB5D,SAAS0J,aAAand,GAChC5H,EAAG8kB,aAAaH,EAAQvlB,EAAM6f,GAGtC,CAFE,MAAO/a,GACR0I,MAAMqF,MAAMjS,EAAIkE,EACjB,CACA,OAAO,CACR,CAWAxF,kCAAkCimB,GAAS,EAAOvlB,EAAO,GAAIyP,GAC5D,MAAM7O,EAAKskB,gBACLzZ,EAAK7K,EAAGglB,mBAAmBnW,GACjC,IAAKhE,EAAI,OAAOA,EAChB,IACC,IAAIoU,EAAW,KAEf,OADIjf,EAAG2kB,SAAQ1F,EAAWjf,EAAGoc,KAAKxU,IAC9BqX,EAAiBA,GACrBA,EAAW/O,WAAWO,gBAAgB5F,SAAYA,IAAOA,IAClD7K,EAAG8kB,aAAaH,EAAQvlB,EAAM6f,GAGtC,CAFE,MAAO/a,GACR0I,MAAMqF,MAAMjS,EAAIkE,EACjB,CACA,OAAO2G,CACR,CAWAnM,0BAA0BimB,GAAS,EAAOvlB,EAAO,GAAIyP,GAEpD,IAAKzP,EAAM,OAAO,EAClB,IAAKyP,EAAK,OAAO,EAEjB,MAAM7O,EAAKskB,gBAGX,IAAIrF,GAAW,EAoBf,OAlBwB,GAApBpQ,EAAI9L,QAAQ,OAEfkc,EAAW9f,SAAS8lB,eAAepW,EAAIrF,MAAM,KAIzCyV,IACJA,EAAWjf,EAAGklB,iBAAiBP,EAAQvlB,EAAMyP,IAGzCoQ,IACJA,QAAiBjf,EAAGmlB,qBAAqBR,EAAQvlB,EAAMyP,IAGnDoQ,IACJA,QAAiBjf,EAAGolB,gBAAgBT,EAAQvlB,EAAMyP,IAG5CoQ,CACR,ECtND,MAAMoG,mBAAmB5mB,YAExB,KAAa,EACb,IAAW,KACX,IAAY,KAKDE,gCACV,MAAO,CAAC,OACT,CAEAsI,cACCC,OACD,CAEIhG,SACH,OAAO6P,OAAOlL,IAAI5F,KAAM,KACzB,CAEIiB,OAAGmH,GACN0I,OAAOrL,IAAIzF,KAAM,KAAMoI,EACxB,CAEIpE,WACH,OAAO8M,OAAOlL,IAAI5F,KAAM,OACzB,CAEIgE,SAAKoE,GACR0I,OAAOrL,IAAIzF,KAAM,OAAQoI,EAC1B,CAEI4U,aACH,OAAOhQ,OAAOgU,MAAQlQ,OAAOgN,UAAU9d,KAAM,QAAQ,EACtD,CAEI8E,WACH,OAAO9E,MAAK,IAAYA,KAAKkU,UAC9B,CASIgN,kBACH,OAAOpQ,OAAOlL,IAAI5F,KAAM,cAAe,GACxC,CAEIkhB,gBAAY9Y,GACf0I,OAAOrL,IAAIzF,KAAM,cAAeoI,EACjC,CAKI+Y,SACH,OAAOrQ,OAAOlL,IAAI5F,KAAM,KAAM,GAC/B,CAEImhB,OAAG/Y,GACN0I,OAAOrL,IAAIzF,KAAM,KAAMoI,EACxB,CAMIgZ,cACH,OAAOtQ,OAAOlL,IAAI5F,KAAM,UAAW,GACpC,CAEIohB,YAAQhZ,GACX0I,OAAOrL,IAAIzF,KAAM,UAAWoI,EAC7B,CAKA/G,yBAAyBlC,EAAMmC,EAAUC,GAC7BvB,MACJ,IAAuB,SAATb,GADVa,KAC8B8kB,cAC1C,CAKAhlB,oBACC,MAAMC,EAAKC,KACLyiB,EAAK1iB,EAAGqU,cACd,IAAIqO,GAAoB,WAAdA,EAAGhQ,QAAb,CACA,KAAM1S,EAAGuhB,oBAAsBvhB,EAAG0hB,gBAAkB1hB,EAAGwhB,WACtD,OAAOxhB,EAAGO,SAENP,EAAGkB,KAAIlB,EAAGkB,GAAK0P,KAAK1P,IACzBlB,GAAG,IAAa,EAChB6Y,aAAa0J,MAAMviB,GACnBA,EAAG+kB,cAPsC,CAQ1C,CAKA3jB,uBACC,MAAMpB,EAAKC,KACXD,GAAG,IAAa,EAChBA,GAAG,KACCA,GAAG,IAAWA,GAAG,GAAU2M,aAC/BkM,aAAatY,OAAOP,GACpBskB,gBAAgB/jB,OAAOP,EAAGkB,GAC3B,CAEA,MACC,MAAMlB,EAAKC,KACPD,GAAG,KACNA,GAAG,GAASO,SACZP,GAAG,GAAW,KAEhB,CAOIuhB,yBACH,OAAOlB,cAAckB,mBAAmBthB,KAAKkhB,YAC9C,CAMIK,gBACH,OAAOnB,cAAcM,SAAS1gB,KAAKmhB,GACpC,CAMIM,qBACH,OAAOrB,cAAcqB,eAAezhB,KAAKohB,QAC1C,CAMIrX,aACH,MAAMhK,EAAKC,KAKX,OAJKD,EAAGmU,YAAcnU,GAAG,KACxBA,EAAG2iB,aAAa,CAAEC,KAAM,SACxB5iB,GAAG,GAAY,mCAAqBA,EAAGmU,aAEjCnU,EAAGmU,UACX,CAQA7P,qBACC,MAAMtE,EAAKC,KACL4O,QAAYyV,gBAAgBS,cAAa,EAAM/kB,EAAGkB,GAAIlB,EAAGiE,MAC/D,OAAK4K,EAID7O,EAAGqU,yBAAyBiR,iBAC/BnO,QAAQQ,cAAcxY,SAAU,cAAe,CAAE+B,GAAIlB,EAAGkB,GAAI+C,KAAMjE,EAAGiE,OAC9D4K,UAGFsI,QAAQ4L,oBAAmBze,UAChC,GAAKtE,GAAG,GAAR,CACA,GAAIA,EAAGid,OAAQ,CACd,MAAM1Q,EAAOkF,MAAMuR,aAAahjB,EAAI6O,EAAIkG,WACxC/U,GAAG,GAAWA,EAAGgB,sBAAsB,WAAYuL,EACpD,MACCvM,EAAGgK,OAAOrD,mBAAqBrB,cAAcU,OAC7CyL,MAAMyR,QAAQljB,EAAGgK,OAAQ6E,EAAIkG,WAE9BoC,QAAQQ,cAAc3X,EAAI,gBAAiB,CAAEkB,GAAIlB,EAAGkB,GAAI+C,KAAMjE,EAAGiE,OAAQ,GAAM,EARrD,CAQ0D,IAE9E4K,IAnBNjC,MAAMqF,MAAMhS,KAAM,8BAA8BD,EAAGkB,YAAYlB,EAAGiE,SAC3D,EAmBT,CAOAshB,cAActhB,EAAO,IAGpB,OADIA,IADOhE,KACEgE,KAAOA,GADThE,KAEDulB,UAAU,gBACrB,CAOAA,UAAUpmB,EAAO,IAChB,MAAMY,EAAKC,KACX,OAAO,IAAIU,SAAQ,CAAC+O,EAAGxL,KACtB,IAAK9E,EAAM,OAAO8E,EAAE,oBACpBiT,QAAQnM,KAAKhL,EAAI,KAAMZ,GAAO8E,GAAMwL,EAAExL,EAAEvE,SAAS,CAAEqL,MAAM,GAAO,GAElE,CAOAmL,MAAM/W,EAAO,IACZ,OAAOqS,MAAM0E,MAAMlW,KAAMb,EAC1B,CAQAwW,SAASxW,EAAO,GAAIqmB,GAAU,GAC7B,OAAOhU,MAAMmE,SAAS3V,KAAMb,EAC7B,QAGCmJ,eAAeC,OAAO,cAAe6c,YACrCjgB,OAAOC,KAAKggB,WACb,E","sources":["webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/head/GSLinkExt.mjs","webpack:///./modules/head/GSStyleExt.mjs","webpack:///./modules/head/GSCSS.mjs","webpack:///./modules/head/GSScript.mjs","webpack:///./modules/head/GSLink.mjs","webpack:///./modules/base/GSEventBus.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSID.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/base/GSBlock.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/templating/GSCacheTemplate.mjs","webpack:///./modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tlet no_cache = false;\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            return self.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.indexOf('\\.css') > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.indexOf('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({type:type, listener : listener});\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */    \r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */    \r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n        .filter(o => o.type === type && o.listener === listener)\r\n        .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */        \r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.indexOf('<') > -1 && val.indexOf('>') > 0;\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn self.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\t static register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, {extends : ext?.toLowerCase()});\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\t\t\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tself.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\treturn el?.tagName?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanotizer when exit experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el)  el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\t static fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (!hidden && el.dataset.ignore === 'true') return;\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && obj.hasOwnProperty(el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!self.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            self.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        if (self.hasOwnProperty('GS_NO_CACHE')) {\r\n            GSLoader.NO_CACHE = self.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n        const isExt = url.indexOf('extension://')>-1;\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template flat=\"${isFlat || flat}\" href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nclass GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","id","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","self","hasOwnProperty","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","constructor","super","order","isCSS","setInterval","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSEventBus","EventTarget","Set","data","register","emit","has","exist","bus","removeEventListener","listener","clear","fn","on","add","once","wrap","off","evt","MutationObserver","observe","opt","cfg","childList","subtree","observer","forRemove","size","mutations","mutation","addedNodes","removedNodes","rootEL","filters","childNodes","k","callback","tmp","body","GSDOMObserver","create","documentElement","disconnect","GSLog","msg","forced","logging","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSID","prefx","next","GSAttr","isHTMLElement","normalize","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","children","shift","link","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","isGSElement","orientation","classList","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","push","innerHTML","textContent","toggle","apply","contains","root","unwrap","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","hidden","queryAll","ignore","toValue","fromValue","every","d","setValue","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","timeout","wait","callFunction","sendSuspended","er","listen","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","m","elid","fnid","GSComponents","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","prototype","isGSExtra","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSData","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSItem","validate","getTemplate","isFlat","getFlat","cls","items","generateItem","entries","kv","getDismiss","getTarget","getToggle","getAction","getInject","getCSS","getSelectable","getAsBool","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","dismiss","inject","selectable","getName","active","getActive","template","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSBlock","GSEnvironment","isDesktop","isWebkit","strAgt","toLocaleLowerCase","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","hide","show","attachEvent","removeEvent","attach","ref","store","deattachListeners","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","GSi18n","default","translateDOM","oldVal","newVal","auto","HTMLScriptElement","HTMLMetaElement","dname","dval","translate","gsi18n","lang","hk","arr","lastIndex","exec","hv","setAsBool","GSCacheTemplate","_store","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"sourceRoot":""}