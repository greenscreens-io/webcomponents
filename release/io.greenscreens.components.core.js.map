{"version":3,"file":"io.greenscreens.components.core.js","mappings":"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","sources":["webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/head/GSLinkExt.mjs","webpack:///./modules/head/GSStyleExt.mjs","webpack:///./modules/head/GSCSS.mjs","webpack:///./modules/head/GSScript.mjs","webpack:///./modules/head/GSLink.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSID.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSEventBus.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSDate.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/base/GSBlock.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/templating/GSCacheTemplate.mjs","webpack:///./modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\t// const hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n\t\tconst hasKey = 'GS_NO_CACHE' in globalThis;\r\n\t\tif (hasKey) {\r\n\t\t\treturn globalThis.GS_NO_CACHE;\r\n\t\t}\r\n\t\treturn localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none !important;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change elment node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {string} name Attribite name\r\n\t  * @param {boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn ['INPUT','SELECT','TEXTAREA', 'BUTTON'].indexOf(name) > -1;\r\n\t}\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts = true) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts = true) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t//.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.filter(el => el.name && el.name in obj)\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tglobalThis.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name to trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tsetTimeout(() => GSEvent.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t\tglobalThis.GSEvent = GSEvent;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n            .filter(o => o.type === type && o.listener === listener)\r\n            .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */\r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n\r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        globalThis.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        globalThis.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n\r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));\r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : document.body; //  GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        globalThis.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {object} headers return json or string\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n\r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el),\r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\tstatic toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\r\n\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if (isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean': return val === 'true';\r\n\t\t\tcase 'number': return parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */\r\n    static isValidScheme(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\t get scheme() {\r\n\t\treturn GSAttr.get(this, 'scheme', '');\r\n\t}\r\n\r\n\tset scheme(val) {\r\n\t\tGSAttr.set(this, 'scheme', val);\r\n\t}\t\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\t get isValidScheme() {\r\n\t\treturn GSEnvironment.isValidScheme(this.scheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst el = GSDOM.query(me.self, query, all, true);\r\n\t\tif (me.isProxy || el) return el;\r\n\t\treturn GSDOM.query(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '', all = false) {\r\n\t\tconst me = this;\r\n\t\tconst list = GSDOM.queryAll(me.self, query, all, true);\r\n\t\tif (me.isProxy || list.length > 0) return list;\r\n\t\treturn GSDOM.queryAll(me, query, all, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is allowed to be rendered\r\n\t */\r\n\tget isAllowRender() {\r\n\t\tconst me = this;\r\n\t\treturn me.isValidEnvironment && me.isValidBrowser && me.isValidOS && me.isValidScheme;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!me.isAllowRender) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\trequestAnimationFrame(() => me.#render());\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\tget #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSEvent.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n\r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n\r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n\r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n            me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n\r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();\r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nclass GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","id","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","globalThis","GS_NO_CACHE","localStorage","getItem","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","constructor","super","order","isCSS","setInterval","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSLog","msg","forced","logging","fn","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","pattern","charset","Math","floor","random","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","callback","data","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSID","prefx","next","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","forceWrap","nodes","children","wrap","shift","link","slot","isText","tagName","ownClazz","it","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","childNodes","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","toggleClass","contains","root","unwrap","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","opt","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","cfg","m","size","clear","elid","fnid","GSEventBus","EventTarget","Set","register","emit","has","exist","bus","listener","on","off","evt","GSDOMObserver","MutationObserver","observe","childList","subtree","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","documentElement","disconnect","GSComponents","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","MMMM","D","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","ceil","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Intl","Locale","weekInfo","firstDay","charAt","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSItem","validate","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","items","generateItem","entries","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getTarget","getToggle","getAction","getInject","getSelectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","action","dismiss","inject","selectable","getName","getCSS","active","getActive","template","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSBlock","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","FLAT","isProxy","environment","os","browser","scheme","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","isValidScheme","online","ready","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","isAllowRender","ref","store","deattachListeners","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","GSi18n","default","translateDOM","unregisterFilter","oldVal","newVal","auto","HTMLScriptElement","HTMLMetaElement","dname","dval","translate","gsi18n","lang","hk","registerFilter","lastIndex","exec","hv","setAsBool","GSCacheTemplate","_store","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"sourceRoot":""}