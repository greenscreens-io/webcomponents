{"version":3,"file":"io.greenscreens.components.core.js","mappings":"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","sources":["webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/head/GSLinkExt.mjs","webpack:///./modules/head/GSStyleExt.mjs","webpack:///./modules/head/GSCSS.mjs","webpack:///./modules/head/GSScript.mjs","webpack:///./modules/head/GSLink.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSID.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/base/GSBlock.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/templating/GSCacheTemplate.mjs","webpack:///./modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.setAttribute('data-hash', hash);\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tisMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tisSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tisAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile();\r\n\t\tconst isAsset = me.isAsset();\r\n\t\tconst isSchema = me.isSchema();\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (self.GS_DEV_MODE) {\r\n\t\t\ttry {\r\n\t\t\t\tconst base = url.startsWith('//') || url.startsWith('http') ? undefined : location.origin;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject special CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.indexOf('\\.css') > 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" url=\"/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" url=\"/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.indexOf('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = self.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn GSUtil.isString(val) ? val.trim() : (val || def).toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * @param {number} time \r\n\t * @returns {void}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\twindow.GSUtil = GSUtil;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t * @returns {void}\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert element data-* attributes into JSON object\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object}\r\n\t */\r\n\tstatic getData(el) {\r\n\t\tconst o = {}\r\n\t\tif (!GSAttr.isHTMLElement(el)) return o;\r\n\t\tArray.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => o[v.name.split('-')[1]] = v.value);\r\n\t\treturn o;\r\n\t}\r\n\r\n\t/**\r\n\t * Copy data attributes from one element to another\r\n\t * @param {HTMLElement} source \r\n\t * @param {HTMLElement} target \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic setData(source, target) {\r\n\t\tif (!GSAttr.isHTMLElement(source)) return false;\r\n\t\tif (!GSAttr.isHTMLElement(target)) return false;\r\n\t\tArray.from(source.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.forEach(v => GSAttr.set(target, v.name, v.value));\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc.body.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic wrap(own, tpl) {\r\n\t\treturn GSDOM.link(own, tpl || document.createElement('gs-block'));\r\n\t}\r\n\r\n\tstatic link(own, tpl) {\r\n\t\ttpl.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) tpl.setAttribute('slot', own.slot);\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\tif (type && el) {\r\n\t\t\tif (typeof type === 'string') {\r\n\t\t\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\t\t\t} else if (el instanceof type) return el;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\t//return el instanceof HTMLTemplateElement && el.content && el.content.firstElementChild;\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.tagName.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn (el.getAttribute('is') || '').indexOf('gs-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return [];\r\n\t\treturn Array.from(el.childNodes).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {void}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\tel.classList.add(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {booelan}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst css = orientation ? 'gs-hide-orientation' : 'gs-hide';\r\n\t\treturn el.classList.remove(css);\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\tconst isOk = GSDOM.isHTMLElement(el) && el.parentNode;\r\n\t\treturn isOk ? el.parentNode.removeChild(el) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\t static getByID(el, id) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry))  return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif(!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\t\r\n\tstatic queryAll(el, qry) {\r\n\t\tconst res = [];\r\n\t\tif(!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tel.innerText = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts Ture to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\treturn el.classList.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = el.computedStyleMap().get('text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} hidden \r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', hidden = false) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (!hidden && el.getAttribute('data-ignore') === 'true') return;\r\n\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\troot.querySelectorAll(qry).forEach(el => {\r\n\t\t\tif (!el.name) return;\r\n\t\t\tif (obj.hasOwnProperty(el.name)) el.value = obj[el.name];\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\tif (!owner) return document;\r\n\t\t//return GSDOM.isGSElement(owner) ? owner.shadowRoot : owner;\r\n\t\treturn owner.self || owner;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic enableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(own, 'input, select, .btn').forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {string} qry Default to form\r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic disableInput(qry = 'form', own) {\r\n\t\tGSDOM.queryAll(el, 'input, select, .btn').forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tif (el) el.value = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (whiteList.indexOf(el.tagName) === -1);\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {number} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        const els = this.#cache.forEach(el => el.id == id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name);\r\n            if (!el) el = GSComponents.get(name);\r\n            if (el) return r(el);\r\n            GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.path[0];\r\n            const ok = el.id === name || el.tagName === name;\r\n            if (!ok) return;\r\n            fn(el, e);\r\n        };\r\n        let el = GSComponents.find(name);\r\n        if (!el) el = GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n     * Is element gs-* type\r\n     * @param {string} name A GSElement tag name\r\n     * @returns {boolean}\r\n     */\r\n    static isElement(name = '') {\r\n        return GSDOM.isGSElement(name) || GSDOM.isGSElement(name.prototype);\r\n    }\r\n\r\n    /**\r\n     * If standard element has \"is\"=gs-* attribute\r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static isExtra(name = '') {\r\n        return GSDOM.isGSExtra(name) || GSDOM.isGSExtra(name.prototype)\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, self) => self.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter, fields) {\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (value && value.toString().toLowerCase().indexOf(filter) > -1) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        for (let flt of filter) {\r\n            found = found && rec.hasOwnProperty(flt.name) && rec[flt.name].indexOf(flt.value) > -1;\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (typeof v1 === 'string') {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        return ord < 0 ? v2.localeCompare(v1) : v1.localeCompare(v2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = self.GS_TEMPLATE_URL || location.origin;\r\n\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', nocache = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).indexOf('\\.') > -1;\r\n\r\n        if (url.startsWith('http')) {\r\n            path = url;\r\n        } else if (url.startsWith('./')) {\r\n            path = `${location.origin}${location.pathname}/.${url}`;\r\n        } else if (url.startsWith('../')) {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}${url}`;\r\n        } else if (location.href.endsWith('/')) {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        const uri = new URL(path.replaceAll('//', '/'));\r\n        // to handle caching\r\n        if (nocache) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * @param {string} def\r\n     * @return {string}\r\n     */\r\n    static async getTemplate(def = '') {\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n        const isURL = GSUtil.isURL(def);\r\n        if (!isURL) return def;\r\n        def = GSLoader.getTemplateURL(def);\r\n        return  GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static getTemplateURL(url = '') {\r\n\r\n        const caching = self.GS_DEV_MODE === true;\r\n        if (url.startsWith('//')) {\r\n            return GSLoader.normalizeURL(GSLoader.templateURL + url, caching);\r\n        }\r\n\r\n        return GSLoader.normalizeURL(url, caching);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.templatePath, false);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult tempalte path\r\n     * @return {string}\r\n     */\r\n    static get templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {string}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {object|string}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val);\r\n        const res = await fetch(url, { method: method, headers : headers});\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * @param {*} url Full or partial url path\r\n     * @param {*} method http method GET|POST|PUT\r\n     * @param {*} asjson return json or string\r\n     * @param {*} dft default value\r\n     * @returns {object|string}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', asjson = false, dft) {\r\n        try {\r\n            return GSLoader.load(url, method, null, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * @param {JSON|func|url} val \r\n     */\r\n    static async loadData(val = '') {\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #css = 'data-css';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t* Retrieve gs-item template or internal content\r\n\t* NOTE: If tempalte set, item content is overriden\r\n\t* @param {HTMLElement} el \r\n\t* @returns {string}\r\n\t*/\r\n\tstatic async getTemplate(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst cnt = tpl ? await GSLoader.loadTemplate(tpl) : '';\r\n\t\tif (cnt) return cnt;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\tstatic getBody(el) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tif (tpl) return `<gs-template href=\"${tpl}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl ? tpl.innerHTML : '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.childNodes).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getCSSAttr(el) {\r\n\t\tconst v = GSItem.getCSS(el);\r\n\t\treturn v ? `${GSItem.#css}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get isInitialized() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-ga-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static isDesktop() {\r\n        return !GSEnvironment.isMobile();\r\n    }\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().indexOf(strVal) > -1) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop();\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile();\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.indexOf('portrait') > -1) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.indexOf('landscape') > -1) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSi18n from \"./GSi18n.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Vlues parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tif (GSi18n.isInitialized) GSi18n.isInitialized.translateDOM(me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @returns {string}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @param {string} name \r\n\t * @returns {void}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(me, 'componentready', me.id, true, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tme.#content.innerHTML = src;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * @returns {void}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(this, document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(this, screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\trequestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tel.innerHTML = template;\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\tif (!GSDOM.isTemplateElement(template)) return null;\r\n\t\treturn template.content.cloneNode(true);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isURLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nclass GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tme.shadow.innerHTML = tpl.innerHTML;\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n"],"names":["GSBase","HTMLElement","static","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","setAttribute","isHead","head","appendChild","insertAdjacentElement","isAuto","id","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","indexOf","regex","RegExp","match","target","env","getAttribute","self","GS_DEV_MODE","base","startsWith","undefined","origin","uri","URL","searchParams","append","Date","now","href","e","console","log","type","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","Object","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","constructor","super","order","isCSS","setInterval","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","GSScript","createElement","src","getAttributeNames","GSLink","shadow","MutationObserver","observe","opt","cfg","childList","subtree","observer","forRemove","size","mutations","mutation","addedNodes","removedNodes","rootEL","filters","childNodes","k","callback","tmp","fn","body","GSDOMObserver","create","documentElement","disconnect","GSLog","msg","forced","logging","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","isString","tpl","params","names","keys","vals","Function","isStringNonEmpty","isStringEmpty","left","right","lmatch","rmatch","time","r","setTimeout","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSID","prefx","next","GSAttr","isHTMLElement","normalize","removeAttribute","attr","asBool","asNum","NaN","stringify","attributes","source","GSDOM","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","children","wrap","shift","link","slot","isText","tagName","HTMLTemplateElement","SVGElement","Text","Comment","isGSElement","orientation","classList","add","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","it","ShadowRoot","HTMLBodyElement","qry","walk","matches","push","innerHTML","innerText","toggle","apply","contains","root","unwrap","computedStyleMap","hidden","toValue","hasOwnProperty","every","d","setValue","queryAll","query","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","timeout","wait","callFunction","sendSuspended","er","removeEventListener","listen","once","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","m","clear","elid","fnid","GSComponents","Set","els","unlisten","signal","AbortSignal","find","path","flat","result","findAll","prototype","isGSExtra","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","__proto__","listenStyles","GSData","data","first","second","index","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","GSLoader","GS_TEMPLATE_URL","nocache","isFile","pathname","endsWith","level","isURL","getTemplateURL","loadSafe","caching","normalizeURL","templateURL","templatePath","TEMPLATE_URL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","toJson","GSItem","validate","getTemplate","cnt","loadTemplate","items","generateItem","entries","kv","getDismiss","getTarget","getToggle","getAction","getInject","getCSS","getSelectable","getAsBool","dismissAttr","getDismissAttr","targetAttr","getTargetAttr","toggleAttr","getToggleAttr","actionAttr","getActionAttr","injectAttr","getInjectAttr","action","dismiss","inject","selectable","getName","active","getActive","template","getBody","GSBlock","GSi18n","isInitialized","store","oldVal","newVal","has","translateDOM","auto","HTMLScriptElement","HTMLMetaElement","textContent","dname","dval","translate","gsi18n","lang","hk","arr","lastIndex","exec","hv","setAsBool","default","GSEnvironment","strAgt","toLocaleLowerCase","isEdge","isDesktop","isDevice","platform","screen","otype","GSElement","mergeArrays","isFlat","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getByID","hide","show","evt","on","off","attachEvent","removeEvent","attach","ref","deattachListeners","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","GSCacheTemplate","_store","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","isURLTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"sourceRoot":""}