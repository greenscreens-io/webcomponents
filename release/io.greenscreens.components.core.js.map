{"version":3,"file":"io.greenscreens.components.core.js","mappings":"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","sources":["webpack:///./modules/head/GSBase.mjs","webpack:///./modules/head/GSCacheStyles.mjs","webpack:///./modules/head/GSLinkExt.mjs","webpack:///./modules/head/GSStyleExt.mjs","webpack:///./modules/head/GSCSS.mjs","webpack:///./modules/head/GSScript.mjs","webpack:///./modules/head/GSLink.mjs","webpack:///./modules/base/GSEventBus.mjs","webpack:///./modules/base/GSDOMObserver.mjs","webpack:///./modules/base/GSLog.mjs","webpack:///./modules/base/GSUtil.mjs","webpack:///./modules/base/GSFunction.mjs","webpack:///./modules/base/GSID.mjs","webpack:///./modules/base/GSAttr.mjs","webpack:///./modules/base/GSDOM.mjs","webpack:///./modules/base/GSEvent.mjs","webpack:///./modules/base/GSComponents.mjs","webpack:///./modules/base/GSData.mjs","webpack:///./modules/base/GSItem.mjs","webpack:///./modules/base/GSBlock.mjs","webpack:///./modules/base/GSLoader.mjs","webpack:///./modules/base/GSEnvironment.mjs","webpack:///./modules/base/GSElement.mjs","webpack:///./modules/base/GSi18n.mjs","webpack:///./modules/templating/GSCacheTemplate.mjs","webpack:///./modules/templating/GSTemplate.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            return globalThis.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEventBus class\r\n * @module base/GSEventBus\r\n */\r\n\r\n\r\n/**\r\n * Class for handling shared events among components\r\n * @Class\r\n */\r\nexport default class GSEventBus extends EventTarget {\r\n\r\n    static #registry = new Map();\r\n\r\n    #listeners = new Set();\r\n\r\n    /**\r\n     * Static event emiter. If named event does not exist, create a new one\r\n     * \r\n     * @param {string} name EventBus name\r\n     * @param {string} type Event name\r\n     * @param {object} data Dat to send\r\n     * \r\n     * @returns {boolean|object}\r\n     */\r\n    static send(name = '', type = '', data) {\r\n        return GSEventBus.register(name).emit(type, data);\r\n    }\r\n\r\n    /**\r\n     * Check if named event bus already exists\r\n     * \r\n     * @param {string} name \r\n     * @returns {boolean}\r\n     */\r\n    static exist(name = '') {\r\n        return name && GSEventBus.#registry.has(name);\r\n    }\r\n\r\n    /**\r\n     * Register a named event bus. If already exists, will return existsing instance.\r\n     * @param {string} name unique bus name\r\n     * @returns {GSEventBus}\r\n     */\r\n    static register(name = '') {\r\n        if (!GSEventBus.exist(name)) {\r\n            GSEventBus.#registry.set(name, new GSEventBus());\r\n        }\r\n        return GSEventBus.#registry.get(name);\r\n    }\r\n\r\n    /**\r\n     * Unregister named event bus from registry.\r\n     * @param {string} name unique buss name\r\n     * @returns {boolean} State of removal.\r\n     */\r\n    static unregister(name = '') {\r\n        const bus = GSEventBus.#registry.get(name);\r\n        if (bus) bus.#unbind();\r\n        return GSEventBus.#registry.delete(name);\r\n    }\r\n\r\n    #unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            me.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    on(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        me.#listeners.add({type:type, listener : listener});\r\n        return me.addEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */    \r\n    once(type, listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        me.#listeners.add(wrap);\r\n        return me.addEventListener(type, wrap, { once: true });\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */    \r\n    off(type = '', listener) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        Array.from(me.#listeners)\r\n        .filter(o => o.type === type && o.listener === listener)\r\n        .forEach(o => me.#listeners.delete(o));\r\n        return me.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {string} type Event name to be listened\r\n     * @param {object} data  Data to send \r\n     */        \r\n    emit(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => {return typeof v === 'boolean' || v instanceof Boolean};\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAll = (word, split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\t\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n \t* Generic function to change elment node attribute\r\n \t* \r\n \t* @param {HTMLElement} el Target to receive attribute value\r\n \t* @param {string} name Attribite name\r\n \t* @param {boolean} val Attribute value\r\n \t*/\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\t\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr =  GSUtil.isString(type);\r\n\t\t\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\t\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n        for (let v of it) {\r\n\t\t\tif (!v) break;\r\n            if (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, qry);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            \r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\t\t\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el), \r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBlock class\r\n * @module base/GSBlock\r\n */\r\n\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\n\r\n/**\r\n * Contaner for flat rendering (without Shadow DOM)\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSBlock extends HTMLElement {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        const el = GSDOM.query(document.body, me.proxy);\r\n        if (el) el.remove();\r\n    }\r\n\r\n    /**\r\n     * Return an ID of GSComponent class that owns this element\r\n     * @returns {string} An ID of GSComponent class\r\n     */\r\n    get proxy() {\r\n        return GSAttr.get(this, 'proxy');\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-block', GSBlock);\r\n        Object.seal(GSBlock);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSi18n class\r\n * @module base/GSi18n\r\n */\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSDOMObserver from \"./GSDOMObserver.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * Support for i18n Internationalization\r\n * Class loads requested language translations and applies to the templates\r\n  * @class\r\n */\r\nexport default class GSi18n extends HTMLElement {\r\n\r\n    static #expr = /\\{\\w+\\}/g;\r\n\r\n    static #init = false;\r\n    #languages = new Map();\r\n\r\n    #cache = new Set();\r\n    #loading = false;\r\n\r\n    #interval = 0;\r\n    #isDuplicate = false;\r\n    #filter = this.#onFilter.bind(this);\r\n    #callback = this.#onCallback.bind(this);\r\n\r\n    static {\r\n        customElements.define('gs-i18n', GSi18n);\r\n        Object.seal(GSi18n);\r\n        document.body.addEventListener('i18n', (e) => {\r\n            if (GSi18n.default) GSi18n.default.translateDOM(e.detail);\r\n        });\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['lang', 'auto'];\r\n    }\r\n\r\n    static get default() {\r\n        return GSi18n.#init;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id ? me.id : GSID.id;\r\n        me.#isDuplicate = GSComponents.find(this.tagName) ? true : false;\r\n        if (me.#isDuplicate) return console.log(`${me.tagName} ID: ${me.id} is ignored, i18n is already in use by another instance!`);\r\n        GSi18n.#init = me;\r\n        GSComponents.store(me);\r\n        me.#toggleAuto();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        clearInterval(me.#interval);\r\n        GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n        GSComponents.remove(me);\r\n        me.#languages.clear();\r\n        me.#languages = null;\r\n        me.#callback = null;\r\n        me.#filter = null;\r\n        if (!me.#isDuplicate) GSi18n.#init = null;\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#attributeChanged(name, oldVal, newVal);\r\n    }\r\n    \r\n    async #attributeChanged(name = '', oldVal = '', newVal = '') {\r\n\r\n        const me = this;\r\n        \r\n        if (name === 'lang') {\r\n            if (!me.#languages.has(newVal)) {\r\n                await me.#load(newVal);\r\n            }\r\n            me.translateDOM(document.documentElement, me.auto);\r\n        }\r\n\r\n        if (name === 'auto') {\r\n            me.#toggleAuto();\r\n        }\r\n    }\r\n\r\n    #acceptedElement(el) {\r\n        return (!(el instanceof HTMLScriptElement\r\n            || el instanceof HTMLStyleElement\r\n            || el instanceof HTMLLinkElement\r\n            || el instanceof HTMLMetaElement\r\n            || el instanceof Comment));\r\n    }\r\n\r\n    #onFilter(el) {\r\n        \r\n        const me = this;\r\n        const isText = el instanceof Text;\r\n\r\n        if (isText && el.textContent.trim().length == 0) return false;\r\n\r\n        const tmp = isText ? el.parentElement : el;\r\n        return me.#acceptedElement(tmp) && me.#isTranslatable(tmp);\r\n    }\r\n\r\n    #isTranslatable(el) {\r\n        return GSAttr.get(el, 'translate') !== 'false';\r\n    }\r\n\r\n    #onCallback(el) {\r\n        const me = this;\r\n        me.#cache.add(el);\r\n    }\r\n\r\n    #onInterval() {\r\n        const me = this;\r\n        if (me.#loading) return;\r\n        if (me.#cache.size === 0) return;\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                Array.from(me.#cache).forEach(el => {\r\n                    me.#cache.delete(el);\r\n                    me.#doTranslate(el);\r\n                });\r\n            } catch(e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n    \r\n    #doTranslate(el) {\r\n        const me = this;\r\n        if (me.#loading > 0) return me.#cache.add(el);\r\n        if (el === document.documentElement) {\r\n           me.translateDOM(el, me.auto);\r\n        } else {\r\n            const isText = (el instanceof Text);\r\n            isText ? me.#doTranslateText(el) : me.#doTranslateAttrs(el);\r\n        }\r\n        if (el.shadowRoot) me.translateDOM(el.shadowRoot, me.auto);\r\n    }\r\n\r\n    #doTranslateAttrs(el) {\r\n        const me = this;\r\n        me.list.forEach(attr => me.#doTranslateAttr(el, attr));\r\n    }\r\n\r\n    #doTranslateAttr(el, name) {\r\n\r\n        const me = this;\r\n\r\n        const dname = `data-gs-i8n-${name}`;\r\n\r\n        let dval = GSAttr.get(el, dname);\r\n        let val = GSAttr.get(el, name);\r\n\r\n        if (dval) {\r\n            val = dval;\r\n        } else if (val) {\r\n            GSAttr.set(el, dname, val);\r\n        }\r\n\r\n        if (val) GSAttr.set(el, name, me.translate(val));\r\n    }\r\n\r\n    #doTranslateText(el) {\r\n        const me = this;\r\n        el.gsi18n = el.gsi18n || el.textContent;\r\n        el.textContent = me.translate(el.gsi18n);\r\n    }\r\n\r\n    async #load(lang = '') {\r\n\r\n        const me = this;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n\r\n        let res = null;\r\n        try {\r\n            me.#loading++;\r\n            const url = GSLoader.normalizeURL(`${me.url}/${lang}.json`);\r\n\r\n            res = await GSLoader.load(url, 'GET', headers, true);\r\n            if (!res && lang.indexOf('_') > 0) res = await me.#load(lang.split('_')[0]);\r\n            if (!res) return false;\r\n            me.#store(lang, res);\r\n\r\n        } finally {\r\n            me.#loading--;\r\n        }\r\n        \r\n        if (!me.auto) me.#onInterval();\r\n\r\n        return true; \r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0]);\r\n            map.set(hk, kv[1]);\r\n        });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n            me.#load(val);\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n    #toggleAuto() {\r\n        const me = this;\r\n        if (me.auto) {\r\n            GSDOMObserver.registerFilter(me.#filter, me.#callback);\r\n            me.#interval = setInterval(me.#onInterval.bind(me), 500);\r\n        } else {\r\n            GSDOMObserver.unregisterFilter(me.#filter, me.#callback);\r\n            clearInterval(me.#interval);\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * Translate complete tree from given node.\r\n     * \r\n     * @param {HTMLElement | Text} el Node to  translate from (inclusive)\r\n     * @param {boolean} auto Immediate translate or automated \r\n     */\r\n    translateDOM(el, auto = false) {\r\n\r\n        const me = this;\r\n\r\n        if (el !== document.documentElement) me.#cache.add(el);\r\n        Array.from(el.childNodes)\r\n            .filter(el => me.#onFilter(el))\r\n            .forEach(el => el.childNodes.length == 0 ? me.#cache.add(el) : me.translateDOM(el, true));\r\n\r\n        if (!auto) me.#onInterval();    \r\n    }\r\n\r\n    /**\r\n     * Translate text from default language to the requested one\r\n     * 1. full string hash is searched for mapping\r\n     * 2. string keys are extracted, then hashed and replaced\r\n     * \r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    translate(val) {\r\n\r\n        if (GSUtil.isStringEmpty(val)) return val;\r\n\r\n        const me = this;\r\n\r\n        let tmp = val;\r\n        let key = null;\r\n        let res = null;\r\n        let arr = null;\r\n\r\n        GSi18n.#expr.lastIndex = -1;\r\n        while ((arr = GSi18n.#expr.exec(val)) !== null) {\r\n            key = arr[0];\r\n            res = me.find(key.slice(1, -1));\r\n            tmp = tmp.replace(key, res);\r\n        }\r\n\r\n        return tmp;\r\n    }\r\n\r\n    /**\r\n     * Find string or key for translation\r\n     * \r\n     * @param {string} val translation  key name\r\n     * \r\n     * @returns {string} translated text\r\n     */\r\n    find(val) {\r\n        const me = this;\r\n        const hv = GSID.hashCode(val);\r\n        return me.#getLanguage(me.lang).get(hv) || val;\r\n    }\r\n\r\n    /**\r\n     * Enable auto translation by monitoring DOM\r\n     * If set to false, translation must be called from code\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    set auto(val = '') {\r\n        GSAttr.setAsBool(this, 'auto', val);\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return GSAttr.get(this, 'default', document.documentElement.lang || navigator.language);\r\n    }\r\n\r\n    set default(val = '') {\r\n        GSAttr.set(this, 'default', val);\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return GSAttr.get(this, 'lang', this.default);\r\n    }\r\n\r\n    set lang(val = '') {\r\n        GSAttr.set(this, 'lang', val);\r\n    }\r\n\r\n    /**\r\n     * List of attributes on an element used to translate.\r\n     */\r\n    get list() {\r\n        const val = GSAttr.get(this, 'list', 'title,comment');\r\n        return val.split(',');\r\n    }\r\n\r\n    set list(val = '') {\r\n        val = Array.isArray(val) ? val.join(',') : val;\r\n        GSAttr.set(this, 'list', val);\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return GSAttr.get(this, 'url', `${location.origin}/i18n/`);\r\n    }\r\n\r\n    set url(val = '') {\r\n        GSAttr.set(this, 'url', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nclass GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n"],"names":["GSBase","HTMLElement","static","observedAttributes","s","h","l","length","i","charCodeAt","sender","document","name","obj","bubbles","composed","cancelable","event","CustomEvent","detail","dispatchEvent","requestAnimationFrame","sendEvent","connectedCallback","me","this","url","isRenderable","hash","hashCode","querySelector","remove","el","render","isPromise","Promise","dataset","isHead","head","appendChild","insertAdjacentElement","isAuto","id","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","navigator","userAgentData","mobile","test","userAgent","isSchema","schema","protocol","location","replace","isAsset","isTarget","value","strVal","toLowerCase","sts","brands","forEach","v","brand","includes","regex","RegExp","match","target","env","getAttribute","base","origin","pathname","startsWith","undefined","uri","URL","searchParams","append","Date","now","href","e","console","log","type","indexOf","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","dft","Object","hasOwn","globalThis","GS_NO_CACHE","localStorage","getItem","seal","GSCacheStyles","Map","style","CSSStyleSheet","set","sheet","replaceSync","get","delete","cssRules","styles","Array","from","sort","a","b","String","localeCompare","values","css","getOrSet","adoptedStyleSheets","freeze","window","injectStyle","GSLinkExt","HTMLLinkElement","constructor","super","order","isCSS","setInterval","bind","sendSuspendedEvent","clearInterval","asText","proxy","map","o","cssText","join","styleSheets","filter","sh","ownerNode","pop","rel","val","setAttribute","customElements","define","extends","GSStyleExt","HTMLStyleElement","GSCSS","concat","isDisabled","disabled","notheme","theme","activeTheme","res","fetch","ok","text","URLSearchParams","slice","querySelectorAll","addEventListener","GSScript","createElement","src","getAttributeNames","GSLink","shadow","GSEventBus","EventTarget","Set","data","register","emit","has","exist","bus","removeEventListener","listener","clear","fn","on","add","once","wrap","off","evt","GSDOMObserver","MutationObserver","observe","opt","cfg","childList","subtree","observer","forRemove","size","mutations","mutation","addedNodes","removedNodes","rootEL","filters","childNodes","k","callback","tmp","body","create","documentElement","disconnect","GSLog","msg","forced","logging","nodeName","GSUtil","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","toString","isNumber","trim","str","x","g","word","toUpperCase","split","capitalize","Error","locale","language","languages","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","Function","isStringNonEmpty","isStringEmpty","isString","left","right","lmatch","rmatch","time","r","setTimeout","blob","Blob","createObjectURL","download","click","timeout","revokeObjectURL","clazz","ext","expose","isPrototypeOf","isSealed","isFrozen","self","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","owner","isFunctionAsync","callFunctionSync","parseValue","GSID","prefx","next","GSAttr","isHTMLElement","removeAttribute","normalize","attr","asBool","asNum","NaN","stringify","attributes","GSDOM","html","single","mime","doc","DOMParser","parseFromString","firstElementChild","error","own","forceWrap","nodes","children","shift","link","slot","isText","ownClazz","it","inheritance","pel","tagName","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","isGSElement","orientation","classList","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","removeChild","node","closest","all","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","push","innerHTML","textContent","toggle","apply","contains","root","unwrap","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","ignore","checkValidity","toValue","fromValue","every","d","setValue","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","GSEvent","prevent","code","ctrlKey","shiftKey","wait","callFunction","sendSuspended","er","listen","hasFunction","preventDefault","stopPropagation","send","capture","offline","elmap","key","fnkey","defineProperty","gsid","writable","m","elid","fnid","GSComponents","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","isElement","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","compareNum","compareString","s1","s2","GSItem","validate","getTemplate","isFlat","getFlat","anchor","getAnchor","acss","cls","items","generateItem","entries","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getTarget","getToggle","getAction","getInject","getSelectable","getAsBool","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","action","dismiss","inject","selectable","getName","getCSS","active","getActive","template","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","toJson","_val","_typ","GSBlock","GSLoader","GS_TEMPLATE_URL","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","setItem","path","isFile","isExt","level","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","isJson","func","parseFunction","isFunc","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSElement","mergeArrays","FLAT","isProxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","updateUI","getStyle","hide","show","attachEvent","removeEvent","attach","ref","store","deattachListeners","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","parseWrapped","insertAdjacent","setHTML","GSi18n","default","translateDOM","unregisterFilter","oldVal","newVal","auto","HTMLScriptElement","HTMLMetaElement","dname","dval","translate","gsi18n","lang","hk","registerFilter","lastIndex","exec","hv","setAsBool","GSCacheTemplate","_store","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","HTMLHeadElement","waitWhenReady","waitEvent","asArray"],"sourceRoot":""}