{"version":3,"file":"io.greenscreens.ipp.min.js","sources":["../modules/Utils.mjs","../modules/BaseView.mjs","../modules/IPPAttributes.mjs","../modules/IPPJobs.mjs","../modules/IPPView.mjs","../modules/IPPConsole.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"/webcomponents/release/esm/io.greenscreens.components.all.min.js\";\r\n\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport class Utils {\r\n\r\n    static get notify() {\r\n        return GSDOM.query('gs-notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (success) return Utils.notify?.info('Info', msg);\r\n        Utils.notify?.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    static async load(url = '') {\r\n        const res = await fetch(url);\r\n        return await res.json();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A BaseView class used by all other views\r\n * @module ipp/BaseView\r\n */\r\nimport { GSEvents, GSElement } from \"/webcomponents/release/esm/io.greenscreens.components.all.min.js\";\r\n\r\nimport { Utils } from './Utils.mjs';\r\n\r\nexport class BaseView extends GSElement {\r\n\r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }\r\n\r\n    firstUpdated() {\r\n        super.firstUpdated();\r\n        GSEvents.monitorAction(this);\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPPrinterAttributes class\r\n * \r\n * @module ipp/IPPPrinterAttributes\r\n */\r\n\r\nimport { GSElement } from \"/webcomponents/release/esm/io.greenscreens.components.all.min.js\";\r\n/**\r\n * IPPPrinterAttributes UI lists printer attributes\r\n */\r\nexport class IPPAttributes extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-printer-attributes.html';\r\n    }\r\n\r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }\r\n    \r\n    load(data) {\r\n        if (!data) return;\r\n        data = data['printer-attributes'] ||data;\r\n        const list = Object.entries(data).map(t => { return {key: t[0], value : t[1]} } );\r\n        this.#store.setData(list);\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('gs-table');\r\n    }\r\n\r\n    get #store() {\r\n        return this.#table.store;\r\n    }\r\n\r\n    static {\r\n        GSElement.define('gs-ipp-attributes', IPPAttributes);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPJobs class\r\n * \r\n * @module ipp/IPPJobs\r\n */\r\nimport { Utils } from './Utils.mjs';\r\nimport { BaseView } from './BaseView.mjs';\r\n\r\n/**\r\n * IPPJobs UI lists printer jobs and allows job manupulation actions\r\n */\r\nexport class IPPJobs extends BaseView {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-jobs.html';\r\n    }  \r\n\r\n    load(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#attrStore.clear();\r\n        if (data.jobs) {\r\n            me.#jobsStore.setData(data.jobs);\r\n        }  else {\r\n            me.#loadAttr(data);\r\n        }\r\n    }\r\n    \r\n    #loadAttr(data) {\r\n        if (!data) return;\r\n        data = data['job-attributes'] ||data;\r\n        const list = Object.entries(data).map(t => { return {key: t[0], value : t[1]} } );\r\n        this.#attrStore.setData(list);\r\n    }\r\n\r\n    get #jobsTable() {\r\n        return this.query('#table-jobs');\r\n    }\r\n\r\n    get #jobsStore() {\r\n        return this.#jobsTable.store;\r\n    }\r\n\r\n    get #attrTable() {\r\n        return this.query('#table-job-attributes');\r\n    }\r\n\r\n    get #attrStore() {\r\n        return this.#attrTable.store;\r\n    }\r\n\r\n    onCancelJob(e) {\r\n\r\n    }\r\n    \r\n    onPrintUri(e) {\r\n\r\n    }\r\n\r\n    onPurgeJobs(e) {\r\n        this.#jobsStore.clear();\r\n    }\r\n\r\n    async onDetails(e) {\r\n        const jobs = await Utils.load('./data/job-attributes.json');\r\n        this.load(jobs);\r\n    }\r\n\r\n    async onRefresh(e) {\r\n        const jobs = await Utils.load('./data/jobs.json');\r\n        this.load(jobs);\r\n    }\r\n\r\n    static {\r\n        BaseView.define('gs-ipp-jobs', IPPJobs);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPView class\r\n * @module ipp/IPPView\r\n */\r\nimport { Utils } from './Utils.mjs';\r\nimport { BaseView } from './BaseView.mjs';\r\n\r\nexport class IPPView extends BaseView {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-view.html';\r\n    }\r\n\r\n    get #attributes() {\r\n        return this.query('gs-ipp-attributes');\r\n    }\r\n\r\n    get #jobs() {\r\n        return this.query('gs-ipp-jobs');\r\n    }\r\n\r\n    get uri() {\r\n        return this.query('#printerURI')?.value || '';\r\n    }\r\n\r\n    async onRegister() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    async onRefresh() {\r\n        const me = this;\r\n        const data = await Utils.load('./data/printer-attributes.json');\r\n        me.#attributes.load(data);\r\n\r\n        const jobs = await Utils.load('./data/jobs.json');\r\n        me.#jobs.load(jobs);\r\n    }\r\n\r\n    static {\r\n        BaseView.define('gs-ipp-view', IPPView);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPConsole class\r\n * \r\n * @module ipp/IPPConsole\r\n */\r\nimport { GSElement } from \"/webcomponents/release/esm/io.greenscreens.components.all.min.js\";\r\n\r\n/**\r\n * IPPJobs UI lists printer jobs and allows job manupulation actions\r\n */\r\nexport class IPPConsole extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-console.html';\r\n    }\r\n    \r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }    \r\n\r\n    log(data = '') {\r\n        this.#console.content = JSON.stringify(data, '', 4);\r\n    }\r\n\r\n    get #console() {\r\n        return this.query('gs-highlight');\r\n    }\r\n\r\n    static {\r\n        GSElement.define('gs-ipp-console', IPPConsole);\r\n    }\r\n\r\n}"],"names":["Utils","notify","GSDOM","query","static","success","msg","info","danger","e","data","error","message","toString","inform","url","res","fetch","json","BaseView","GSElement","renderUI","this","renderTemplate","firstUpdated","super","GSEvents","monitorAction","onError","handleError","IPPAttributes","constructor","template","load","list","Object","entries","map","t","key","value","store","setData","table","define","IPPJobs","me","attrStore","clear","jobs","jobsStore","loadAttr","jobsTable","attrTable","onCancelJob","onPrintUri","onPurgeJobs","async","IPPView","attributes","uri","onRefresh","IPPConsole","log","console","content","JSON","stringify"],"mappings":"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"}