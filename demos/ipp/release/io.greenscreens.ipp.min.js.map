{"version":3,"file":"io.greenscreens.ipp.min.js","sources":["../../../modules/base/GSLog.mjs","../../../modules/base/GSUtil.mjs","../../../modules/base/GSFunction.mjs","../../../modules/base/GSCSSMap.mjs","../../../modules/base/GSDate.mjs","../../../modules/base/GSData.mjs","../../../modules/base/GSDOM.mjs","../modules/Utils.mjs","../../../modules/lib.mjs","../../../modules/base/GSID.mjs","../../../modules/base/GSAttr.mjs","../../../modules/base/GSEvents.mjs","../../../modules/base/GSEnvironment.mjs","../../../modules/base/GSLoader.mjs","../../../modules/base/GSPromise.mjs","../../../modules/base/GSLocalization.mjs","../../../modules/base/GSDynamicStyle.mjs","../../../modules/controllers/AdoptedController.mjs","../../../modules/controllers/ContentController.mjs","../../../modules/base/GSTemplateCache.mjs","../../../modules/base/GSAttributeHandler.mjs","../../../modules/controllers/AttributeController.mjs","../../../modules/controllers/LocalizationController.mjs","../../../modules/controllers/OrientationController.mjs","../../../modules/controllers/TemplateController.mjs","../../../modules/properties/orientation.mjs","../../../modules/properties/protocol.mjs","../../../modules/properties/environment.mjs","../../../modules/controllers/ThemeController.mjs","../../../modules/properties/verificator.mjs","../../../modules/base/GSEvent.mjs","../../../modules/data/ReadWriteRegistry.mjs","../../../modules/controllers/DataController.mjs","../../../modules/GSElement.mjs","../modules/BaseView.mjs","../modules/IPPAttributes.mjs","../modules/IPPJobs.mjs","../modules/IPPView.mjs","../modules/IPPConsole.mjs","../../../modules/extra/Highlight.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {String} msg Message to log\r\n\t * @param {Boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isDate = (v) => { return v instanceof Date };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic reverse = (str) => (str || \"\").split(\"\").reverse().join(\"\");\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\tstatic isInstance = (el) => el instanceof el.constructor;\r\n\r\n\tstatic range = (val = 0, min = 10, max = 100) => (Math.max(Math.min(max, val), min));\r\n\r\n\tstatic extractNumber = (val = '') => val.match(/[\\d,\\.]*\\d/)?.[0];\r\n\r\n\tstatic asNum(val = 0, dft = 0, locale) {\r\n\t\tlocale = locale || GSUtil.locale;\r\n\t\tif (GSUtil.isString(val)) {\r\n\t\t\tconst sep = GSUtil.numberSeparator(locale);\r\n\t\t\tval = GSUtil.extractNumber(val)?.replaceAll(sep, '') || val;\r\n\t\t}\r\n\t\treturn GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {String} url \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.trim().startsWith('<') && val.trim().endsWith('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {String} pattern \r\n\t * @param {String} charset \r\n\t * @returns {String}\r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string to regex isntance\r\n\t * @param {*} val \r\n\t * @param {*} flags \r\n\t * @returns \r\n\t */\r\n\tstatic toRegex(val, flags) {\r\n\t\tif (val instanceof RegExp) return val;\r\n\t\treturn GSUtil.isStringEmpty(val) ? undefined : new RegExp(val, flags);\r\n\t}\r\n\r\n\t/**\r\n\t * Find number separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic decimalSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1.1)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Find decimal separator for given locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic numberSeparator(locale) {\r\n\t\treturn Intl.NumberFormat(locale).format(1000)[1];\r\n\t}\r\n\r\n\t/**\r\n\t * Try to find data format based on locale\r\n\t * @param {string} locale \r\n\t * @returns \r\n\t */\r\n\tstatic getDateFormat(locale = undefined) {\r\n\t\tconst formatted = new Intl.DateTimeFormat(locale).format(new Date(2000, 0, 2));\r\n\t\treturn formatted\r\n\t\t\t.replace('2000', 'YYYY')\r\n\t\t\t.replace('01', 'MM')\r\n\t\t\t.replace('1', 'M')\r\n\t\t\t.replace('02', 'DD')\r\n\t\t\t.replace('2', 'D');\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {String|object} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {String} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {String|object} val \r\n\t * @returns {String}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string separated values into an array\r\n\t * @param {String} val \r\n\t * @param {String} separator \r\n\t * @returns {Array<String>}\r\n\t */\r\n\tstatic toStringArray(val = '', separator = ' ') {\r\n\t\treturn val.split(separator).map(v => v.trim()).filter(v => v.length > 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {String} format \r\n\t * @param {String} value \r\n\t * @returns {String}\r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Decode HTML entities (&nbsp; &laquot; etc...)\r\n\t * @param {string} text \r\n\t * @returns {string}\r\n\t */\r\n\tstatic decodeHTMLEntities(text) {\r\n\t\tconst textArea = document.createElement('textarea');\r\n\t\ttextArea.innerHTML = text;\r\n\t\treturn textArea.value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {String} value \r\n\t * @returns {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {String} left \r\n\t * @param {String} right \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {Number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n\t\tsignal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif (signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {String} name File name\r\n\t * @param {String} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {String} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at least HTMLElement\r\n\t * @param {String} ext If existing tag extended, this is tagName\r\n\t * @param {Boolean} seal Should class be sealed\r\n\t * @param {Boolean} freeze Should class be freezed\r\n\t * @param {Boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Import and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {String} src \r\n\t * @returns {*}\r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to write to the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async writeToClipboard(value = '') {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-write\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.writeText(value);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\r\n\t/**\r\n\t * Use Clipboard API to read from the clipboard\r\n\t * @returns \r\n\t */\r\n\tstatic async readFromClipboard() {\r\n\t\tconst result = await navigator.permissions.query({ name: \"clipboard-read\" })\r\n\t\tif (result.state === \"granted\" || result.state === \"prompt\") {\r\n\t\t   return navigator.clipboard.readText();\r\n\t\t}\r\n\t\treturn '';\r\n\t}\t\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    static isFunctionNative(fn) {\r\n        return GSFunction.isFunction(fn) && fn.toString().includes('native code');\r\n    }\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {Object} o \r\n     * @param {function} fn \r\n     * @returns {Boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if class has defined getter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * * Check if class has defined setter\r\n     * @param {*} own \r\n     * @param {*} name \r\n     * @returns \r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSFunction.isFunctionDefined(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static isFunctionDefined(own, name, fn) {\r\n        const desc = own ? Reflect.getOwnPropertyDescriptor(own.__proto__, name) : false;\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {Boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return await fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        const args = arguments ? Array.from(arguments).slice(2) : [];\r\n        return fn.apply(owner || null, args);\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {Object} owner \r\n     * @returns {Object}\r\n     */\r\n    static async callFunction(fn, owner, native = true) {\r\n        fn = GSUtil.isString(fn) ? GSFunction.parseFunction(fn) : fn;\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (!native && GSFunction.isFunctionNative(fn)) return;\r\n        const args = arguments ? Array.from(arguments).slice(3) : [];\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return await GSFunction.callFunctionAsync(fn, owner, ...args);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner, ...args);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {String} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static async #contextualize(fn, context, args) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        const isAsync = GSFunction.isFunctionAsync(fn);\r\n        if (isAsync) {\r\n            return await fn.apply(context, args);\r\n        } else {\r\n            return fn.apply(context, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop first call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceFifo(fn, context) {\r\n        let cnt = false;\r\n        return async (...args) => {\r\n            if (cnt) return;\r\n            cnt = true;\r\n            const own = context || this;\r\n            return await GSFunction.#contextualize(fn, own, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Wrap function into a single call - loop last call executed\r\n     * @param {function} fn Function to be called\r\n     * @param {*} context Instance at which to call the function\r\n     * @returns {*} Function result\r\n     */\r\n    static callOnceLifo(fn, context) {\r\n        let cnt = 0;\r\n        return (...args) => {\r\n            if (cnt < 0) return;\r\n            cnt++;\r\n            const own = context || this;\r\n            return new Promise((accept, reject) => {\r\n                queueMicrotask(async () => {\r\n                    if (cnt <= 0) return;\r\n                    cnt--;\r\n                    if (cnt !== 0) return;\r\n                    try {\r\n                        const o = await GSFunction.#contextualize(fn, own, args);\r\n                        accept(o);\r\n                    } catch (e) {\r\n                        reject(e);\r\n                    } finally {\r\n                        cnt = -1;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n        globalThis.GSFunction = GSFunction;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\n\r\n/**\r\n * A module loading GSCSSMap class\r\n * @module base/GSCSSMap\r\n */\r\n\r\n/**\r\n * Wrapper around computesdStyledMap to support Firefox and WebKit Mode\r\n * @class\r\n */\r\nexport class GSCSSMap {\r\n\r\n    static #modern = globalThis.document?.body?.computedStyleMap ? true : false;\r\n\r\n    #map;\r\n\r\n    constructor(element) {\r\n        const me = this;\r\n        me.#map = GSCSSMap.#getMap(element);\r\n    }\r\n\r\n    get(name) {\r\n        const me = this;\r\n        if (!me.#map) return undefined;\r\n        return GSCSSMap.#modern ? me.#map.get(name) : me.#map[GSUtil.capitalizeAttr(name)];\r\n    }\r\n\r\n    asText(name) {\r\n        return (this.get(name) || '')?.toString();\r\n    }\r\n\r\n    asBool(name) {\r\n        const val = this.get(name);\r\n        return GSUtil.asBool(GSCSSMap.#modern ? val?.value : val);\r\n    }\r\n\r\n    asNum(name) {\r\n        let val = this.get(name);\r\n        if (GSCSSMap.#modern && GSFunction.isFunction(val?.to)) {\r\n            if (val.unit !== 'number') val = val.to('px');\r\n        }\r\n        return GSUtil.asNum(GSCSSMap.#modern ? val?.value : val.match(/\\d*(\\.\\d*)?/g).filter(v => GSUtil.isNumber(v)).shift());\r\n    }\r\n\r\n    matches(name, value) {\r\n        return this.asText(name) == value;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} el \r\n     * @returns {CSSStyleDeclaration}\r\n     */\r\n    static #getMap(el) {\r\n        if (GSCSSMap.#modern) return el.computedStyleMap();\r\n        if (globalThis.window?.getComputedStyle) return globalThis.window.getComputedStyle(el);\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap item\r\n     * @param {HTMLElement} el \r\n     * @returns {}\r\n     */\r\n    static styleValue(el, name) {\r\n        return GSCSSMap.getComputedStyledMap(el).get(name);\r\n    }\r\n\r\n    /**\r\n     * Support for Firefox/Gecko to get element computedStyledMap\r\n     * @param {HTMLElement} element \r\n     * @returns {GSCSSMap}\r\n     */\r\n    static getComputedStyledMap(element) {\r\n        return new GSCSSMap(element);\r\n    }\r\n\r\n    static #normalize(str) {\r\n        if (!str) return '';\r\n        str = String(str).replace(/\\s*([>~+])\\s*/g, ' $1 ');\r\n        return str.replace(/(\\s+)/g, ' ').trim();\r\n    }\r\n\r\n    static #split(str, on) {\r\n        return str.split(on).map(x => x.trim()).filter(x => x);\r\n    }\r\n\r\n    static #containsAny(selText, ors) {\r\n        return selText ? ors.some(x => selText.includes(x)) : false;\r\n    }\r\n\r\n    /**\r\n     * Find css defined rules by css selector\r\n     * @param {String} selector \r\n     * @returns {CSSStyleRule}\r\n     */\r\n    static findRule(selector) {\r\n        const me = GSCSSMap;\r\n        const logicalORs = me.#split(me.#normalize(selector), ',');\r\n        const sheets = Array.from(globalThis.document.styleSheets);\r\n        const ruleArrays = sheets.map(x => Array.from(x.cssRules || []));\r\n        const allRules = ruleArrays.reduce((all, x) => all.concat(x), []);\r\n        return allRules.filter((x) => me.#containsAny(me.#normalize(x.selectorText), logicalORs));\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSCSSMap);\r\n        globalThis.GSCSSMap = GSCSSMap;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart(2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart(2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ? tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n    static parse(value, format, locale) {\r\n        format = format || GSUtil.getDateFormat(locale);\r\n        const regex = GSDate.#getFormattedDateRegex(format);\r\n        return GSDate.#parseFormattedDate(value, regex);\r\n    }\r\n    \r\n    static #getFormattedDateRegex(format) {\r\n        return new RegExp(\r\n            '^\\\\s*' + format.toUpperCase().replaceAll(/([MDY])\\1*/g, '(?<$1>\\\\d+)') + '\\\\s*$'\r\n        );\r\n    }\r\n\r\n    static #parseFormattedDate(value, regex) {\r\n\r\n        const { groups } = value.match(regex) ?? {};\r\n\r\n        if (!groups) return null;\r\n\r\n        const y = Number(groups.Y);\r\n        const m = Number(groups.M);\r\n        const d = Number(groups.D);\r\n\r\n        // Validate range of year and month\r\n        if (y < 1000 || y > 2999) return null;\r\n        if (m < 1 || m > 12) return null;\r\n\r\n        const date = new Date(y, m - 1, d);\r\n\r\n        // Validate day of month exists\r\n        if (d !== date.getDate()) return null;\r\n\r\n        return isNaN(date.valueOf()) ? null : date;\r\n    }\r\n\r\n    static {\r\n        globalThis.GSDate = GSDate;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSDate } from \"./GSDate.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSData {\r\n\r\n    static PROPERTIES = { name: {}, type: {}, format: {}, currency: {}, locale: {}, extract: {} };\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    static compareArrays = (a, b) => a.length === b.length && a.every((element, index) => element === b[index]);\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {Array} a \r\n     * @param {Array} b \r\n     * @returns {Boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n        if (a === b) return true;\r\n\r\n        a = a.toSorted();\r\n        b = b.toSorted();\r\n\r\n        return GSData.compareArrays(a, b);\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return [...first, ...second].filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    /**\r\n     * Simple Object merge\r\n     * @param {*} list \r\n     * @returns \r\n     */\r\n    static mergeObjects(list = []) {\r\n        let o = {};\r\n        list.filter(o => o).forEach(it => o = { ...o, ...it });\r\n        return o;\r\n    }\r\n\r\n    /**\r\n     * Convert data to format by given definition.\r\n     * @param {object} cfg {name:'field_name' , type:'date', format:'d/m/y', currency:'eur', locale:'hr', extract:'REGEX'}\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    static format(cfg, val) {\r\n\r\n        const type = GSData.#toType(cfg, val);\r\n        const locale = cfg.locale || GSUtil.locale;\r\n        const rule = GSUtil.toRegex(cfg.extract, 'g');\r\n        val = rule ? val.match(rule)[0] : val;\r\n\r\n        switch (type) {\r\n            case 'timestamp':\r\n                if (val instanceof Date) return val;\r\n                return Date.parse(val);\r\n            case 'date':\r\n                if (val instanceof Date) return val;\r\n                const fmt = GSUtil.asBool(cfg.format) ? undefined : cfg.format;\r\n                if (GSUtil.isString(val)) return GSDate.parse(val, fmt, locale);\r\n                return val && val != 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string':\r\n            case 'text':\r\n                if (val instanceof Date) {\r\n                    const fmt = cfg.format || GSUtil.getDateFormat(locale);\r\n                    return new GSDate(val).format(fmt, locale);\r\n                };\r\n                break;\r\n            case 'boolean':\r\n                return GSUtil.asBool(val, false);\r\n            case 'number':\r\n                return GSUtil.asNum(val, val, locale);\r\n            case 'currency':\r\n                if (GSUtil.isString(val)) val = GSUtil.asNum(val);\r\n                const opt = { style: 'currency', currency: cfg.currency };\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static #toType(cfg, val) {\r\n        if (cfg.type) return cfg.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static *filter(data = [], filter = [], fields, limit = 0) {\r\n        let cnt = 0;\r\n        let sts = false;\r\n        for (let rec of data) {\r\n            sts = GSData.filterRecord(rec, filter, fields);\r\n            if (sts) {\r\n                cnt++\r\n                yield rec;\r\n            }\r\n            if (limit > 0 && cnt >= limit) break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Filter array of records \r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterData(data = [], filter = [], fields, limit = 0) {\r\n        data = Array.isArray(data) ? data : [];\r\n        filter = Array.isArray(filter) ? filter : [];\r\n        if (filter.length === 0) return data;\r\n        return [...GSData.filter(data, filter, fields, limit)];\r\n    }\r\n\r\n    /**\r\n     * Filter single record to a matchign critheria\r\n     * @param {Array<object>|String} filter Check filterComplex function for details\r\n     * @param {Array} data Array of JSON objects or array of array of primitive types\r\n     * @param {Array<String>} fields List of Object properties to check, if not set, all are checked\r\n     * @returns {Array}\r\n     */\r\n    static filterRecord(rec, filter, fields) {\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    /**\r\n     * Check if JSON object contains a value in any of defined properties\r\n     * @param {Object} rec Json object to check\r\n     * @param {String} filter Value to search for\r\n     * @param {Array<string>} fields List of properties to serach\r\n     * @returns {Boolean} Return true if any of given properties (or all) contains provided value\r\n     */\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (GSData.filterValue(value, filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Check if object contains data in selected properties\r\n     * @todo Add support for eq,gt,lt,like,or operators\r\n     * @param {Object|Array} rec Json object or array of primitive values to check\r\n     * @param {Array<Object>} filter List of filter objects in format\r\n     *        [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     *        Where:\r\n     *           - name is numeric index only if rec is array of primitive values ([1,'a','b',4]...etc)\r\n     *           - name is string if rec is JSON object\r\n     * @returns {Boolean} Flag indicating if record is matched to a given filter critheria\r\n     */\r\n    static filterComplex(rec, filter) {\r\n\r\n        let found = true;\r\n        let value = null;\r\n\r\n        for (let flt of filter) {\r\n            value = rec[flt.name];\r\n            if (flt.name) {\r\n                found = found && GSData.filterValue(value, flt)\r\n            } else {\r\n                found = found && GSData.filterSimple(rec, flt.value);\r\n            }\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static filterValue(value, filter) {\r\n        if (value instanceof Date) {\r\n            return GSData.matchDate(value, filter);\r\n        } else if (value instanceof Date) {\r\n            return GSData.matchNumber(value, GSUtil.asNum(filter.value), filter.op);\r\n        } else {\r\n            return ('' + value).toLocaleLowerCase().includes(('' + filter.value).toLocaleLowerCase());\r\n        }\r\n    }\r\n\r\n    static matchDate(val, filter, locale) {\r\n\r\n        if (typeof filter === 'string') {\r\n            const value = '' + filter;\r\n            const local = val.toLocaleDateString(locale);\r\n            const iso = val.toISOString();\r\n            return local.includes(value) || iso.includes(value);\r\n        }\r\n\r\n        if (!filter.value) return false;\r\n\r\n        const qry = filter.value instanceof Date ? 'date' : typeof filter.value;\r\n\r\n        switch (qry) {\r\n            case 'number':\r\n                return GSData.matchNumber(val.getTime(), filter.value, filter.op);\r\n            case 'date':\r\n                return GSData.matchNumber(val.getTime(), filter.value.getTime(), filter.op);\r\n        }\r\n\r\n        return GSData.matchDate(val, '' + filter.value, filter.locale);\r\n    }\r\n\r\n    /**\r\n     * Match number by operator\r\n     * @param {*} value \r\n     * @param {*} query \r\n     * @param {*} operator \r\n     */\r\n    static matchNumber(value = 0, query = 0, operator = 'eq') {\r\n        switch (operator) {\r\n            case 'gt': return query > value;\r\n            case 'lt': return query < value;\r\n            case 'ge': return query >= value;\r\n            case 'le': return query <= value;\r\n        }\r\n        return value === query;\r\n    }\r\n\r\n    /**\r\n     * Sort data\r\n     * @param {*} data \r\n     * @param {*} sort \r\n     * @returns {Array}\r\n     */\r\n    static sortData(data, sort) {\r\n        if (sort.length === 0) return data;\r\n        return data.toSorted((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    /**\r\n     * Sort two values, recursion supported\r\n     * @param {*} v1 Array of primitive types or JSON object\r\n     * @param {*} v2 Array of primitive types or JSON object\r\n     * @param {Number} sort -1 | 0 | 1 (descending, as id, ascending )\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static sortPair(a, b, sort) {\r\n\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const ord = GSUtil.isNumber(o) ? o : o.ord;\r\n            const idx = GSUtil.isNumber(o.col) ? o.col : i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two values, recursion supported\r\n     * @param {*} v1 \r\n     * @param {*} v2 \r\n     * @param {Number} order -1 | 0 | 1 (descending, as id, ascending )\r\n     * @param {Number} sts previous value\r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compare(v1, v2, order, sts) {\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        } else if (GSUtil.isBool(v1) || GSUtil.isBool(v2)) {\r\n            return sts || GSData.compareBool(v1, v2, order);\r\n        } else if (GSUtil.isDate(v1) || GSUtil.isDate(v2)) {\r\n            return sts || GSData.compareNum(Number(v1), Number(v2), order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Safely compare two boolean values\r\n     * @param {Boolean} v1 \r\n     * @param {Boolean} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1 | 0 | 1\r\n     */\r\n    static compareBool(v1, v2, ord) {\r\n        v1 = v1 ? 1 : 0;\r\n        v2 = v2 ? 1 : 0;\r\n        return GSData.compareNum(v1, v2, ord);\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {String} v1 \r\n     * @param {String} v2 \r\n     * @param {Number} ord \r\n     * @returns {Number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {Number} v1 \r\n     * @param {Number} v2 \r\n     * @param {Number} ord positive = ascending, negative - descending \r\n     * @returns {Number} < 0 or 1 or > 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    /**\r\n     * Write value to JSON object into structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name  \r\n     * @param {Boolean} ignoreNull  \r\n     * @param {Object} value \r\n     */\r\n    static writeToOject(obj, name, value, ignoreNull = true) {\r\n        if (ignoreNull && GSUtil.isNull(value)) return;\r\n\r\n        const seg = name.split('.');\r\n        if (seg.length === 1) {\r\n            return GSData.#writeSingleToOject(obj, name, value);\r\n        }\r\n\r\n        const tree = seg.slice(0, -1);\r\n        const key = seg.slice(-1)[0];\r\n\r\n        tree.forEach(v => {\r\n            if (!obj.hasOwnProperty(v)) obj[v] = {};\r\n            obj = obj[v];\r\n        });\r\n\r\n        return GSData.#writeSingleToOject(obj, key, value);\r\n    }\r\n\r\n    static #writeSingleToOject(obj, name, value) {\r\n        if (obj.hasOwnProperty(name)) {\r\n            if (!Array.isArray(obj[name])) {\r\n                obj[name] = [obj[name]];\r\n            }\r\n            if (Array.isArray(value)) {\r\n                obj[name] = obj[name].concat(value);\r\n            } else {\r\n                obj[name].push(value);\r\n            }\r\n        } else {\r\n            obj[name] = value;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read object property by supporting arrays\r\n     * name can be plain name or name[idx]\r\n     * @param {*} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromProperty(obj, name) {\r\n        if (GSUtil.isNull(obj)) return;\r\n        const r = /\\[\\d+\\]$/g;\r\n        const isArray = r.test(name);\r\n        let n = name;\r\n        let i = '';\r\n\r\n        if (isArray) {\r\n            n = name.replace(r, '')\r\n            i = name.match(r).shift().match(/\\d+/).shift();\r\n            i = GSUtil.asNum(i);\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n][i] : null;\r\n        } else {\r\n            obj = obj.hasOwnProperty(n) ? obj = obj[n] : null;\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Read value from JSON object by structured name.\r\n     * Name subelements are separated by dot (users.name etc.).\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {*}\r\n     */\r\n    static readFromObject(obj, name) {\r\n        name.split('.')\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .forEach(v => obj = GSData.readFromProperty(obj, v));\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Check if named path exist within the object\r\n     * @param {Object} obj \r\n     * @param {String} name \r\n     * @returns {Boolean}\r\n     */\r\n    static objectPathExist(obj, name) {\r\n        if (!name) return false;\r\n        return name.split('.')\r\n            .map(v => GSData.readFromProperty(obj, v))\r\n            .filter(v => !GSUtil.isNull(v))\r\n            .length > 0;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n        globalThis.GSData = GSData;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport { GSCSSMap } from \"./GSCSSMap.mjs\";\r\nimport { GSData } from \"./GSData.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport class GSDOM {\r\n\r\n\tstatic QUERY_FOCUSABLE = \"a[href]:not([tabindex='-1']),area[href]:not([tabindex='-1']),input:not([disabled]):not([tabindex='-1']),select:not([disabled]):not([tabindex='-1']),textarea:not([disabled]):not([tabindex='-1']),button:not([disabled]):not([tabindex='-1']),iframe:not([tabindex='-1']),[tabindex]:not([tabindex='-1']),[contentEditable=true]:not([tabindex='-1'])\";\r\n\tstatic QUERY_INPUT = \"input:not([type='hidden']):not(disabled):not(readonly),select:not([type='hidden']):not(disabled):not(readonly),textarea:not([type='hidden']):not(disabled):not(readonly)\";\r\n\tstatic #FORMEL = ['INPUT', 'SELECT', 'TEXTAREA', 'OUTPUT'];\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t * Find active (focused) element\t\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic get activeElement() {\r\n\t\treturn GSDOM.active(document.activeElement);\r\n\t}\r\n\r\n\t/**\r\n\t * Find active (focused) element\r\n\t * @param {HTMLElement} el Starting node\r\n\t * @returns {HTMLElement} Focused element\r\n\t */\r\n\tstatic active(el) {\r\n\t\treturn el.shadowRoot?.activeElement ? GSDOM.active(el.shadowRoot?.activeElement) : el;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is visible\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isVisible(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tconst css = GSCSSMap.getComputedStyledMap(el);\r\n\t\tconst visibility = !css.matches('visibility', 'hidden');\r\n\t\tconst display = !css.matches('display', 'none');\r\n\t\tconst opacity = css.asNum('opacity') > 0;\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst size = (rect.width > 0 && rect.height > 0);\r\n\t\treturn size && opacity && visibility && display;\r\n\t}\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {String} html Source to parse\r\n\t* @param {Boolean} single Return first element or all\r\n\t* @param {String} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? (doc?.head?.firstElementChild || doc?.body?.firstElementChild) : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {String} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst head = GSDOM.#fromNode(doc.head.children);\r\n\t\tconst body = GSDOM.#fromNode(doc.body.children);\r\n\r\n\t\tconst nodes = [...head, ...body];\r\n\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as link function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given value is part of HTMLFormElement\r\n\t * @param {string | HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFormElement(el) {\r\n\t\tconst name = GSUtil.isString(el) ? el : el?.tagName;\r\n\t\treturn GSDOM.#FORMEL.includes(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Return all form elements for a given root element\r\n\t * @param {HTMLElement} el \r\n\t * @returns \r\n\t */\r\n\tstatic formElements(el) {\r\n\t\treturn GSDOM.queryAll(el, GSDOM.#FORMEL.map(v => v.toLowerCase()));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is button\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isButtonElement(el) {\r\n\t\treturn (el instanceof HTMLButtonElement)\r\n\t\t\t|| el?.tagName === 'GS-BUTTON'\r\n\t\t\t|| GSDOM.hasClass(el, 'btn');\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {String|class} type Tag Name, class name or Class\r\n\t  * @returns {Boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr = GSUtil.isString(type);\r\n\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (!v) break;\r\n\t\t\tif (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {Boolean} orientation \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {String} placement\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn GSDOM.parent(el)?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {Boolean} closest Direction down (false) or up (true)\r\n\t * @param {Boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {Boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing across shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Recursively find offsetparent; used in positional offset calculation\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic offsetParent(el) {\r\n\t\tlet offset = el?.offsetParent;\r\n\t\tif (offset) return offset;\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (const c of it) {\r\n\t\t\toffset = c.offsetParent;\r\n\t\t\tif (offset) break;\r\n\t\t}\r\n\t\treturn offset;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic root(el) {\r\n\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Get WebComponent owning element inside rendered shadow root\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic component(el) {\r\n\t\treturn GSDOM.parent(GSDOM.root(el));\r\n\t}\r\n\r\n\t/**\r\n\t * Get node index between siblings\r\n\t * @param {HTMLElement} node \r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getElementIndex(node) {\r\n\t\tif (!GSDOM.isHTMLElement(node)) return 0;\r\n\t\treturn [...node.parentElement.children].indexOf(node);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.documentElement, el);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.documentElement, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.documentElement, el, all, shadow);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return GSDOM.#proxy(el);\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return GSDOM.#proxy(o);\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {String} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t*/\r\n\tstatic queryAll(el, qry, all = false, shadow = true) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.documentElement, el, all, shadow);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, all, shadow);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(GSDOM.#proxy(o));\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Overide native to prevent DOM issue when input field name=id\r\n\t * @returns{Proxy}\r\n\t */\r\n\tstatic #proxy(el) {\r\n\t\tif (el.tagName !== 'FORM') return el;\r\n\t\tif (!GSDOM.isHTMLElement(el.id)) return el;\r\n\t\treturn new Proxy(el, {\r\n\t\t\tget: function (target, prop, receiver) {\r\n\t\t\t\tif (prop === '_owner_') return target;\r\n\t\t\t\tif (prop === 'id') return target.getAttribute('id');\r\n\t\t\t\tconst res = Reflect.get(target, prop);\r\n\t\t\t\treturn GSFunction.isFunction(res) ? res.bind(target) : res;\r\n\t\t\t},\r\n\t\t\tset: function (target, prop, value) {\r\n\t\t\t\treturn target[prop] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} qry \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t *       Use sanitizer when not any more experimental feature;\r\n\t *       Watch for default Sanitizer.getDefaultConfiguration()\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @param {Boolean} sanitize \r\n\t * @param {Sanitizer} sanitizer \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '', sanitize = false, sanitizer) {\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (!isValid) return;\r\n\t\tif (sanitize && el?.setHTML) {\r\n\t\t\tsanitizer ? el.setHTML(val, { sanitizer }) : el.setHTML(val);\r\n\t\t} else {\r\n\t\t\tel.innerHTML = val instanceof Document ? val.body.innerHTML : val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set style to an element\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Object} obj \r\n\t */\r\n\tstatic css(el, obj) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tel.forEach(it => {\r\n\t\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\t\t\t\tit.style[kv[0]] = kv[1];\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {*} val list of css classes in space separated string\r\n\t * @param {Boolean} sts True to add, false to remove\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic toggleClass(el, val, sts) {\r\n\t\tif (GSUtil.isString(el)) el = GSDOM.queryAll(el);\r\n\t\tif (GSDOM.isHTMLElement(el)) el = [el];\r\n\t\tif (!(Array.isArray(el) && el.length > 0)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (GSUtil.isNull(sts)) return val.forEach(v => {\r\n\t\t\tel.forEach(it => it.classList.toggle(v));\r\n\t\t});\r\n\t\tel.forEach(it => {\r\n\t\t\tsts ? it.classList.add.apply(it.classList, val) : it.classList.remove.apply(it.classList, val);\r\n\t\t});\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Toggle element visibility\r\n\t * @param {HTMLElement|string} el \r\n\t * @param {Boolean} sts \r\n\t */\r\n\tstatic toggle(el, sts) {\r\n\t\treturn GSDOM.toggleClass(el, 'd-none', GSUtil.isNull(sts) ? sts : !sts);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {String} val \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea, output') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get proper value from element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String|Number}\r\n\t */\r\n\tstatic getValue(el) {\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'datetime-local':\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn el.value ? el.valueAsNumber : el.value;\r\n\t\t\tcase 'select-multiple':\r\n\t\t\t\treturn Array.from(el.selectedOptions).map(o => o.value);\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value') && el.value) {\r\n\t\t\t\t\treturn el.checked ? el.value : null;\r\n\t\t\t\t}\r\n\t\t\t\treturn el.checked;\r\n\t\t\tdefault:\r\n\t\t\t\treturn el.value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tlet value = GSDOM.getValue(el);\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSCSSMap.styleValue(el, 'text-transform');\r\n\t\t\tif (map) value = GSUtil.textTransform(map.value, value);\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {String|Boolean|Number} val \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tconst data = Array.isArray(val) ? val[0] || '' : val;\r\n\r\n\t\tswitch (el.type) {\r\n\t\t\tcase 'checkbox':\r\n\t\t\t\tif (el.hasAttribute('value')) {\r\n\t\t\t\t\tel.checked = data === el.value;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tel.checked = data == true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel.value = data;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} qry \r\n\t * @param {Boolean} invalid Should include invalid fields\r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select, output', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tGSDOM.queryAll(root, qry)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tif (el.type !== 'radio') {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t} else if (el.checked) {\r\n\t\t\t\t\t//params[el.name] = GSDOM.toValue(el);\r\n\t\t\t\t\tGSData.writeToOject(params, el.name, GSDOM.toValue(el));\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {HTMLElement} owner Root selector (form)\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t * @param {String} qry Element type selector,defaults to form elements \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select, output') {\r\n\t\tobj = GSUtil.toJson(obj);\r\n\t\tif (Object.entries(obj).length === 0) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list).forEach(el => GSDOM.fromObject2Element(el, obj));\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElement (input)\r\n\t * @param {HTMLElement} owner Element to populate\r\n\t * @param {Object} obj Data source key/value pairs\r\n\t */\r\n\tstatic fromObject2Element(el, obj) {\r\n\t\tif (!GSData.objectPathExist(obj, el.name)) return;\r\n\t\tconst val = GSData.readFromObject(obj, el.name);\r\n\t\tif (el.type !== 'radio') {\r\n\t\t\t//GSDOM.fromValue(el, obj[el.name]);\r\n\t\t\tGSDOM.fromValue(el, val);\r\n\t\t} else if (el.value === val) el.checked = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert HTMLElement into a JSON object\r\n\t * @param {HTMLElement|Array} own \r\n\t * @param {Boolean} recursive \r\n\t * @param {Boolean} plain  \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic toJson(own, recursive = true, plain = false) {\r\n\t\tif (Array.isArray(own)) return own.map(o => GSDOM.toJson(o, recursive));\r\n\t\tconst obj = {};\r\n\t\tif (!GSDOM.isHTMLElement(own)) return obj;\r\n\r\n\t\tif (!plain) obj['#tagName'] = own.tagName.toLowerCase();\r\n\t\tobj['$text'] = own.innerText;\r\n\r\n\t\tArray.from(own.attributes).forEach(v => obj[v.name] = v.value);\r\n\r\n\t\tif (recursive) {\r\n\t\t\tconst children = Array.from(own.children).map(el => GSDOM.toJson(el, recursive, plain));\r\n\t\t\tif (children.length > 0) obj.items = children;\r\n\t\t}\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM/html\r\n\t * @param {Object} obj \r\n\t * @param {Boolean} asString As string or HTMLElement Tree \r\n\t * @param {String} tag \r\n\t */\r\n\tstatic fromJson(obj, tag = 'gs-item', asString = false) {\r\n\t\treturn asString ? GSDOM.fromJsonAsString(obj, tag) : GSDOM.fromJsonAsDOM(obj, tag);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to DOM tree\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {HTMLElement|Array}\r\n\t */\r\n\tstatic fromJsonAsDOM(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tconst isPrimitive = GSUtil.isNumber(obj) || GSUtil.isString(obj);\r\n\t\tif (isPrimitive) return GSDOM.fromJsonAsDOM({ title: obj }, tag);\r\n\r\n\t\tconst isArray = Array.isArray(obj);\r\n\t\tif (isArray) return obj.map(o => GSDOM.fromJsonAsDOM(o, tag));\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst el = document.createElement(name);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => el.setAttribute(v, obj[v]));\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsDOM(o, tag);\r\n\t\t\t\tel.appendChild(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to HTML source\r\n\t * @param {Object} obj \r\n\t * @param {String} tag \r\n\t * @returns {String}\r\n\t */\r\n\tstatic fromJsonAsString(obj, tag = 'gs-item') {\r\n\t\tif (!obj) return null;\r\n\r\n\t\tif (Array.isArray(obj)) return obj.map(o => GSDOM.fromJsonAsString(o)).join('');\r\n\r\n\t\tconst name = obj['#tagName'] || tag;\r\n\t\tconst src = [];\r\n\t\tsrc.push(`<${name} `);\r\n\r\n\t\tObject.keys(obj).filter(v => v != 'items' && v[0] != '#')\r\n\t\t\t.forEach(v => src.push(` ${v}=\"${obj[v]}\" `));\r\n\r\n\t\tsrc.push(`>`);\r\n\r\n\t\tif (Array.isArray(obj.items)) {\r\n\t\t\tobj.items.forEach(o => {\r\n\t\t\t\tconst sub = GSDOM.fromJsonAsString(o, tag);\r\n\t\t\t\tsrc.push(sub);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tsrc.push(`</${name}>`);\r\n\r\n\t\treturn src.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&')\r\n\t\t\t.filter(v => v.length > 1)\r\n\t\t\t.forEach(v => {\r\n\t\t\t\tconst d = v.split('=');\r\n\t\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tlet list = GSDOM.queryAll(own, qry);\r\n\t\tif (!all && group) list = list.filter(el => GSUtil.asBool(el.dataset[group]))\r\n\t\tlist.forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, textarea, .btn', all = true, group = '') {\r\n\t\tGSDOM.queryAll(own, qry)\r\n\t\t\t.filter(el => all ? true : !el.disabled)\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tel.setAttribute('disabled', true);\r\n\t\t\t\tif (group) el.dataset[group] = true;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {String} qry \r\n\t * @param {String} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.queryAll(own, qry);\r\n\t\tel.forEach(it => GSDOM.fromValue(it, val));\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which child list to validate\r\n\t * @param {String} tagName Expected owner element tag name\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {String} slotList List of named slots allowed\r\n\t * @param {Boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {Boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {String} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @param {String} slotList List of elements with named  slots allowed\r\n\t * @returns {Boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst allowElement = !(el instanceof Text || el instanceof Comment);\r\n\t\tconst allowTag = !whiteList.includes(el.tagName);\r\n\t\treturn allowElement && allowTag;\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\tglobalThis.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../../../modules/base/GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport class Utils {\r\n\r\n    static get notify() {\r\n        return GSDOM.query('gs-notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (success) return Utils.notify?.info('Info', msg);\r\n        Utils.notify?.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    static async load(url = '') {\r\n        const res = await fetch(url);\r\n        return await res.json();\r\n    }\r\n}","// Lit 3.0 Google\r\nconst litUrl = globalThis.GS_LIT_URL || '/webcomponents/assets/lib/lit-all.min.js';\r\nconst litModule = await import(litUrl);\r\n\r\n// small helper to print this exports (or any other module); use it when upgrading to a new Lit version to regenerte export list below\r\nexport const printModuleExports = (module) => console.log(Object.keys(module || litModule).map(v => `export const ${v} = litModule.${v};`).join('\\n'));\r\n\r\nexport const ReactiveController = litModule.ReactiveController;\r\nexport const ReactiveElement = litModule.ReactiveElement;\r\nexport const AsyncDirective = litModule.AsyncDirective;\r\nexport const AsyncReplaceDirective = litModule.AsyncReplaceDirective;\r\nexport const CSSResult = litModule.CSSResult;\r\nexport const Directive = litModule.Directive;\r\nexport const LitElement = litModule.LitElement;\r\nexport const PartType = litModule.PartType;\r\nexport const TemplateResultType = litModule.TemplateResultType;\r\nexport const UnsafeHTMLDirective = litModule.UnsafeHTMLDirective;\r\nexport const UntilDirective = litModule.UntilDirective;\r\nexport const _$LE = litModule._$LE;\r\nexport const _$LH = litModule._$LH;\r\nexport const adoptStyles = litModule.adoptStyles;\r\nexport const asyncAppend = litModule.asyncAppend;\r\nexport const asyncReplace = litModule.asyncReplace;\r\nexport const cache = litModule.cache;\r\nexport const choose = litModule.choose;\r\nexport const classMap = litModule.classMap;\r\nexport const clearPart = litModule.clearPart;\r\nexport const createRef = litModule.createRef;\r\nexport const css = litModule.css;\r\nexport const defaultConverter = litModule.defaultConverter;\r\nexport const directive = litModule.directive;\r\nexport const getCommittedValue = litModule.getCommittedValue;\r\nexport const getCompatibleStyle = litModule.getCompatibleStyle;\r\nexport const getDirectiveClass = litModule.getDirectiveClass;\r\nexport const guard = litModule.guard;\r\nexport const html = litModule.html;\r\nexport const ifDefined = litModule.ifDefined;\r\nexport const insertPart = litModule.insertPart;\r\nexport const isCompiledTemplateResult = litModule.isCompiledTemplateResult;\r\nexport const isDirectiveResult = litModule.isDirectiveResult;\r\nexport const isPrimitive = litModule.isPrimitive;\r\nexport const isServer = litModule.isServer;\r\nexport const isSingleExpression = litModule.isSingleExpression;\r\nexport const isTemplateResult = litModule.isTemplateResult;\r\nexport const join = litModule.join;\r\nexport const keyed = litModule.keyed;\r\nexport const literal = litModule.literal;\r\nexport const live = litModule.live;\r\nexport const map = litModule.map;\r\nexport const noChange = litModule.noChange;\r\nexport const notEqual = litModule.notEqual;\r\nexport const nothing = litModule.nothing;\r\nexport const range = litModule.range;\r\nexport const ref = litModule.ref;\r\nexport const removePart = litModule.removePart;\r\nexport const render = litModule.render;\r\nexport const repeat = litModule.repeat;\r\nexport const setChildPartValue = litModule.setChildPartValue;\r\nexport const setCommittedValue = litModule.setCommittedValue;\r\nexport const staticHtml = litModule.staticHtml;\r\nexport const staticSvg = litModule.staticSvg;\r\nexport const styleMap = litModule.styleMap;\r\nexport const supportsAdoptingStyleSheets = litModule.supportsAdoptingStyleSheets;\r\nexport const svg = litModule.svg;\r\nexport const templateContent = litModule.templateContent;\r\nexport const unsafeCSS = litModule.unsafeCSS;\r\nexport const unsafeHTML = litModule.unsafeHTML;\r\nexport const unsafeSVG = litModule.unsafeSVG;\r\nexport const unsafeStatic = litModule.unsafeStatic;\r\nexport const until = litModule.until;\r\nexport const when = litModule.when;\r\nexport const withStatic = litModule.withStatic;","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {String} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element id if not set already\r\n\t * @param {HTMLElement} el \r\n\t */\r\n\tstatic setIf(el) {\r\n\t\tif (el) {\r\n\t\t\tel.id = typeof el.id !== 'string' ? GSID.id : el.id || GSID.id;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSAttr\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate - prevent circular import\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t  * Generic function to change element node attribute\r\n\t  * \r\n\t  * @param {HTMLElement} el Target to receive attribute value\r\n\t  * @param {String} name Attribite name\r\n\t  * @param {Boolean} val Attribute value\r\n\t  */\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {String} name Attribite name\r\n\t * @param {String} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {String}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tif (!GSUtil.isInstance(el)) return undefined;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {Number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {String} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn GSUtil.toJson(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as boolean\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Boolean} val Default value\r\n\t */\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\tGSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t\t/*\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tel.toggleAttribute(name, GSUtil.asBool(val));\r\n\t\t*/\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as numeric\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {Number} val Default value\r\n\t */\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\t/**\r\n\t * Store data into attribute as JSON string\r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {String} name Attribute name\r\n\t * @param {string val Default value\r\n\t */\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\tGSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON object to attribute string \r\n\t * @param {*} obj \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flattenJson(obj) {\r\n\t\treturn Object.entries(obj || {}).map(kv => `${kv[0]}=${kv[1]}`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Apply JSON object to element attributes\r\n\t * @param {*} obj \r\n\t */\r\n\tstatic jsonToAttr(obj, el) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tObject.entries(obj || {}).map(kv => GSAttr.set(el, kv[0], kv[1]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t * @returns {String}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of element attributes into a flat list separated by given separator (default ' ')\r\n\t * @param {HTMLMediaElement} el \r\n\t * @param {String} sep \r\n\t * @returns {String}\r\n\t */\r\n\tstatic flatten(el, sep = ' ') {\r\n\t\treturn Array.from(el?.attributes || []).map(a => `${a.name}=\"${a.value}\"`).join(sep);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic attribute retriever \r\n\t * opt format { prop: {type:Number, attribute: 'alt-prop-name'}}\r\n\t * @returns {Proxy}\r\n\t */\r\n\tstatic proxify(host, opt = {}, recursive = 'items') {\r\n\r\n\t\tconst instance = new Proxy(host, {\r\n\t\t\t\r\n\t\t\tset(target, prop, value) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset = value;\r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\tGSAttr.toggle(target, prop,  GSUtil.asBool(value));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\tGSAttr.setAsNum(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\tGSAttr.set(target, prop, JSON.stringify(value));\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tGSAttr.set(target, prop, value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\r\n\t\t\tget(target, prop) {\r\n\t\t\t\t\r\n\t\t\t\tif (prop === 'self') return target;\r\n\t\t\t\tif (prop === 'dataset') return target.dataset;\r\n\t\t\t\tif (prop === recursive) return Array.from(target.children).map(el => GSAttr.proxify(el, opt, recursive)); \r\n\r\n\t\t\t\tconst type = opt[prop]?.type;\r\n\t\t\t\tconst safe = opt[prop]?.unsafe ? true : false;\r\n\t\t\t\tconst dflt = opt[prop]?.default;\r\n\t\t\t\tconst multi = opt[prop]?.multi === true;\r\n\t\t\t\t\r\n\t\t\t\tprop = opt[prop]?.attribute || prop;\r\n\t\t\t\tlet val = GSAttr.get(target, prop);\r\n\t\t\t\t\r\n\t\t\t\tswitch(type) {\r\n\t\t\t\t\tcase Boolean :\r\n\t\t\t\t\t\treturn target.hasAttribute(prop);\r\n\t\t\t\t\tcase Number :\r\n\t\t\t\t\t\treturn GSUtil.asNum(val, 0);\r\n\t\t\t\t\tcase Object :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, {});\r\n\t\t\t\t\tcase Array :\r\n\t\t\t\t\t\treturn GSUtil.toJson(val, []);\r\n\t\t\t\t\tdefault:\t\t\t\t\t\r\n\t\t\t\t\t\tval = safe ? (val || dflt || '') : (val || dflt || undefined);\r\n\t\t\t\t\t\treturn multi ? GSUtil.toStringArray(val) : val;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t\tglobalThis.GSAttr = GSAttr;\r\n\t}\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvents class\r\n * @module base/GSEvents\r\n */\r\n\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport class GSEvents {\r\n\r\n\tstatic #rid = 0;\r\n\tstatic #protect = false;\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\tstatic #susspended = 0;\r\n\r\n\tget altContext() {\r\n\t\treturn GSEvents.#protect;\r\n\t}\r\n\r\n\tset altContext(val) {\r\n\t\tGSEvents.#protect = GSUtil.asBool(val, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\tGSEvents.listen(globalThis, null, 'contextmenu', GSEvents.#onContext);\r\n\t\tGSEvents.listen(globalThis.document, null, 'keydown', GSEvents.#onKeyDown);\r\n\t}\r\n\r\n\tstatic #onContext(event) {\r\n\t\tif (GSEvents.#protect || !event.shiftKey) GSEvents.prevent(event);\r\n\t}\r\n\r\n\tstatic #onKeyDown(event) {\r\n\t\tconst code = event.code;\r\n\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\treturn false;\r\n\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for web page to completely load, then send event to target element\r\n\t * DOMContentLoaded vs load ?!\r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {String} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100, prevent = true) {\r\n\t\tif (!GSEvents.#loaded) {\r\n\t\t\ttry {\r\n\t\t\t\tawait GSEvents.wait(globalThis.window, 'load', timeout, prevent);\r\n\t\t\t\tGSEvents.#loaded = true;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// await GSUtil.timeout(timeout);\r\n\t\tawait GSFunction.callFunction(callback);\r\n\t\tGSEvents.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} name \r\n\t * @param {Number} timeout  \r\n\t * @param {Boolean} prevent \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '', timeout = 0, prevent = true) {\r\n\t\tif (GSUtil.isStringEmpty(name)) throw new Error('Event undefined!');\r\n\t\tif (!GSUtil.isNumber(timeout)) throw new Error('Invalid timeout value!');\r\n\t\tif (timeout > 0) return GSEvents.once(own, null, name, null, timeout);\r\n\t\treturn new Promise(resolve => {\r\n\t\t\tGSEvents.once(own, null, name, e => {\r\n\t\t\t\tif (prevent) GSEvents.prevent(e);\r\n\t\t\t\tresolve(e);\r\n\t\t\t}, timeout);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @param {Boolean} chaind Prevent consequtive chained calls.\r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback, chained = false) {\r\n\r\n\t\tif (chained) {\r\n\t\t\tif (typeof callback !== 'function') return;\r\n\t\t\tif (GSEvents.#susspended > 0) return GSFunction.callFunction(callback);\r\n\t\t\tGSEvents.#susspended++;\r\n\t\t}\r\n\r\n\t\treturn new Promise((accept, reject) => {\r\n\t\t\trequestAnimationFrame(async () => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst o = await GSFunction.callFunction(callback);\r\n\t\t\t\t\taccept(o);\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\treject(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tif (chained && GSEvents.#susspended > 0) GSEvents.#susspended--;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\tstatic on = GSEvents.listen;\r\n\tstatic off = GSEvents.unlisten;\r\n\r\n\t/**\r\n\t * Wait for an event. Also, trigger on timeout if event not triggered.\r\n\t * @param {HTMLElement} own \r\n\t * @param {String} qry Optional selector within owner\r\n\t * @param {String} event Event name to wait for\r\n\t * @param {*} callback Function to call \r\n\t * @param {Number | AbortSignal} timeout If GT 0, retrun Promise\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback, timeout = 0) {\r\n\t\tconst signal = GSEvents.#toSignal(timeout);\r\n\t\tif (signal && signal.internal) {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\tGSEvents.listen(own, qry, event, callback || resolve, { once: true, signal: signal });\r\n\t\t\t\tsignal.addEventListener('abort', reject);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn GSEvents.listen(own, qry, event, callback, { once: true, signal: signal });\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e, full = true) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t\tif (full && GSFunction.hasFunction(e, 'stopImmediatePropagation')) e.stopImmediatePropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher.\r\n\t * NOTE: If expecting to catch return value, do not use async in listeners\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger \r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Boolean} false if event is cancelable, and at least one of the event handlers which received event called Event.preventDefault(). Otherwise true.\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst opt = { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable };\r\n\t\tconst event = new CustomEvent(name, opt);\r\n\t\treturn sender?.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert event type to native event\r\n\t * @param {String} type \r\n\t * @param {Object} opt \r\n\t * @returns {Event}\r\n\t */\r\n\tstatic toEvent(type, opt) {\r\n\t\tlet evt = null;\r\n\t\tswitch (type) {\r\n\t\t\tcase 'copy':\r\n\t\t\tcase 'cut':\r\n\t\t\tcase 'paste':\r\n\t\t\t\tevt = new ClipboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\tcase 'focus':\r\n\t\t\tcase 'focusin':\r\n\t\t\tcase 'focusout':\r\n\t\t\t\tevt = new FocusEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'input':\r\n\t\t\tcase 'beforeinput':\r\n\t\t\t\tevt = new InputEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'keydown':\r\n\t\t\tcase 'keyup':\r\n\t\t\tcase 'keypress':\r\n\t\t\t\tevt = new KeyboardEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dblclick':\r\n\t\t\tcase 'mousedown':\r\n\t\t\tcase 'mouseenter':\r\n\t\t\tcase 'mouseleave':\r\n\t\t\tcase 'mousemove':\r\n\t\t\tcase 'mouseout':\r\n\t\t\tcase 'mouseover':\r\n\t\t\tcase 'mouseup':\r\n\t\t\t\tevt = new MouseEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'submit':\r\n\t\t\t\tevt = new SubmitEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'touchstart':\r\n\t\t\tcase 'touchend':\r\n\t\t\tcase 'touchmove':\r\n\t\t\tcase 'touchcancel':\r\n\t\t\t\tevt = new TouchEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'whell':\r\n\t\t\t\tevt = new WheelEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'pointerover':\r\n\t\t\tcase 'pointerenter':\r\n\t\t\tcase 'pointerdown':\r\n\t\t\tcase 'pointermove':\r\n\t\t\tcase 'pointerup':\r\n\t\t\tcase 'pointercancel':\r\n\t\t\tcase 'pointerout':\r\n\t\t\tcase 'pointerleave':\r\n\t\t\tcase 'pointerrawupdate':\r\n\t\t\tcase 'gotpointercapture':\r\n\t\t\tcase 'lostpointercapture':\r\n\t\t\t\tevt = new PointerEvent(type, opt);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tevt = new CustomEvent(type, opt);\r\n\t\t}\r\n\t\treturn evt;\r\n\t}\r\n\r\n\t/**\r\n\t * Helper to fix some Firefox issues, detect event\r\n\t * @param {Event} e \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isMouseOrPointerEvent(e) {\r\n\t\treturn e instanceof MouseEvent || e instanceof PointerEvent;\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn requestAnimationFrame(() => {\r\n\t\t\tGSEvents.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher delayed in miliseconds\r\n\t * \r\n\t * @param {Number} timeout Time to delay event\r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {String} name  Event name to trigger\r\n\t * @param {Object} obj Data object to send \r\n\t * @param {Boolean} bubbles Send event to parent\r\n\t * @param {Boolean} composed Send event across shadowDom\r\n\t * @param {Boolean} cancelable Event is cancelable\r\n\t * @returns {Number} setTimeout id for cancelation\r\n\t */\r\n\tstatic sendDelayed(timeout = 1, sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\treturn setTimeout(() => GSEvents.send(sender, name, obj, bubbles, composed, cancelable), timeout);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to monitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {Boolean} once Monitor event only once\r\n\t * @param {Boolean} capture Allow event capture\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (!(window instanceof Window || el.isConnected)) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner element to monitor\r\n\t * @param {String} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {Object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = el[Symbol.for('gs-event-id')];\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.id;\r\n\t\t\tel[Symbol.for('gs-event-id')] = elid;\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal helper, converter to Abortignal\r\n\t * @param {*} timeout \r\n\t */\r\n\tstatic #toSignal(timeout = 0) {\r\n\t\tif (GSUtil.isNumber(timeout) && timeout > 0) {\r\n\t\t\ttimeout = AbortSignal.timeout(timeout);\r\n\t\t\ttimeout.internal = true;\r\n\t\t\treturn timeout;\r\n\t\t}\r\n\t\tif (timeout instanceof AbortSignal) return timeout;\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Monitor GSElement 'action' events and trigger class functions if avaialble.\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} type \r\n\t */\r\n\tstatic monitorAction(owner, type) {\r\n\t\towner.on('action', async (e) => {\r\n\t\t\tconst me = owner;\r\n\t\t\tconst data = e.detail;\r\n\t\t\tconst action = data.action || data.data?.action;\r\n\t\t\tawait GSEvents.onAction(me, action, type, e);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Trigger class function defined in 'action' attribute\r\n\t * @param {HTMLElement} owner \r\n\t * @param {String} action \r\n\t * @param {String} prefix \r\n\t * @param {Event} evt \r\n\t * @returns {*} Action result or false\r\n\t */\r\n\tstatic async onAction(owner, action, prefix, evt) {\r\n\r\n\t\tconst callback = GSEvents.findAction(owner, action, prefix);\r\n\t\tif (!callback) return;\r\n\r\n\t\tGSEvents.prevent(evt);\r\n\t\tlet sts = false;\r\n\t\ttry {\r\n\t\t\tif (GSFunction.isFunctionAsync(callback)) {\r\n\t\t\t\tsts = await callback(evt);\r\n\t\t\t} else {\r\n\t\t\t\tsts = callback(evt);\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tsts = e;\r\n\t\t\tif (!GSFunction.isFunction(owner.onError)) throw e;\r\n\t\t\towner.onError(e);\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Find object instance action by name\r\n\t * @param {Object} owner \r\n\t * @param {String} action \r\n\t * @returns {Function}\r\n\t */\r\n\tstatic findAction(owner, action = '', prefix = '') {\r\n\t\tlet sts = false;\r\n\t\tif (!action) return sts;\r\n\t\tconst me = owner;\r\n\t\taction = GSUtil.capitalizeAttr(GSUtil.capitalize(action));\r\n\t\tprefix = GSUtil.capitalizeAttr(GSUtil.capitalize(prefix));\r\n\t\tconst name = `on${prefix}${action}`;\r\n\t\tif (globalThis.GS_LOG_ACTION) GSLog.warn(owner, `Action : ${name}`);\r\n\t\tconst fn = me[name];\r\n\t\tsts = GSFunction.isFunction(fn);\r\n\t\tsts = sts && !GSFunction.isFunctionNative(fn);\r\n\t\treturn sts ? me[name].bind(me) : null\r\n\t}\r\n\r\n\tstatic #onResize() {\r\n\t\tclearTimeout(GSEvents.#rid);\t\t\t\r\n\t\tGSEvents.#rid = setTimeout(async () => {\r\n\t\t\tawait GSEvents.waitAnimationFrame();\r\n\t\t\tGSEvents.send(window, 'resized');\r\n\t\t}, 100);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper tool to notify when window resized. \r\n\t * Can be activated only once.\r\n\t * Trigger 'resized' event on window on resize timeout.\r\n\t */\r\n\tstatic resizeMonitor() {\r\n\t\tconst me = GSEvents;\r\n\t\tconst own = document.documentElement;\r\n\t\tconst obj = me.#eventKey(own, window, 'resize', me.#onResize);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst def = elmap.get(obj.key)?.get(obj.fnkey);\r\n\t\tif (!def) me.attach(own, window, 'resize', me.#onResize);\r\n\t}\r\n\r\n\tstatic {\r\n\t\t//GSEvents.resizeMonitor();\r\n\t\tObject.freeze(GSEvents);\r\n\t\tglobalThis.GSEvents = GSEvents;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {Boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {Boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test(navigator.userAgent.toLowerCase());\r\n    }\r\n\r\n    /**\r\n     * Check if value match current URL scheme\r\n     * @param {*} val \r\n     */  \r\n    static isValidProtocol(val = '') {\r\n        if (!val) return true;\r\n        return location.protocol.slice(0, -1) === val;\r\n\t}\r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase() || '';\r\n        const isEdge = strAgt.includes('edg');\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.includes(strVal);\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, windows, macos, ios\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {String} val \r\n     * @returns {Boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {String} val\r\n     * @returns {Boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        //const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        const hasKey = 'GS_NO_CACHE' in self;\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension:/');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach parent path from provided URL string\r\n     * @param {String} url \r\n     * @param {Number} level How many levels to go up the chain\r\n     * @returns {String}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/') + '/';\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {String} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n\r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {String} url \r\n     * @return {String}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {String}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {String}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {String} val Full or partial url path\r\n     * @param {String} method HTTP methog get|put|post\r\n     * @param {Boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false, body) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = { ...headers };\r\n        headers[ct] = asjson ? 'application/json; utf-8' : headers[ct] || 'text/plain';\r\n        headers.Accept = 'application/json';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const opt = { method: method, headers: headers };\r\n        if (method === 'POST' || method === 'PUT' && body) {\r\n            opt.body = JSON.stringify(body);\r\n        }\r\n        const res = await fetch(url, opt);\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {String} url Full or partial url path\r\n     * @param {String} method http method GET|POST|PUT\r\n     * @param {Object} headers return json or string\r\n     * @param {Boolean} asjson return json or string\r\n     * @param {Object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft, body) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson, body);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = func && GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) val = await GSFunction.callFunction(func);\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n        globalThis.GSLoader = GSLoader;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSPromise class\r\n * @module base/GSPromise\r\n */\r\n\r\n/**\r\n * A Promise wrapper for timeouted and cancelable events\r\n * @class\r\n */\r\nexport class GSPromise {\r\n\r\n    #signal;\r\n    #callback;\r\n    #callbacks;\r\n    #resolve;\r\n    #reject;\r\n    #promise;\r\n\r\n    /**\r\n     * \r\n     * @param {*} callback \r\n     * @param {Number|AbortSignal} signal Timeout or custom signal\r\n     */\r\n    constructor(callback, signal) {\r\n        const me = this;\r\n        me.#callback = callback;\r\n        me.#signal = signal instanceof AbortSignal ? signal : null;\r\n        me.#signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : me.#signal;\r\n        me.#callbacks = {\r\n            abort: me.#onAbort.bind(me)\r\n        };\r\n    }\r\n\r\n    await() {\r\n        const me = this;\r\n        if (me.#promise) return me.#promise;\r\n        me.#signal?.addEventListener('abort', me.#callbacks.abort);\r\n        me.#promise = new Promise(me.#wrap.bind(me));\r\n        return me.#promise;\r\n    }\r\n\r\n    get aborted() {\r\n        return this.#signal?.aborted === true;\r\n    }\r\n\r\n    #wrap(resolve, reject) {\r\n        const me = this;\r\n        me.#resolve = resolve;\r\n        me.#reject = reject;\r\n        try {\r\n            me.#callback(me.#onResolve.bind(me), me.#onReject.bind(me));\r\n        } catch (e) {\r\n            me.#clear();\r\n            reject(e);\r\n        }\r\n    }\r\n\r\n    #onAbort() {\r\n        const me = this;\r\n        me.#clear();\r\n        me.#reject(new Error('Promise aborted!'));\r\n    }\r\n\r\n    #onResolve(o) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#resolve(o);\r\n    }\r\n\r\n    #onReject(e) {\r\n        const me = this;\r\n        me.#clear();\r\n        return me.aborted ? null : me.#reject(e);\r\n    }\r\n\r\n    #clear() {\r\n        const me = this;\r\n        me.#signal?.removeEventListener('abort', me.#callbacks.abort);\r\n    }\r\n\r\n\t/**\r\n\t * Execute array of promisses sequentially\r\n\t * @param {Arrayy<Promise>} ps \r\n\t * @returns \r\n\t */\r\n\tstatic sequential(ps) {\r\n\t\tif (!Array.isArray(ps)) ps = [];\r\n\t\treturn ps.reduce((p, next) => p.then(next), Promise.resolve());\r\n\t}\r\n\r\n    static {\r\n        globalThis.GSPromise = GSPromise;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSID } from './GSID.mjs';\r\nimport { GSLoader } from './GSLoader.mjs';\r\nimport { GSPromise } from './GSPromise.mjs';\r\nimport { GSEvents } from './GSEvents.mjs';\r\nimport { GSUtil } from './GSUtil.mjs';\r\n\r\n/**\r\n * A module loading GSLocalization class\r\n * @module base/GSLocalization\r\n */\r\n\r\nconst GS_LOCALIZATION_LANGUAGE = globalThis.GS_LOCALIZATION_LANGUAGE || document.documentElement.lang || navigator.language;\r\n\r\n/**\r\n * Generic text translation engine.\r\n * Each JSON langauge file is of 2 files format \r\n * default.json  {'UI text', 'KEY_NAME'}\r\n * language.json {$language$: 'langauge_name', KEY_NAME : 'translation text'}\r\n * @class\r\n */\r\nclass GSLocalizationImpl {\r\n\r\n    #languages = new Map();\r\n    #queue = new Set();\r\n    #queued = false;\r\n\r\n    #url = globalThis.GS_LOCALIZATION_URL;\r\n    #default = GS_LOCALIZATION_LANGUAGE;\r\n    #language;\r\n\r\n    constructor() {\r\n        this.load();\r\n    }\r\n\r\n    /**\r\n     * Default page langugae, use page language, or browser languge if value not set\r\n     */\r\n    get default() {\r\n        return this.#default;\r\n    }\r\n\r\n    set default(val = '') {\r\n        this.#default = val || GS_LOCALIZATION_LANGUAGE;\r\n    }\r\n\r\n    /**\r\n     * Language to which to translate\r\n     */\r\n    get lang() {\r\n        return this.#language || this.default;\r\n    }\r\n\r\n    set lang(val = '') {\r\n        this.#language = val;\r\n    }\r\n\r\n    /**\r\n     * URL from where to load JSON translation documents\r\n     */\r\n    get url() {\r\n        return this.#url;\r\n    }\r\n\r\n    set url(val = '') {\r\n        this.#url = val || globalThis.GS_LOCALIZATION_URL;\r\n    }\r\n\r\n    translate(language = '', value = '') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return value;\r\n        if (!me.#languages.has(language)) {\r\n            me.load(language);\r\n            return value;\r\n        }\r\n        const deft = me.#getLanguage('default');\r\n        const lang = me.#getLanguage(language);\r\n        const texthash = deft.get(GSID.hashCode(value));\r\n        return texthash ? lang.get(texthash) || value : value;\r\n    }\r\n\r\n    reset() {\r\n        const me = this;\r\n        me.#default = GS_LOCALIZATION_LANGUAGE;\r\n        me.#language = undefined;\r\n        me.load();\r\n    }\r\n\r\n    load(language = 'default') {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        if (me.#languages.has(language)) return;\r\n        me.#queue.add(language);\r\n        if (me.#queued) return;\r\n        me.#queued = true;\r\n        queueMicrotask(async () => {\r\n            const promises = Array.from(me.#queue.values()).map(l => me.loadWait(l));\r\n            await GSPromise.sequential(promises);\r\n            me.#queued = false;\r\n        });\r\n\r\n    }\r\n\r\n    async loadWait(language) {\r\n        const me = this;\r\n        if (GSUtil.isStringEmpty(language)) return;\r\n        if (GSUtil.isStringEmpty(me.url)) return;\r\n        const headers = {\r\n            'Cache-Control': 'no-cache',\r\n            'Pragma': 'no-cache'\r\n        };\r\n        const url = GSLoader.normalizeURL(`${me.url}/${language}.json`);\r\n        let res = await GSLoader.loadSafe(url, 'GET', headers, true);\r\n        if (!res && language.indexOf('-') > 0) res = await me.loadWait(language.split('-')[0]);\r\n        if (!res) return false;\r\n        me.#queue.delete(language);\r\n        me.#store(language, res);\r\n    }\r\n\r\n    /**\r\n     * Store object properties as set of key-value pairs,\r\n     * keys are not stores as name, but as hash calc\r\n     * values double stored as a hash-key/value and hash-value/hash-key\r\n     * \r\n     * @param {string} lang \r\n     * @param {object} obj \r\n     * @returns \r\n     */\r\n    #store(lang, obj) {\r\n        if (!(obj && lang)) return false;\r\n        const isDefault = lang === 'default';\r\n        const map = this.#getLanguage(lang);\r\n        Object.entries(obj).forEach((kv) => {\r\n            const hk = GSID.hashCode(kv[0].trim());\r\n            map.set(hk, isDefault ? GSID.hashCode(kv[1]) : kv[1]);\r\n        });\r\n        GSEvents.send(window, 'gs-language', { details: lang });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get language map. Create a new one if not found.\r\n     * @param {*} val \r\n     * @returns \r\n     */\r\n    #getLanguage(val = '') {\r\n        const me = this;\r\n        if (!me.#languages.has(val)) {\r\n            me.#languages.set(val, new Map());\r\n        }\r\n        return me.#languages.get(val);\r\n    }\r\n\r\n}\r\n\r\nexport const GSLocalization = new GSLocalizationImpl();","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSID } from \"./GSID.mjs\";\r\n\r\n/**\r\n * A dynamic CSSStyleSheet used for dynamic programmable changed\r\n * css classes attached to a WebComponent html template elements.\r\n * Programmatically changing dynamic class elements will not reflect \r\n * element style properties.\r\n */\r\nexport class GSDynamicStyle extends CSSStyleSheet {\r\n\r\n    /**\r\n     * Constructor for DynamicStlye\r\n     * @param {String} id Unique name for easier filtering  \r\n     */\r\n    constructor(id = 'dynamic') {\r\n        super();\r\n        this.id = id || GSID.id;\r\n    }\r\n\r\n\t/**\r\n\t * Remove dynamic element rule\r\n\t * @param {String} id  \r\n\t */\r\n\tdeleteRule(id = '') {\r\n        const me = this;\r\n\t\tArray.from(me.cssRules)\r\n\t\t\t.map((v, i) => v.selectorText === `.${id}` ? i : -1)\r\n\t\t\t.filter(v => v > -1)\r\n\t\t\t.forEach(v => me.deleteRule(v));\r\n\t}    \r\n\r\n    /**\r\n     * Get individual rule from dynamic styles cache\r\n     * @param {String} id CSS class name\r\n     * @returns {CSSRule} \r\n     */\r\n    getRule(id = '') {\r\n        return Array.from(this.cssRules).filter(v => v.selectorText === `.${id}`).pop();\r\n    }\r\n\r\n    /**\r\n     * Set dynamic element rule. Accepts string or json object representation\r\n     * @param {String} id Unique css class name used\r\n     * @param {string|object} style CSS style properties to apply\r\n     */\r\n    setRule(id, style = '', sync = false) {\r\n\r\n        const me = this;\r\n\r\n        if (!id) return;\r\n\r\n\t\tlet rule = me.getRule(id);\r\n\t\tif (!rule) {\r\n\t\t\tme.insertRule(`.${id} {}`);\r\n\t\t\treturn me.setRule(id, style, sync);\r\n\t\t}        \r\n\r\n        if (!style) return rule;\r\n\r\n        let data = [];\r\n        if (typeof style === 'string') {\r\n            data = style.replaceAll('\\n', '').split(';').map(v => v.trim().split(':')).filter(v => v.length === 2);\r\n        } else {\r\n            data = Object.entries(style);\r\n        }\r\n\r\n        if (sync) {\r\n            data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n        } else {\r\n            requestAnimationFrame(() => {\r\n                data.forEach(kv => me.#updateRule(rule, kv[0], kv[1]));\r\n            });\r\n        }\r\n\r\n        return rule;\r\n    }\r\n\r\n    #updateRule(rule, prop = '', style = '') {\r\n        style = style || '';\r\n        const isImportant = style.includes('!important');\r\n        style = style.replace('!important', '');\r\n        prop = prop.trim();\r\n        rule.style.setProperty(prop, style, isImportant ? 'important' : '');\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style attached. \r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-sheet property.\r\n     * @param {HTMLElement} source A html element continaing dynamically injected html style\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n\tstatic dynamicStyleSheet(source) {\r\n\t\t// find shadow root (or document)\r\n\t\tconst root = GSDOM.root(source);\r\n        const id = source.dataset.sheet || 'dynamic';\r\n\t\t// find custom; dynamic style\r\n\t\treturn GSDynamicStyle.dynamicStyleSheetByID(root, id);\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic style\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n     * @returns {CSSStyleSheet} An instance of dynamic stylesheet containing dynamic rules\r\n     */\r\n    static dynamicStyleSheetByID(root, id) {\r\n\t\treturn Array.from(root?.adoptedStyleSheets).filter(el => el.id === id).pop();\r\n    }\r\n\r\n\t/**\r\n\t * Find dynamic style & rule for element\r\n\t * @param {HTMLElement} source A html element with dynamic style attached  (with data-gs-class attribute set)\r\n\t * @returns {CSSStyleRule} Instance of dynamic css class \r\n\t */\r\n\tstatic dynamicRule(source) {\r\n\t\tconst style = GSDynamicStyle.dynamicStyleSheet(source);\r\n\t\treturn style?.getRule(source.dataset.gsClass);\t\t\r\n\t}\r\n\r\n    /**\r\n     * Fnd custom dynamic rule\r\n     * @param {Document} root Document or shadowDom\r\n     * @param {String} id Dynamic CSS name\r\n    * @returns {CSSStyleRule} Instance of dynamic css class \r\n     */    \r\n    static dynamicRuleByID(root, id) {\r\n        const style = GSDynamicStyle.dynamicStyleSheetByID(root, 'dynamic');\r\n        return style?.getRule(id);\r\n    }\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {HTMLElement} source \r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyle(source) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRule(source);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Find element dynamic style\r\n     * @param {Document} source Document or shadowDOM\r\n     * @returns {CSSStyle} Element dynamic style or default style if dynamic not defined\r\n     */\r\n\tstatic dynamicStyleByID(root, id) {\r\n\t\tconst rule = GSDynamicStyle.dynamicRuleByID(root, id);\r\n\t\treturn rule?.style; // || source.style;\r\n\t}\r\n\r\n    /**\r\n     * Apply CSS properties to the element style.\r\n     * Will search for a StyleSheet within element shadow addoptedStyleSheet by element data-gs-class property.\r\n     * @param {HTMLElement} source Element with dynamic style attached (with data-gs-class attribute set)\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyle(source, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyle(source);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}\r\n    \r\n    /**\r\n     * \r\n     * @param {Document || ShadowRoot} root Element with dynamic style attached\r\n     * @param {String} id Dynamic CSS style name\r\n     * @param {Object} opt A JSON object of css arguments to apply \r\n     * @returns {CSSStyle} A copy of modifid CSSStyle object \r\n     */\r\n\tstatic applyDynamicStyleByID(root, id, opt) {\r\n        requestAnimationFrame(() => {\r\n            const style = GSDynamicStyle.dynamicStyleByID(root, id);\r\n            return Object.assign(style, opt);\r\n        });\r\n\t}     \r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\nimport { GSDynamicStyle } from '../base/GSDynamicStyle.mjs';\r\n\r\n/**\r\n * Controller register self to gs-adopted event listener list.\r\n * Every time even gs-adopted is triggered by the GSAdoptedEngien class,\r\n * all registerd controller will be processed for reapplaying stylesheet \r\n * Also, this controlelr takes care of adding custom dynamic styles \r\n * to the end fo the list.\r\n * \r\n * Custom dynamic styles are used internally by the components for dynamic \r\n * style changes to preven dom node polution; \r\n * Style  changes  are not visible directly on DOM node.\r\n */\r\nexport class AdoptedController {\r\n\r\n  #host;\r\n  #dynamic;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.add(me);\r\n    me.#adopt();\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    AdoptedController.#controllers.delete(me.#host);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component instance\r\n   * Call it from constructor for style to be applied to the current component\r\n   * @param {String} name CSS class name\r\n   * @param {Object|String} values CSS class styles to be applied\r\n   * @returns {CSSStyleRule} An instance of a CSS class\r\n   */\r\n  style(name, values) {\r\n    const me = this;\r\n    me.#dynamic = me.#dynamic ?? new GSDynamicStyle('dynamic');\r\n    return me.#dynamic.setRule(name, values, true);\r\n  }\r\n\r\n  #adopt(forced = false) {\r\n    const me = this;\r\n    if (!me.#sheets) return;\r\n    if (forced || me.#changed) {\r\n      const sheets = [...document.adoptedStyleSheets];\r\n      // support for lit \"static styles = css``\"\r\n      const internal = Array.from(me.#sheets);\r\n      if (me.#dynamic) internal.push(me.#dynamic);\r\n      me.#root.adoptedStyleSheets = [...sheets, ...internal];\r\n    }\r\n  }\r\n\r\n  get #changed() {\r\n    return document.adoptedStyleSheets.id !== this.#sheets?.id;\r\n  }\r\n\r\n  get #root() {\r\n    return this.#host.renderRoot;\r\n  }\r\n\r\n  get #sheets() {\r\n    return this.#root?.adoptedStyleSheets;\r\n  }\r\n\r\n  /**\r\n   * Global listener for gs-adopted event triggered from GSAdoptedEngine\r\n   */\r\n  static #controllers = new Set();\r\n\r\n  static #onAdopted(e) {\r\n    requestAnimationFrame(() => {\r\n      AdoptedController.#controllers.forEach(c => c.#adopt());\r\n    });\r\n  }\r\n\r\n  static #init() {\r\n    const me = AdoptedController;\r\n    GSEvents.on(window, null, 'gs-adopted', me.#onAdopted);\r\n  }\r\n\r\n  static {\r\n    this.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle rendered content cleanup (remove by default)\r\n * Set \"keep\" to the component to prevent rendered content removal.\r\n */\r\nexport class ContentController {\r\n\r\n  #host;\r\n  #ref;\r\n  #refs = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#removeContent();\r\n    me.#host = null;\r\n    me.#refs = null;\r\n    me.#ref = null;\r\n  }\r\n\r\n  hostUpdated() {\r\n    const me = this;\r\n    if (!me.#isSelf()) me.#refs.add(me.#target);\r\n  }\r\n\r\n  get contentRef() {\r\n    return this.#ref;\r\n  }\r\n\r\n  get #options() {\r\n    return this.#host?.renderOptions;\r\n  }\r\n\r\n  get #target() {\r\n    return this.#options?.renderBefore?.previousElementSibling;\r\n  }\r\n\r\n  #isSelf() {\r\n    const me = this;\r\n    const target = me.#target;\r\n    const root = me.#host?.renderRoot;\r\n    const shadow = me.#host?.shadowRoot;\r\n    return (target === shadow || target == root);\r\n  }\r\n\r\n  #removeContent() {\r\n    const me = this;\r\n    if (!me.#host?.keep) {\r\n      Array.from(me.#refs).forEach(el => el?.remove());\r\n      me.#refs.clear();\r\n    }\r\n  }\r\n}  ","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplateCache class\r\n * @module templating/GSTemplateCache\r\n */\r\n\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSLoader } from \"./GSLoader.mjs\";\r\nimport { GSLog } from \"./GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport class GSTemplateCache {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {String} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis.#store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {String} name Name of a template\r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this.#store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this.#store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {String} name \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {String} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {String} tpl \r\n\t * @returns {Boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(tpl);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(tpl);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSTemplateCache;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {Boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {String} name Template name\r\n\t * @param {String} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSTemplateCache;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\treturn document.getElementById(tpl.slice(1));\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSLog } from \"./GSLog.mjs\";\r\nimport { GSDOM } from \"./GSDOM.mjs\";\r\nimport { GSAttr } from \"./GSAttr.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\nimport { GSEvents } from \"./GSEvents.mjs\";\r\nimport { GSFunction } from \"./GSFunction.mjs\";\r\nimport { GSTemplateCache } from \"./GSTemplateCache.mjs\";\r\n\r\n/**\r\n * A module GSAttributeHandler GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used for meta linking between UI elements\r\n * \r\n * Attributes handled:\r\n * - data-gs-attribute - togle element attribute (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-action - trigger action event\r\n * - data-gs-anchor - where to anchor injected html (self, beforebegin, afterbegin, etc.)\r\n * - data-gs-call - calls a function on a given target (multipel functions supported)\r\n * - data-gs-exec - execute a function (alternative to the call)\r\n * - data-gs-inject - inject HTML content; used for WebComponent append\r\n * - data-gs-property - togle element property (receive k=v;k1=v1 or JSON format)\r\n * - data-gs-swap - swap HTML content; used for WebComponent replacement\r\n * - data-gs-target - CSS query for a target or targets\r\n * - data-gs-template - template to load and inject template\r\n * - data-gs-timeout - a timeout between class toggle\r\n * - data-gs-toggle - toggle CSS classes on a given target\r\n * - data-gs-trigger - triggers an event on a given target\r\n * - data-gs-value - value to pass to a gs-call or gs-trigger\r\n *\r\n * NOTE: data-gs-swap and gs-inject uses data-gs-anchor to determine \r\n * where to inject html. If not, set, innerHTML is used\r\n * @class\r\n */\r\nexport class GSAttributeHandler {\r\n\r\n    static #reverse = Symbol();\r\n    static #link = Symbol();\r\n\r\n    static DEFINITION = {\r\n        action: { attribute: 'data-gs-action' },\r\n        anchor: { attribute: 'data-gs-anchor' },\r\n        attribute: { attribute: 'data-gs-attribute' },\r\n        call: { attribute: 'data-gs-call' },\r\n        exec: { attribute: 'data-gs-exec' },\r\n        inject: { attribute: 'data-gs-inject' },\r\n        property: { attribute: 'data-gs-property' },\r\n        swap: { attribute: 'data-gs-swap' },\r\n        target: { attribute: 'data-gs-target' },\r\n        template: { attribute: 'data-gs-template' },\r\n        toggle: { attribute: 'data-gs-toggle' },\r\n        trigger: { attribute: 'data-gs-trigger' },\r\n        value: { attribute: 'data-gs-value' },\r\n\r\n        calls: { attribute: 'data-gs-call', multi: true },\r\n        toggles: { attribute: 'data-gs-toggle', multi: true },\r\n        timeout: { attribute: 'data-gs-timeout', type: Number },\r\n        triggers: { attribute: 'data-gs-trigger', multi: true },\r\n    }\r\n\r\n    #host;\r\n    #proxy;\r\n    #active = false;\r\n    #callback;\r\n\r\n    constructor(el) {\r\n        const me = this;\r\n        me.#host = el;\r\n        me.#callback = me.handle.bind(me);\r\n        me.#proxy = GSAttributeHandler.proxify(me.#host);\r\n    }\r\n\r\n    handle(e) {\r\n        const me = this;\r\n        me.targets.forEach(el => me.#handleTarget(me.#host, el, e));\r\n    }\r\n\r\n    #handleTarget(host, target, evt) {\r\n        const me = this;\r\n        me.#handleBinding(target, evt);\r\n        me.#handleAction(target);\r\n        me.#handleAttribute(target);\r\n        me.#handleProperty(target);\r\n        me.#handleToggle(target);\r\n        me.#handleTrigger(target, evt);\r\n        me.#handleCall(host, target, evt);\r\n        me.#handleExec(host, target, evt);\r\n        me.#handleSwap(target);\r\n        me.#handleInject(host, target);\r\n        me.#handleTemplate(host, target);\r\n    }\r\n\r\n    #handleBinding(target, evt) {\r\n        const source = evt.target.field || evt.target.form || evt.target;\r\n        const isForm = source instanceof HTMLFormElement;\r\n        const isField = GSDOM.isFormElement(source);\r\n        if (isField) {\r\n            target[source.name] = GSDOM.getValue(source);\r\n        } else {\r\n            Object.assign(target, GSDOM.toObject(source));\r\n        }\r\n        if (!(isField || isForm)) return;\r\n    }\r\n\r\n    #handleAction(target) {\r\n        const me = this;\r\n        GSEvents.send(target, 'action', me.action);\r\n    }\r\n\r\n    #handleAttribute(target) {\r\n        const me = this;\r\n        if (me.isAttributeJSON) {\r\n            const obj = GSUtil.toJson(me.attribute);\r\n            return GSAttr.jsonToAttr(target, obj);\r\n        }\r\n        const attrs = me.attributes;\r\n        attrs.forEach(v => me.#toggleAttribute(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #handleProperty(target) {\r\n        const me = this;\r\n        if (me.isPropertyJSON) {\r\n            const obj = GSUtil.toJson(me.property);\r\n            return Object.assign(target, obj);\r\n        }\r\n        const props = me.properties;\r\n        props.forEach(v => me.#toggleProperty(target, v[0], me.value || v[1]));\r\n    }\r\n\r\n    #toggleAttribute(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            return GSAttr.toggle(target, name, !target[name]);\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            value = GSUtil.asNum(value);\r\n        }\r\n        GSAttr.set(target, name, value);\r\n    }\r\n\r\n    #toggleProperty(target, name, value) {\r\n        if (GSUtil.isBool(target[name])) {\r\n            if (GSUtil.isStringEmpty(value)) {\r\n                target[name] = !target[name];\r\n            } else {\r\n                target[name] = GSUtil.asBool(value);\r\n            }\r\n        } else if (GSUtil.isNumber(target[name])) {\r\n            target[name] = GSUtil.asNum(value);\r\n        } else {\r\n            target[name] = value;\r\n        }\r\n    }\r\n\r\n    async #handleToggle(target) {\r\n        const me = this;\r\n        const tout = me.timeout * 1000;\r\n        let toggles = me.toggles;\r\n        if (tout === 0) {\r\n            toggles.forEach(v => GSDOM.toggleClass(target, v));\r\n        } else {\r\n            if (target[me.#symbol]) toggles = toggles.reverse();\r\n            for (const v of toggles) {\r\n                await GSUtil.timeout(tout);\r\n                GSDOM.toggleClass(target, v);\r\n            }\r\n            target[me.#symbol] = !target[me.#symbol];\r\n        }\r\n    }\r\n\r\n    #handleCall(host, target, evt) {\r\n        const val = GSUtil.isJsonString(host.value) ? GSUtil.toJson(host.value) : host.value;\r\n        this.calls.forEach(v => GSFunction.callFunction(target[v], target, true, val || evt));\r\n    }\r\n\r\n    #handleExec(host, target, evt) {\r\n        if (!this.exec) return;\r\n        try {\r\n            new Function(this.exec).bind(target)();\r\n        } catch (e) {\r\n            GSLog.error(target, e);\r\n        }\r\n    }\r\n\r\n    #handleTrigger(target, evt) {\r\n        this.triggers.forEach(v => GSEvents.send(target, v, evt));\r\n    }\r\n\r\n    #handleInject(host, target) {\r\n        if (this.inject) {\r\n            const content = GSDOM.parse(this.inject, true);\r\n            this.#applyContent(host, target, content);\r\n        }\r\n    }\r\n\r\n    #handleSwap(target) {\r\n        if (this.swap) target.innerHTML = this.swap;\r\n    }\r\n\r\n    async #handleTemplate(host, target) {\r\n        const tpl = await GSTemplateCache.loadTemplate(true, this.template, this.template);\r\n        this.#applyTemplate(host, target, tpl);\r\n    }\r\n\r\n    #applyTemplate(host, target, template) {\r\n        const content = GSTemplateCache.clone(template);\r\n        this.#applyContent(host, target, content);\r\n    }\r\n\r\n    #applyContent(host, target, content) {\r\n        if (host.anchor) {\r\n            GSDOM.insertAdjacent(target, content, host.anchor);\r\n        } else {\r\n            GSDOM.appendChild(target, content);\r\n        }\r\n    }\r\n\r\n    attach(name = 'click') {\r\n        const me = this;\r\n        if (!me.#active) {\r\n            GSEvents.on(me.#host, null, name, me.#callback);\r\n            me.#active = true;\r\n        }\r\n    }\r\n\r\n    deattach(name = 'click') {\r\n        //GSEvents.deattachListeners(this.#host);\r\n        const me = this;\r\n        GSEvents.off(me.#host, null, name, me.#callback);\r\n        me.#active = false;\r\n    }\r\n\r\n    get #symbol() {\r\n        return GSAttributeHandler.#reverse;\r\n    }\r\n\r\n    get targets() {\r\n        const me = this;\r\n        switch (me.target) {\r\n            case 'this':\r\n            case 'self':\r\n                return [me.#host];\r\n            case 'owner':\r\n                return [GSDOM.root(me.#host)];\r\n            case 'parent':\r\n                return [me.#host.parentElement];\r\n        }\r\n        return GSDOM.queryAll(document.body, me.target, false, true) || [me.#host];\r\n    }\r\n\r\n    get host() { return this.#host; }\r\n\r\n    get action() { return this.#proxy.action; }\r\n    get anchor() { return this.#proxy.anchor; }\r\n    get attribute() { return this.#proxy.attribute; }\r\n    get exec() { return this.#proxy.exec; }\r\n    get call() { return this.#proxy.call; }\r\n    get inject() { return this.#proxy.inject; }\r\n    get property() { return this.#proxy.property; }\r\n    get swap() { return this.#proxy.swap; }\r\n    get target() { return this.#proxy.target; }\r\n    get toggle() { return this.#proxy.toggle; }\r\n    get trigger() { return this.#proxy.trigger; }\r\n    get timeout() { return this.#proxy.timeout; }\r\n    get template() { return this.#proxy.template; }\r\n    get value() { return this.#proxy.value; }\r\n\r\n    get calls() { return this.#proxy.calls; }\r\n    get toggles() { return this.#proxy.toggles; }\r\n    get triggers() { return this.#proxy.triggers; }\r\n\r\n    get attributes() {\r\n        const val = this.#proxy.attribute || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get properties() {\r\n        const val = this.#proxy.property || '';\r\n        return val.split(/[,;]/g).map(v => v.split('=')).filter(v => GSUtil.isStringNonEmpty(v));\r\n    }\r\n\r\n    get isPropertyJSON() {\r\n        return GSUtil.isJson(this.property);\r\n    }\r\n\r\n    get isAttributeJSON() {\r\n        return GSUtil.isJson(this.attribute);\r\n    }\r\n\r\n    static proxify(el) {\r\n        return GSAttr.proxify(el, GSAttributeHandler.DEFINITION);\r\n    }\r\n\r\n    static process(el, e) {\r\n        if (!el?.hasAttribute('gs-target')) return;\r\n        let me = el[GSAttributeHandler.#link];\r\n        if (!(me instanceof GSAttributeHandler)) {\r\n            me = new GSAttributeHandler(el);\r\n            el[GSAttributeHandler.#link] = me;\r\n        }\r\n        me.handle(e);\r\n    }\r\n\r\n    static create(el) {\r\n        const me = new GSAttributeHandler(el);\r\n        me.attach();\r\n        return me;\r\n    }\r\n\r\n    /**\r\n     * Clone element attributes (GS-ITEM to real WebComponent)\r\n     * @param {HTMLElement} from \r\n     * @param {HTMLElement} to \r\n     */\r\n    static clone(from, to) {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def)\r\n            .filter(o => from.hasAttribute(o.attribute))\r\n            .forEach(o => to.setAttribute(o.attribute, from.getAttribute(o.attribute)));\r\n    }\r\n\r\n    static {\r\n        const def = GSAttributeHandler.DEFINITION;\r\n        Object.values(def).forEach(o => Object.freeze(o));\r\n        Object.freeze(def);\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSAttributeHandler } from \"../base/GSAttributeHandler.mjs\";\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Attributes to control click actions for buttons and links.\r\n * Used to brings meta linking between UI elements\r\n */\r\nexport class AttributeController extends GSAttributeHandler {\r\n\r\n  constructor(host) {\r\n    super(host);\r\n    const me = this;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.attach(me.#eventName);\r\n    // me.host.on('notify', e => me.onNotify(e));\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.host.removeController(me);\r\n    me.deattach(me.#eventName);\r\n  }\r\n\r\n  onNotify(evt) {\r\n    const me = this;\r\n    me.handle(evt);\r\n  }\r\n\r\n  get #eventName() {\r\n    const tag = this.host?.tagName.toLowerCase();\r\n    const clazz = this.host?.clazzName;\r\n    const isFormEl = GSDOM.isFormElement(this.host);\r\n    const v1 = ['gs-form', 'gs form-group'].includes(tag);\r\n    const v2 = ['GSFormGroupElement'].includes(clazz);\r\n    return v1 || v2 || isFormEl ? 'change' : 'click';\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class LocalizationController {\r\n\r\n  #host;\r\n  #locale;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#locale = host.locale;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    LocalizationController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    LocalizationController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#locale !== me.#host?.locale) {\r\n      me.#locale === me.#host?.locale;\r\n      me.updateLanguage(me.#locale);\r\n    }\r\n  }\r\n\r\n  updateLanguageExt(langauge) {\r\n    if (!this.#locale) this.updateLanguage(langauge);\r\n  }\r\n\r\n  updateLanguage(lang) {\r\n    if (!lang) return;\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onLanguage(e) {\r\n    const me = LocalizationController;\r\n    me.#controllers.forEach(c => c.updateLanguageExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-language', LocalizationController.#onLanguage);\r\n  }\r\n\r\n  static {\r\n    LocalizationController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Handle screen orientation events.\r\n * Trigger rerender to optionally hide element if \r\n * screen orientation is not supported\r\n */\r\nexport class OrientationController {\r\n\r\n    static #hosts = new Set();\r\n    #host;\r\n    \r\n    constructor(host) {\r\n      this.#host = host;\r\n      host.addController(this);\r\n    }\r\n    \r\n    hostConnected() {\r\n      OrientationController.#hosts.add(this);\r\n      this.update();\r\n    }\r\n    \r\n    hostDisconnected() {\r\n      const me = this;\r\n      OrientationController.#hosts.delete(me.#host);\r\n      me.#host.removeController(me);      \r\n      me.#host = null;\r\n    }\r\n\r\n    update() {\r\n      this.#host.requestUpdate();\r\n    }\r\n\r\n    static #onOrientation(e) {\r\n      Array.from(OrientationController.#hosts).forEach(h => h.update());\r\n    }\r\n    \r\n    static {\r\n      screen.orientation.addEventListener('change', OrientationController.#onOrientation);\r\n    }\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSTemplateCache } from \"../base/GSTemplateCache.mjs\";\r\n\r\n/**\r\n * Handle element template and signal rerender when ready\r\n * Sequencial template load is used to prevent multiple request for the same URL\r\n */\r\nexport class TemplateController {\r\n\r\n  #host;\r\n  #template;\r\n  #lastRef;\r\n  #injected;\r\n\r\n  static #scheduled = false;\r\n  static #tasks = new Set();\r\n\r\n  constructor(host) {\r\n    this.#host = host;\r\n    host.addController(this);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#injected = false;\r\n    me.#request();    \r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#host.removeController(me);\r\n    me.#host = null;\r\n    me.#lastRef = null;\r\n    me.#template = null;\r\n  }\r\n\r\n  hostUpdate() {\r\n    this.#request();\r\n  }\r\n\r\n  requestUpdate() {\r\n    this.#host.requestUpdate();\r\n  }\r\n\r\n  hostUpdated() {\r\n    if (this.#injected) this.#host.templateInjected?.();\r\n  }\r\n\r\n  #request() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (me.#lastRef !== ref) {\r\n      me.#lastRef = ref;\r\n      if (ref) TemplateController.#schedule(this);\r\n    }\r\n  }\r\n\r\n  async #load() {\r\n    const me = this;\r\n    const ref = me.templateRef;\r\n    if (!ref) return;\r\n    const isTplEl = ref instanceof HTMLTemplateElement;\r\n    const template = isTplEl ? ref : await GSTemplateCache.loadTemplate(true, ref, ref);\r\n    if (template) {\r\n      me.#template = template;\r\n      me.#injected = true;\r\n      me.#host.requestUpdate();\r\n    }\r\n  }\r\n\r\n  get isTemplateElement() {\r\n    return this.#host?.tagName === 'GS-TEMPLATE';\r\n  }\r\n\r\n  get template() {\r\n    return this.#template;\r\n  }\r\n\r\n  get templateRef() {\r\n    const host = this.#host;\r\n    if (!host) return;\r\n    if(this.isTemplateElement) return host.url;\r\n    return host.template || host.query('template', false);\r\n  }\r\n\r\n  static async #process(tasks) {\r\n    await GSUtil.timeout(100);\r\n    const list = Array.from(tasks);\r\n    for (let item of list) {\r\n      await item.#load();\r\n      tasks.delete(item);\r\n    }\r\n  }\r\n\r\n  static #schedule(task) {\r\n    const me = TemplateController;\r\n    me.#tasks.add(task);\r\n    if (!me.#scheduled) {\r\n      me.#scheduled = true;\r\n      queueMicrotask(() => me.#process(me.#tasks).finally(me.#scheduled = false));\r\n    }\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport class OrientationTypes {\r\n\r\n    static values =  ['', 'horizontal', 'vertical', 'portrait', 'landscape'];\r\n\r\n    static includes(val) {\r\n        return OrientationTypes.values.includes(val);\r\n    }\r\n\r\n    static isVertical(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 2 || idx === 3;\r\n    }\r\n\r\n    static isHorizontal(val) {\r\n        const idx = OrientationTypes.values.indexOf(val)\r\n        return idx === 1 || idx === 4;\r\n    }\r\n\r\n}\r\n\r\nexport const orientation = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && OrientationTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const ProtocolTypes = ['', 'http', 'https'];\r\n\r\nexport const protocol = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && ProtocolTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const EnvironmentTypes = ['', 'dektop', 'mobile', 'tablet', 'android', 'linux', 'windows', 'macos', 'ios'];\r\n\r\nexport const environment = {\r\n    hasChanged(newVal, oldVal) {\r\n        return newVal !== oldVal && EnvironmentTypes.includes(newVal);\r\n    }\r\n\r\n};","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\nimport { GSAttr } from '../base/GSAttr.mjs';\r\nimport { GSEvents } from '../base/GSEvents.mjs';\r\n\r\n/**\r\n * Listens for theme change and update component to apply new theme.\r\n * External theme changes only if component theme is not set.\r\n * Bootstrap uses CSS selector for theme in form of attribute value [data-bs-theme=\"***\"]\r\n * Compoennt and all first level childern in shadow dom are updated\r\n */\r\nexport class ThemeController {\r\n\r\n  #host;\r\n  #theme;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#theme = host.theme;\r\n    host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    ThemeController.#controllers.add(this);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    ThemeController.#controllers.delete(me);\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  hostUpdate() {\r\n    const me = this;\r\n    if (me.#theme !== me.#host?.theme) {\r\n      me.#theme === me.#host?.theme;\r\n      me.updateTheme(me.#theme);\r\n    }\r\n  }\r\n\r\n  updateThemeExt(theme) {\r\n    if (!this.#theme) this.updateTheme(theme);\r\n  }\r\n\r\n  updateTheme(theme) {\r\n    if (!theme) return;\r\n    const me = this;\r\n    GSAttr.set(me.#host, 'data-bs-theme', theme);\r\n    const children = me.#host?.renderRoot?.children || [];\r\n    Array.from(children).forEach(el => GSAttr.set(el, 'data-bs-theme', theme));\r\n  }\r\n\r\n  static #controllers = new Set();\r\n\r\n  static #onTheme(e) {\r\n    const me = ThemeController;\r\n    me.#controllers.forEach(c => c.updateThemeExt(e.detail));\r\n  }\r\n\r\n  static #init() {\r\n    GSEvents.on(window, null, 'gs-theme', ThemeController.#onTheme);\r\n  }\r\n\r\n  static {\r\n    ThemeController.#init();\r\n  }\r\n\r\n}  \r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nexport const notEmpty = (newVal, oldVal) => newVal !== oldVal && newVal;\r\nexport const numGT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) > 0;\r\nexport const numGE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) >= 0;\r\nexport const numLT0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) < 0;\r\nexport const numLE0 = (newVal, oldVal) => newVal !== oldVal && Number(newVal) <= 0;\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSPromise } from \"./GSPromise.mjs\";\r\nimport { GSUtil } from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Class extending native event with additional features\r\n * @Class\r\n */\r\nexport class GSEvent extends EventTarget {\r\n\r\n    #listeners = new Set();\r\n\r\n    #list(type = '', listener) {\r\n        const me = this;\r\n        const list = Array.from(me.#listeners);\r\n        return me.#isFunction(listener) ?\r\n            list.filter(o => o.type === type && o.listener === listener)\r\n            :\r\n            list.filter(o => o.type === type);\r\n    }\r\n\r\n    #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    on(type = '', listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        let controller = null;\r\n        if (abortable instanceof AbortController) {\r\n            controller = abortable;\r\n        } else {\r\n            controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        const signal = controller || timeout == 0 ? controller?.signal : AbortSignal.timeout(timeout);\r\n        this.addEventListener(type, listener, { signal: signal });\r\n        return controller || signal;\r\n    }\r\n\r\n    /**\r\n     * Listen for events only once\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     * @param {Number} timeout It event timeout set, return AbortSignal\r\n     * @param {boolean|AbortController} abortable If abortable set, return AbortController\r\n     */\r\n    once(type, listener, timeout = 0, abortable = false) {\r\n        if (!type) return reject('Event undefined!');\r\n        const me = this;\r\n        const wrap = (e) => {\r\n            listener(e);\r\n            me.#listeners.delete(wrap);\r\n        }\r\n        wrap.type = type;\r\n        wrap.listener = listener;\r\n        wrap.timeout = timeout;\r\n        if (abortable instanceof AbortController) {\r\n            wrap.controller = abortable;\r\n        } else {\r\n            wrap.controller = abortable ? new GSAbortController(timeout) : null;\r\n        }\r\n        wrap.signal = wrap.controller || timeout == 0 ? wrap.controller?.signal : AbortSignal.timeout(timeout);\r\n        me.addEventListener(type, wrap, { once: true, signal: wrap.signal });\r\n        return wrap.controller || wrap.signal;\r\n    }\r\n\r\n    /**\r\n     * Stop listening for events\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Function} listener  Callback to be called on event trigger\r\n     */\r\n    off(type = '', listener) {\r\n        this.removeEventListener(type, listener);\r\n    }\r\n\r\n    /**\r\n     * Send event to listeners\r\n     * \r\n     * @param {String} type Event name to be listened\r\n     * @param {Object} data  Data to send \r\n     * @param {Number} delayed Emit event delay in miliseconds\r\n     */\r\n    emit(type = '', data, delayed = 0) {\r\n        const me = this;\r\n        if (delayed === true) {\r\n            return queueMicrotask(() => me.#send(type, data));\r\n        }\r\n        delayed = GSUtil.asNum(delayed, 0);\r\n        if (delayed <= 0) return me.#send(type, data);\r\n        return setTimeout(() => me.#send(type, data), delayed);\r\n    }\r\n\r\n    #send(type = '', data) {\r\n        const evt = new CustomEvent(type, { detail: data });\r\n        return this.dispatchEvent(evt);\r\n    }\r\n\r\n    /**\r\n     * Wait for an event using GSPromise wrapper\r\n     * @param {String} type Event name to be listened\r\n     * @param {AbortSignal} signal Used to abort listener\r\n     * @returns {Event}\r\n    */\r\n    wait(type = '', signal) {\r\n        const me = this;\r\n        const callback = (resolve, reject) => {\r\n            me.once(type, resolve);\r\n        }\r\n        return new GSPromise(callback, signal).await();\r\n    }\r\n\r\n    listen(type, listener) { this.on(type, listener); }\r\n    unlisten(type, listener) { this.off(type, listener); }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     */\r\n    unbind() {\r\n        const me = this;\r\n        Array.from(me.#listeners).forEach(o => {\r\n            super.removeEventListener(o.type, o.listener);\r\n        });\r\n        me.#listeners.clear();\r\n    }\r\n\r\n    addEventListener(type, listener, opt) {\r\n        const me = this;\r\n        if (!me.#isFunction(listener)) return false;\r\n        me.#listeners.add({ type: type, listener: listener });\r\n        return super.addEventListener(type, listener, opt);\r\n    }\r\n\r\n    removeEventListener(type, listener) {\r\n        const me = this;\r\n        const list = me.#list(type, listener);\r\n        list.forEach(o => super.removeEventListener(o.type, o.listener))\r\n        list.forEach(o => me.#listeners.delete(o));\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSEvent);\r\n        globalThis.GSEvent = GSEvent;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSEvent } from \"../base/GSEvent.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSReadWriteRegistry class\r\n * @module base/GSEvent\r\n */\r\n\r\n/**\r\n * Global registry for GSAbstractReadWrite instances - data read/write \r\n * @Class\r\n */\r\nclass GSReadWriteRegistryImpl extends GSEvent {\r\n\r\n    static #instance = null;\r\n    static #INTERNAL = Symbol();\r\n\r\n    #handlers = new Map();\r\n\r\n    #map = new Map();\r\n\r\n    constructor(key) {\r\n        if (key != GSReadWriteRegistryImpl.#INTERNAL) throw new Error('Creating new instance not allowed.');\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * Register data handler\r\n     * @param {string} type unique handler name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */\r\n    addHandler(type, clazz) {        \r\n        this.#handlers.set(type, clazz);\r\n    }\r\n\r\n    /**\r\n     * Unregister data handler\r\n     * @param {string} type unique handler name\r\n     */\r\n    removeHandler(type) {        \r\n        this.#handlers.delete(type);\r\n    }\r\n\r\n    /**\r\n     * Get registered handler by name\r\n     * @param {string} type unique handler name\r\n     */    \r\n    getHandler(type) {\r\n        return this.#handlers.get(type);\r\n    }\r\n\r\n    /**\r\n     * Initialize data handler instance\r\n     * @param {string} type unique handler name\r\n     * @param {string} name unique instance name\r\n     * @param {GSReadWriteRegistry} clazz \r\n     */    \r\n    newHandler(type, name, enabled) {\r\n        const clazz = this.getHandler(type);\r\n        return clazz ? new clazz(name, enabled) : undefined;\r\n    }\r\n\r\n    /**\r\n     * Register GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     */\r\n    register(obj) {\r\n        const me = this;\r\n        me.#verify(obj);\r\n        const cache = me.find(obj.id);\r\n        if (cache == obj) return;\r\n        if (cache) throw new Error(`Key (${obj.id}) already exist in read/write registry!`);\r\n        me.#map.set(obj.id, obj);\r\n        me.emit(`register-${obj.id}`, obj);\r\n        me.emit(`register`, obj);\r\n    }\r\n\r\n    /**\r\n     * Unregister GSAbstractReadWrite instance or inherited classes\r\n     * @param {GSAbstractReadWrite} obj \r\n     * @returns {boolean} Deletion status\r\n     */\r\n    unregister(obj) {\r\n        const me = this;\r\n        if (GSUtil.isString(obj)) obj = me.find(obj);\r\n        me.#verify(obj);\r\n        const sts = me.#map.delete(obj.id);\r\n        if (sts) {\r\n            me.emit(`unregister-${obj.id}`, obj);\r\n            me.emit(`unregister`, obj);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Find registered handler\r\n     * @param {string} val \r\n     * @returns \r\n     */\r\n    find(val) {\r\n        return this.#map.get(val);\r\n    }\r\n\r\n    /**\r\n     * Wait for specific habdler to be either registered or unregistered\r\n     * @param {string} id \r\n     * @param {number|AbortSignal} signal Cancelation in timeout or provided signal\r\n     * @param {boolean} register Listen for register or unregister\r\n     * @returns \r\n     */\r\n    async wait(id = '', signal, register = true) {\r\n        if (!id) throw new Error('GSReadWrite ID not valid.');\r\n        const me = this;\r\n        if (register) {\r\n            const rw = me.find(id);\r\n            if (rw) return rw;\r\n        }\r\n        const type = register ? 'register' : 'unregister';\r\n        await super.wait(`${type}-${id}`, signal);\r\n        return me.find(id);\r\n    }\r\n\r\n    #verify(obj) {\r\n        //if (!(obj instanceof GSAbstractReadWrite)) throw new Error('Invalid parameter type.');\r\n    }\r\n\r\n    static get #self() {\r\n        if (!GSReadWriteRegistryImpl.#instance) GSReadWriteRegistryImpl.#instance = new GSReadWriteRegistryImpl(GSReadWriteRegistryImpl.#INTERNAL);\r\n        return GSReadWriteRegistryImpl.#instance;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSReadWriteRegistryImpl);\r\n        globalThis.GSReadWriteRegistry = GSReadWriteRegistryImpl.#self;\r\n    }\r\n\r\n}\r\n\r\nexport const GSReadWriteRegistry = globalThis.GSReadWriteRegistry;\r\n\r\n","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { GSDOM } from \"../base/GSDOM.mjs\";\r\nimport { GSLog } from \"../base/GSLog.mjs\";\r\nimport { GSUtil } from \"../base/GSUtil.mjs\";\r\nimport { GSReadWriteRegistry } from \"../data/ReadWriteRegistry.mjs\";\r\n\r\n/**\r\n * Controller between component and DataReadWrite.\r\n */\r\nexport class DataController {\r\n\r\n  #host;\r\n\r\n  #readCallback;\r\n  #writeCallback;\r\n  #errorCallback;\r\n\r\n  constructor(host) {\r\n    const me = this;\r\n    me.#host = host;\r\n    me.#readCallback = me.#onRead.bind(me);\r\n    me.#writeCallback = me.#onWrite.bind(me);\r\n    me.#errorCallback = me.#onError.bind(me);\r\n    me.#host.addController(me);\r\n  }\r\n\r\n  hostConnected() {\r\n    const me = this;\r\n    me.#listen(false);\r\n  }\r\n\r\n  hostDisconnected() {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#host.removeController(me);\r\n  }\r\n\r\n  async relink(read = true) {\r\n    const me = this;\r\n    me.#unlisten();\r\n    me.#listen(read);\r\n  }\r\n\r\n  async read(obj) {\r\n    return this.store?.read(this.#host);\r\n  }\r\n\r\n  async write(obj) {\r\n    return this.store?.write(this.#host, obj);\r\n  }\r\n\r\n  async storage() {\r\n    return GSReadWriteRegistry.wait(this.storeID);\r\n  }\r\n\r\n  sort(val) {\r\n    if (!this.store) return;\r\n    this.store.sort = val;\r\n    return this.store.read();\r\n  } \r\n\r\n  filter(val) {\r\n    if (!this.store) return;\r\n    this.store.filter = val;\r\n    return this.store.read();\r\n  }\r\n\r\n  search(val) {\r\n    if (!this.store) return;\r\n    this.store.search = val;\r\n  }\r\n\r\n  get store() {\r\n    return GSReadWriteRegistry.find(this.storeID);\r\n  }\r\n\r\n  get storeID() {\r\n    return this.#host?.storage;\r\n  }\r\n\r\n  firstPage() {\r\n    this.page = 1;\r\n  }\r\n\r\n  lastPage() {\r\n    this.nextPage();\r\n  }\r\n\r\n  nextPage() {\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  prevPage() {\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  get page() {\r\n    const store = this.store;\r\n    return store ? Math.floor(store.skip / Math.max(store.limit, 1)) + 1 : 1;\r\n  }\r\n\r\n  set page(val) {\r\n    val = Math.max(1, GSUtil.asNum(val, 1));    \r\n    const store = this.store;\r\n    if (store) {\r\n      store.skip = val > 0 ? (store.limit * val) - store.limit : 0;\r\n      store.read(this.#host);\r\n    }\r\n  }\r\n\r\n  async #listen(read = true) {\r\n    const me = this;\r\n    const storage = await me.storage();\r\n    storage?.on('read', me.#readCallback);\r\n    storage?.on('write', me.#writeCallback);\r\n    storage?.on('error', me.#errorCallback);\r\n    if (read) storage.read(me.#host);\r\n  }\r\n\r\n  #unlisten() {\r\n    const me = this;\r\n    const storage = me.store;\r\n    storage?.off('read', me.#readCallback);\r\n    storage?.off('write', me.#writeCallback);\r\n    storage?.off('error', me.#errorCallback);\r\n  }\r\n\r\n  #onRead(e) {\r\n    const me = this;\r\n    me.#host.onDataRead?.(e.detail.data);\r\n    me.#notify('data-read', e.detail.data);\r\n  }\r\n\r\n  #onWrite(e) {\r\n    const me = this;\r\n    me.#host.onDataWrite?.(e.detail.data);\r\n    me.#notify('data-write', e.detail.data);\r\n  }\r\n\r\n  #onError(e) {\r\n    const me = this;\r\n    GSLog.error(me.#host, e);\r\n    me.#host.onDataError?.(e);\r\n    me.#notify('data-error', e.detail.data);\r\n  }\r\n\r\n  #notify(name, data) {\r\n    this.#host.emit(name, data, true, false, true);\r\n  }\r\n\r\n}  ","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { templateContent, noChange, LitElement } from './lib.mjs';\r\n\r\nimport { GSEvents } from './base/GSEvents.mjs';\r\nimport { GSEnvironment } from './base/GSEnvironment.mjs';\r\nimport { GSFunction } from './base/GSFunction.mjs';\r\nimport { GSLocalization } from './base/GSLocalization.mjs';\r\nimport { AdoptedController } from './controllers/AdoptedController.mjs';\r\nimport { ContentController } from './controllers/ContentController.mjs';\r\nimport { AttributeController } from './controllers/AttributeController.mjs';\r\nimport { LocalizationController } from './controllers/LocalizationController.mjs';\r\nimport { OrientationController } from './controllers/OrientationController.mjs';\r\nimport { TemplateController } from './controllers/TemplateController.mjs';\r\nimport { orientation } from './properties/orientation.mjs';\r\nimport { protocol } from './properties/protocol.mjs';\r\nimport { environment } from './properties/environment.mjs';\r\nimport { ThemeController } from './controllers/ThemeController.mjs';\r\nimport { notEmpty } from './properties/verificator.mjs';\r\nimport { DataController } from './controllers/DataController.mjs';\r\nimport { GSDOM } from './base/GSDOM.mjs';\r\nimport { GSData } from './base/GSData.mjs';\r\nimport { GSUtil } from './base/GSUtil.mjs';\r\n\r\n/**\r\n * Main WebComponent used by all other GS-* components\r\n */\r\nexport class GSElement extends LitElement {\r\n\r\n  static properties = {\r\n    flat: { type: Boolean },\r\n    rtl: { type: Boolean, reflect: true },\r\n    hide: { type: Boolean, reflect: true },\r\n    padding: { type: Number },\r\n    margin: { type: Number },\r\n    rounded: { type: Boolean },\r\n    bordered: { type: Boolean },\r\n    shadow: { type: Boolean },\r\n    keep: { type: Boolean },\r\n\r\n    onready: {},\r\n    css: {},\r\n    theme: {},\r\n\r\n    os: {},\r\n    browser: {},\r\n    locale: { reflect: true, hasChanged: notEmpty },\r\n    environment: environment,\r\n    orientation: orientation,\r\n    protocol: protocol,\r\n\r\n    template: {}\r\n  }\r\n\r\n  #adopted;\r\n  #uiHandler;\r\n  #orientation;\r\n  #localization;\r\n  #dataController;\r\n  #themes\r\n  #template;\r\n  #content;\r\n\r\n  constructor() {\r\n    super();\r\n    const me = this;\r\n    me.css = '';\r\n    me.locale = \"\";\r\n    me.#adopted = new AdoptedController(me);\r\n    me.#content = new ContentController(me);\r\n    me.#localization = new LocalizationController(me);\r\n    me.#orientation = new OrientationController(me);\r\n    me.#template = new TemplateController(me);\r\n    me.#themes = new ThemeController(me);\r\n  }\r\n\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    super.attributeChangedCallback(name, oldValue, newValue);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    if (this.isBindable) this.binded();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    GSEvents.deattachListeners(this);\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element createRenderRoot function.\r\n   * If flat, do not create shadowDom, render within self\r\n   * @returns \r\n   */\r\n  createRenderRoot() {\r\n    return this.flat ? this : super.createRenderRoot();\r\n  }\r\n\r\n  /**\r\n   * Override Lit element firstUpdated function.\r\n   * Here we call attribute script onready if available\r\n   * Make sure that inherited classes calls super.firstUpdated\r\n   */\r\n  firstUpdated() {\r\n    super.firstUpdated();\r\n    const me = this;\r\n    if (me.onready) {\r\n      const owner = me.onready.startsWith('this') ? this : window;\r\n      GSFunction.callFunction(me.onready, owner);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element willUpdate function.\r\n   * Make sure that inherited classes calls super.willUpdate\r\n   * @param {*} changed \r\n   */\r\n  willUpdate(changed) {\r\n    const me = this;\r\n    if (changed.has('storage')) {\r\n      if (me.storage) {\r\n        if (!me.#dataController) {\r\n          me.#dataController = new DataController(me);\r\n        } else {\r\n          me.#dataController.relink();\r\n        }\r\n      } else {\r\n        me.#dataController?.hostDisconnected();\r\n        me.#dataController = undefined;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Override Lit element render function and control rendering\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  render() {\r\n    return this.isAllowRender && !this.hide ? this.renderUI() : '';\r\n  }\r\n\r\n  /**\r\n   * Actual render function to override in inherited components\r\n   * @returns {*} Parsed lit html structure\r\n   */\r\n  renderUI() {\r\n    return noChange;\r\n  }\r\n\r\n  /**\r\n   * Render html from provided template element or template url\r\n   * @returns {*}\r\n   */\r\n  renderTemplate() {\r\n    return this.templateRef ? templateContent(this.templateRef) : ''\r\n  }\r\n\r\n  /**\r\n   * Render this class css attributes.\r\n   * @returns {Object} JSON object with CSS properties\r\n   */\r\n  renderClass() {\r\n    const me = this;\r\n    const obj = {\r\n      'border': me.bordered,\r\n      'shadow-sm': me.shadow,\r\n      'rounded': me.rounded,\r\n      [`p-${me.padding}`]: me.padding >= 0,\r\n      [`m-${me.margin}`]: me.margin >= 0\r\n    };\r\n    return me.mapCSS(me.css, obj);\r\n  }\r\n\r\n  /**\r\n   * Attach bindings\r\n   */\r\n  binded() {\r\n    this.#uiHandler ??= new AttributeController(this);\r\n  }\r\n\r\n  /**\r\n   * Handle bindings \r\n   * @param {*} e \r\n   */\r\n  handle(e) {\r\n    this.#uiHandler?.handle(e);\r\n  }\r\n\r\n  /**\r\n   * Parse CSS string into JSON object\r\n   * @param {String} css CSS string to parse into JSON object\r\n   * @param {Object} obj JSON object to witch to add parsed CSS\r\n   * @returns {Object} css parsed JSON object \r\n   */\r\n  mapCSS(css, obj, flag = true) {\r\n    obj = obj || {};\r\n    (css || '').split(' ')\r\n      .map(v => v.trim())\r\n      .filter(v => v.length > 0)\r\n      .map(v => obj[v.trim()] = flag);\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Initialize dynamic style for component.\r\n   * Call it from constructor for style to be applied to the component\r\n   * Creates a dynamic StyleSheet which holds dynamic StyleRules for template elements\r\n   * @param {String} id \r\n   * @param {String|Object} value \r\n   * @returns {CSSStyleRule}\r\n   */\r\n  dynamicStyle(id, value) {\r\n    return this.#adopted.style(id, value);\r\n  }\r\n\r\n  /**\r\n   * Find element by its ID\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  getByID(query = '') {\r\n    return GSDOM.getByID(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find closest top element by CSS selector\r\n   * @param {String} query \r\n   * @returns {HTMLElement}\r\n   */\r\n  closest(query = '') {\r\n    return GSDOM.closest(this, query);\r\n  }\r\n\r\n  /**\r\n   * Find element by CSS selector (top level is this element)\r\n   * @param {String} name \r\n   * @returns {HTMLElement}\r\n   */\r\n  query(query = '', shadow = false) {\r\n    return GSDOM.query(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Find multiple elements by CSS selector (top level is this element)\r\n   * @param {String} query \r\n   * @returns {Array<HTMLElement>}\r\n   */\r\n  queryAll(query = '', shadow = false) {\r\n    return GSDOM.queryAll(this, query, false, shadow);\r\n  }\r\n\r\n  /**\r\n   * Generic component signal\r\n   * @param {Boolean} bubbles  Does buuble to upper nodes\r\n   * @param {Boolean} composed Does traverse from shadow DOM \r\n   */\r\n  notify(bubbles = true, composed = false, data) {\r\n    this.emit('notify', data, bubbles, composed, true);\r\n  }\r\n\r\n  /**\r\n   * Send event\r\n   * @param {String} name \r\n   * @param {Object} obj \r\n   * @param {Boolean} bubbles \r\n   * @param {Boolean} composed \r\n   * @param {Boolean} cancelable \r\n   */\r\n  emit(name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n    return GSEvents.send(this, name, obj, bubbles, composed, cancelable);\r\n  }\r\n\r\n  /**\r\n   * Wait for event to happen\r\n   * @async\r\n   * @param {String} name \r\n   * @returns {Promise}\r\n   */\r\n  waitEvent(name = '', timeout = 0) {\r\n    return GSEvents.wait(this, name, timeout);\r\n  }\r\n\r\n  /**\r\n   * Listen once for triggered event\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  once(name, func) {\r\n    return this.listen(name, func, true);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event listen\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  on(name, func, once = false) {\r\n    return this.listen(name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Alternative function for event unlisten\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  off(name, func) {\r\n    return this.unlisten(name, func);\r\n  }\r\n\r\n  /**\r\n   * Prevent event firing up the DOM tree\r\n   * @param {Event} e \r\n   */\r\n  prevent(e) {\r\n    GSEvents.prevent(e);\r\n  }\r\n\r\n  /**\r\n   * Attach event to this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  listen(name, func, once = false) {\r\n    return this.attachEvent(this, name, func, once);\r\n  }\r\n\r\n  /**\r\n   * Remove event from this element\r\n   * @param {String} name  A name of the event\r\n   * @param {Function} func A callback function on event trigger\r\n   * @returns {Boolean}\r\n   */\r\n  unlisten(name, func) {\r\n    return this.removeEvent(this, name, func);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener appender\r\n  * \r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @param {Boolean} once Listen only once\r\n  * @returns {Boolean} State if attachment was successful\r\n  */\r\n  attachEvent(el, name = '', fn, once = false) {\r\n    return GSEvents.attach(this, el, name, fn, once);\r\n  }\r\n\r\n  /**\r\n  * Generic event listener remove\r\n  * @param {HTMLElement} el Element on which to monitor for named events\r\n  * @param {String} name Event name to watch for\r\n  * @param {Function} fn Event trigger callback\r\n  * @returns {Boolean} State if attachment was successful\t\r\n  */\r\n  removeEvent(el, name = '', fn) {\r\n    return GSEvents.remove(this, el, name, fn);\r\n  }\r\n\r\n  /**\r\n   * Generic element hide function\r\n   */\r\n  toggle() {\r\n    this.hide = !this.hide;\r\n  }\r\n\r\n  translate(value) {\r\n    return GSLocalization.translate(this.locale, value);\r\n  }\r\n\r\n  get direction() {\r\n    if (GSUtil.isNull(this.rtl)) return undefined;\r\n    return this.rtl ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /**\r\n   * Check if component is bindable to process data-gs-atributes\r\n   */\r\n  get isBindable() {\r\n    return this.dataset.gsTarget;\r\n  }\r\n\r\n  /**\r\n   * Return true if current element or chadow dom child is focused\r\n   */\r\n  get isFocused() {\r\n    return this === document.activeElement;\r\n  }\r\n\r\n  /**\r\n   * Element tag name\r\n   */\r\n  get tag() {\r\n    return this.tagName.toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * Reference to cached template if set\r\n   */\r\n  get templateRef() {\r\n    return this.#template.template;\r\n  }\r\n\r\n  /**\r\n   * Reference to rendered content\r\n   */\r\n  get contentRef() {\r\n    return this.#content.contentRef;\r\n  }\r\n\r\n  /**\r\n   * Reference to data controller if initialized\r\n   */\r\n  get dataController() {\r\n    return this.#dataController;\r\n  }\r\n\r\n  /**\r\n  * Check if element is allowed to be rendered\r\n  * @returns {Boolean} \r\n  */\r\n  get isAllowRender() {\r\n    return this.isValidEnvironment\r\n      && this.isValidBrowser\r\n      && this.isValidOS\r\n      && this.isValidProtocol\r\n      && this.isValidOrientation;\r\n  }\r\n\r\n  /**\r\n   * Returns if environment matched\r\n   * dektop, mobile, tablet, android, linux, winwdows, macos\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidEnvironment() {\r\n    return GSEnvironment.isValidEnvironment(this.environment);\r\n  }\r\n\r\n  /**\r\n   * Return true if element can be rendered bysed on OS matching\r\n   * linux, windows...etc\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOS() {\r\n    return GSEnvironment.isDevice(this.os);\r\n  }\r\n\r\n  /**\r\n   * Returns if orientation matched for element rendering\r\n   * horizontal | landscape), vertical | portrait), ; return true if not set\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidOrientation() {\r\n    return GSEnvironment.isValidOrientation(this.orientation);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidBrowser() {\r\n    return GSEnvironment.isValidBrowser(this.browser);\r\n  }\r\n\r\n  /**\r\n   * Returns if browser matched, used to determine rendering/removal\r\n   * @returns {Boolean} \r\n   */\r\n  get isValidProtocol() {\r\n    return GSEnvironment.isValidProtocol(this.protocol);\r\n  }\r\n\r\n  /**\r\n   * Get this class name\r\n   */\r\n  get clazzName() {\r\n    return this.constructor.name;\r\n  }\r\n\r\n  get definitions() {\r\n    const list = [...GSDOM.inheritance(this)].map(o => o.constructor?.properties).filter(o => o);\r\n    list.push(this.constructor?.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Extract and merge all static properties definition from WebComponent instance\r\n   * @param {GSElement} obj \r\n   * @returns {Object}\r\n   */\r\n  static allProperties(obj) {\r\n    const list = [...GSDOM.inheritance(obj)].map(o => o.properties).filter(o => o);\r\n    list.push(obj.constructor?.properties || obj.properties);\r\n    return GSData.mergeObjects(list);\r\n  }\r\n\r\n  /**\r\n   * Register class as WebComponent to the browser\r\n   * @param {String} name \r\n   * @param {class} clazz Optional, if not set, use self\r\n   * @param {Object} opt Options, used only when extending non HTMLElement class  \r\n   */\r\n  static define(name, clazz, opt) {\r\n    if (!customElements.get(name)) {\r\n      customElements.define(name, clazz || this, opt);\r\n    }\r\n  }\r\n\r\n}\r\n","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A BaseView class used by all other views\r\n * @module ipp/BaseView\r\n */\r\nimport { GSElement } from \"../../../modules/GSElement.mjs\";\r\nimport { GSEvents } from \"../../../modules/base/GSEvents.mjs\";\r\n\r\nimport { Utils } from './Utils.mjs';\r\n\r\nexport class BaseView extends GSElement {\r\n\r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }\r\n\r\n    firstUpdated() {\r\n        super.firstUpdated();\r\n        GSEvents.monitorAction(this);\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPPrinterAttributes class\r\n * \r\n * @module ipp/IPPPrinterAttributes\r\n */\r\nimport { GSElement } from \"../../../modules/GSElement.mjs\";\r\n\r\n/**\r\n * IPPPrinterAttributes UI lists printer attributes\r\n */\r\nexport class IPPAttributes extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-printer-attributes.html';\r\n    }\r\n\r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }\r\n    \r\n    load(data) {\r\n        if (!data) return;\r\n        data = data['printer-attributes'] ||data;\r\n        const list = Object.entries(data).map(t => { return {key: t[0], value : t[1]} } );\r\n        this.#store.setData(list);\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('gs-table');\r\n    }\r\n\r\n    get #store() {\r\n        return this.#table.store;\r\n    }\r\n\r\n    static {\r\n        GSElement.define('gs-ipp-attributes', IPPAttributes);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPJobs class\r\n * \r\n * @module ipp/IPPJobs\r\n */\r\nimport { Utils } from './Utils.mjs';\r\nimport { BaseView } from './BaseView.mjs';\r\n\r\n/**\r\n * IPPJobs UI lists printer jobs and allows job manupulation actions\r\n */\r\nexport class IPPJobs extends BaseView {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-jobs.html';\r\n    }  \r\n\r\n    load(data) {\r\n        if (!data) return;\r\n        const me = this;\r\n        me.#attrStore.clear();\r\n        if (data.jobs) {\r\n            me.#jobsStore.setData(data.jobs);\r\n        }  else {\r\n            me.#loadAttr(data);\r\n        }\r\n    }\r\n    \r\n    #loadAttr(data) {\r\n        if (!data) return;\r\n        data = data['job-attributes'] ||data;\r\n        const list = Object.entries(data).map(t => { return {key: t[0], value : t[1]} } );\r\n        this.#attrStore.setData(list);\r\n    }\r\n\r\n    get #jobsTable() {\r\n        return this.query('#table-jobs');\r\n    }\r\n\r\n    get #jobsStore() {\r\n        return this.#jobsTable.store;\r\n    }\r\n\r\n    get #attrTable() {\r\n        return this.query('#table-job-attributes');\r\n    }\r\n\r\n    get #attrStore() {\r\n        return this.#attrTable.store;\r\n    }\r\n\r\n    onCancelJob(e) {\r\n\r\n    }\r\n    \r\n    onPrintUri(e) {\r\n\r\n    }\r\n\r\n    onPurgeJobs(e) {\r\n        this.#jobsStore.clear();\r\n    }\r\n\r\n    async onDetails(e) {\r\n        const jobs = await Utils.load('./data/job-attributes.json');\r\n        this.load(jobs);\r\n    }\r\n\r\n    async onRefresh(e) {\r\n        const jobs = await Utils.load('./data/jobs.json');\r\n        this.load(jobs);\r\n    }\r\n\r\n    static {\r\n        BaseView.define('gs-ipp-jobs', IPPJobs);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPView class\r\n * @module ipp/IPPView\r\n */\r\nimport { Utils } from './Utils.mjs';\r\nimport { BaseView } from './BaseView.mjs';\r\n\r\nexport class IPPView extends BaseView {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-view.html';\r\n    }\r\n\r\n    get #attributes() {\r\n        return this.query('gs-ipp-attributes');\r\n    }\r\n\r\n    get #jobs() {\r\n        return this.query('gs-ipp-jobs');\r\n    }\r\n\r\n    get uri() {\r\n        return this.query('#printerURI')?.value || '';\r\n    }\r\n\r\n    async onRegister() {\r\n        this.onRefresh();\r\n    }\r\n\r\n    async onRefresh() {\r\n        const me = this;\r\n        const data = await Utils.load('./data/printer-attributes.json');\r\n        me.#attributes.load(data);\r\n\r\n        const jobs = await Utils.load('./data/jobs.json');\r\n        me.#jobs.load(jobs);\r\n    }\r\n\r\n    static {\r\n        BaseView.define('gs-ipp-view', IPPView);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2024 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading IPPConsole class\r\n * \r\n * @module ipp/IPPConsole\r\n */\r\nimport { GSElement } from \"../../../modules/GSElement.mjs\";\r\n\r\n/**\r\n * IPPJobs UI lists printer jobs and allows job manupulation actions\r\n */\r\nexport class IPPConsole extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.template = '//ipp-console.html';\r\n    }\r\n    \r\n    renderUI() {\r\n        return this.renderTemplate();\r\n    }    \r\n\r\n    log(data = '') {\r\n        this.#console.content = JSON.stringify(data, '', 4);\r\n    }\r\n\r\n    get #console() {\r\n        return this.query('gs-highlight');\r\n    }\r\n\r\n    static {\r\n        GSElement.define('gs-ipp-console', IPPConsole);\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2024 Green Screens Ltd.\r\n */\r\n\r\nimport { createRef, ref, classMap, html } from '../lib.mjs';\r\nimport { GSElement } from '../GSElement.mjs';\r\nimport { GSLoader } from '../base/GSLoader.mjs';\r\nimport { GSDOM } from '../base/GSDOM.mjs';\r\nimport { GSUtil } from '../base/GSUtil.mjs';\r\n\r\nexport class GSHighlightElement extends GSElement {\r\n\r\n    static get URL_LIB() {\r\n        return globalThis.GS_URL_HLJS || 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0';\r\n    }\r\n\r\n    static properties = {\r\n        url: {},\r\n        theme: {},\r\n        target: {},\r\n        language: {},\r\n    }\r\n\r\n    #codeRef = createRef();\r\n    #data;\r\n\r\n    constructor() {\r\n        super();\r\n        this.theme = 'default';\r\n    }\r\n\r\n    willUpdate(changed) {\r\n        const me = this;\r\n        if (changed.has('theme')) me.#onTheme();\r\n        if (changed.has('target')) me.#onTarget();\r\n        if (changed.has('url')) me.#onURL();\r\n        if (changed.has('language')) me.#onHighlight(me.#data);\r\n    }\r\n\r\n    renderUI() {\r\n        const me = this;\r\n        return html`<pre><code ${ref(me.#codeRef)} class=\"${classMap(me.renderClass())}\"><code/><pre/>`;\r\n    }\r\n\r\n    renderClass() {\r\n        const me = this;\r\n        const hasLangauge = GSUtil.isStringNonEmpty(me.language);\r\n        const css = {\r\n            [`language-${me.language}`]: hasLangauge\r\n        }\r\n        return css;\r\n    }\r\n\r\n    /**\r\n     * Highligh some code in programmatic way\r\n     * \r\n     * @param {string} data \r\n     */\r\n    highlight(data = '', append = false) {\r\n        this.#data = data;\r\n        this.#onHighlight(data, append);\r\n    }\r\n\r\n    set content(val ='') {\r\n        this.#data = val;\r\n        this.#onHighlight(val);\r\n    }\r\n\r\n    get content() {\r\n        return this.#data;\r\n    }\r\n\r\n    async #onTheme() {\r\n        const url = `${GSHighlightElement.URL_LIB}/styles/${this.theme}.min.css`;\r\n        GSDOM.injectCSS(this, url);\r\n    }\r\n\r\n    /**\r\n     * Search with CSS query for element, if found, \r\n     * get innerHTML, and send to highlighting\r\n     */\r\n    #onTarget() {\r\n        const me = this;\r\n        const el = me.target ? GSDOM.query(me.target) : null;\r\n        if (!el) return GSDOM.setHTML(me.#code, `Element with id ${me.target} not found!`);\r\n        me.#data = el.innerHTML;\r\n        me.#onHighlight(el.innerHTML);\r\n    }\r\n\r\n    /**\r\n     * Download source from URL, then send to highlighting\r\n     */\r\n    async #onURL() {\r\n        const me = this;\r\n        const data = await GSLoader.load(me.url);\r\n        if (!data) return GSDOM.setHTML(me.#code, `Code URL ${me.url} unreachable!`);\r\n        me.#data = data;\r\n        me.#onHighlight(data);\r\n    }\r\n\r\n    get #code() {\r\n        return this.#codeRef.value;\r\n    }\r\n\r\n    #onMessage(e) {\r\n        const me = this;\r\n        const content = e.data.data;\r\n        URL.revokeObjectURL(e.data.url);\r\n        GSDOM.setHTML(me.#code, e.data.append ? me.#code.innerHTML + content : content);\r\n        e.target.terminate();\r\n    }\r\n\r\n    #onHighlight(data = '', append = false) {\r\n        const me = this;\r\n        if (!data) return GSDOM.setHTML(me.#code, 'No data!');\r\n        const response = me.#worker;\r\n        const blob = new Blob([response], { type: 'application/javascript' });\r\n        const blobURL = URL.createObjectURL(blob);\r\n        const worker = new Worker(blobURL);\r\n        worker.onmessage = me.#onMessage.bind(me);\r\n        worker.postMessage({ data: data, url: blobURL, append: append });\r\n    }\r\n\r\n    get #worker() {\r\n        const me = this;\r\n        const langs = me.language ? me.language.split(',').map(v => `importScripts('${GSHighlightElement.URL_LIB}/languages/${v.trim()}.min.js');`).join('') : '';\r\n        return `globalThis.onmessage = (event) => {\r\n                importScripts('${GSHighlightElement.URL_LIB}/highlight.min.js');\r\n                ${langs}\r\n                const result = globalThis.hljs.highlightAuto(event.data.data);\r\n                postMessage({data:result.value, url:event.data.url, append: event.data.append});};`\r\n    }\r\n\r\n    static {\r\n        this.define('gs-highlight');\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","print","tracing","forced","type","logging","tmp","nodeName","id","fn","console","log","Error","Object","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","v","Date","Boolean","value","toString","val","trim","toLowerCase","str","obj","replace","x","g","split","reverse","join","word","toUpperCase","slice","map","i","capitalize","constructor","min","max","Math","match","dft","locale","isString","sep","numberSeparator","extractNumber","replaceAll","isNumber","url","test","startsWith","endsWith","pattern","charset","floor","random","length","navigator","language","languages","flags","RegExp","isStringEmpty","undefined","Intl","NumberFormat","format","DateTimeFormat","Array","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","separator","filter","capitalizeAll","tpl","params","names","keys","vals","values","Function","text","textArea","document","createElement","innerHTML","isStringNonEmpty","o","window","forEach","a","left","right","lmatch","rmatch","time","signal","AbortSignal","timeout","Promise","resolve","reject","iid","setTimeout","bind","addEventListener","clearTimeout","data","name","blob","Blob","URL","createObjectURL","href","download","click","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","src","import","result","permissions","query","state","clipboard","writeText","readText","GSFunction$1","GSFunction","isFunction","includes","own","isFunctionDefined","desc","Reflect","getOwnPropertyDescriptor","__proto__","isValid","callFunctionAsync","Symbol","toStringTag","owner","args","arguments","from","apply","native","parseFunction","isFunctionNative","isFunctionAsync","callFunctionSync","parseValue","context","cnt","async","contextualize","accept","queueMicrotask","e","GSCSSMap","body","computedStyleMap","element","getMap","me","modern","capitalizeAttr","asText","asBool","asNum","to","unit","shift","matches","getComputedStyle","getComputedStyledMap","String","on","selText","ors","some","selector","logicalORs","styleSheets","cssRules","reduce","all","concat","containsAny","selectorText","GSDate","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","first","getDay","mondayFirst","isMondayFirst","days","repeat","push","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","M","MM","padStart","MMM","toLocale","MMMM","D","DD","d","dd","ddd","weekday","dddd","H","getHours","HH","h","formatHour","hh","meridiem","A","m","getMinutes","mm","s","getSeconds","ss","SSS","getMilliseconds","Z","zoneStr","ZZ","Q","ceil","k","kk","W","date","getTime","setHours","week1","round","WW","X","short","offset","Locale","weekInfo","firstDay","charAt","opt","toLocaleString","size","isLowercase","hour","hour12","pop","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","getDateFormat","regex","getFormattedDateRegex","parseFormattedDate","groups","y","Number","Y","valueOf","GSData","currency","extract","Set","b","every","index","toSorted","compareArrays","second","arr","indexOf","list","it","cfg","toType","rule","toRegex","fmt","style","fields","limit","sts","rec","filterRecord","filterSimple","filterComplex","key","filterValue","found","flt","matchDate","matchNumber","op","toLocaleLowerCase","local","toLocaleDateString","iso","toISOString","operator","sort","sortPair","ord","idx","col","v1","v2","compare","order","compareNum","compareString","isBool","compareBool","isDate","s1","s2","localeCompare","ignoreNull","isNull","seg","writeSingleToOject","tree","hasOwnProperty","r","readFromProperty","GSDOM","activeElement","active","shadowRoot","isHTMLElement","css","visibility","display","opacity","rect","getBoundingClientRect","width","height","html","single","mime","doc","DOMParser","parseFromString","head","firstElementChild","error","forceWrap","nodes","fromNode","children","wrap","appendChild","target","link","setAttribute","slot","isText","tagName","FORMEL","queryAll","HTMLButtonElement","hasClass","ownClazz","inheritance","pel","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","getAttribute","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","parent","removeChild","node","closest","shadow","parentAll","childAll","child","parentElement","host","offsetParent","c","ShadowRoot","HTMLBodyElement","root","getByID","documentElement","walk","qry","proxy","res","Proxy","prop","receiver","set","sanitize","sanitizer","setHTML","Document","textContent","requestAnimationFrame","entries","kv","toggle","toggleClass","contains","unwrap","querySelectorAll","valueAsNumber","selectedOptions","hasAttribute","checked","getValue","styleValue","textTransform","dataset","ignore","checkValidity","writeToOject","toValue","toJson","fromObject2Element","objectPathExist","readFromObject","fromValue","recursive","plain","innerText","attributes","items","tag","asString","fromJsonAsString","fromJsonAsDOM","title","sub","location","hash","setValue","group","removeAttribute","disabled","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","whiteList","asState","isAllowed","toValidationError","allowElement","allowTag","fetch","ok","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","Utils","notify","success","info","danger","message","inform","json","litUrl","GS_LIT_URL","litModule","ReactiveController","ReactiveElement","AsyncDirective","AsyncReplaceDirective","CSSResult","Directive","LitElement","PartType","TemplateResultType","UnsafeHTMLDirective","UntilDirective","_$LE","_$LH","adoptStyles","asyncAppend","asyncReplace","cache","choose","classMap","clearPart","createRef","defaultConverter","directive","getCommittedValue","getCompatibleStyle","getDirectiveClass","guard","ifDefined","insertPart","isCompiledTemplateResult","isDirectiveResult","isPrimitive","isServer","isSingleExpression","isTemplateResult","keyed","literal","live","noChange","notEqual","nothing","range","ref","removePart","render","setChildPartValue","setCommittedValue","staticHtml","staticSvg","styleMap","supportsAdoptingStyleSheets","svg","templateContent","unsafeCSS","unsafeHTML","unsafeSVG","unsafeStatic","until","when","withStatic","GSID","prefx","next","l","charCodeAt","GSAttr","isInstance","attr","NaN","stringify","attribute","setAsNum","proxify","safe","unsafe","dflt","default","multi","toStringArray","GSEvents","Map","altContext","protect","listen","onContext","onKeyDown","event","shiftKey","prevent","code","ctrlKey","callback","loaded","wait","callFunction","sendSuspended","once","chained","susspended","removeEventListener","unlisten","toSignal","internal","full","hasFunction","preventDefault","stopPropagation","stopImmediatePropagation","sender","bubbles","composed","cancelable","CustomEvent","detail","dispatchEvent","evt","ClipboardEvent","FocusEvent","InputEvent","KeyboardEvent","MouseEvent","SubmitEvent","TouchEvent","WheelEvent","PointerEvent","send","capture","Window","isConnected","eventKey","elmap","getElementMap","eventMap","fnkey","defineProperty","gsid","writable","delete","removeListener","removeElementMap","clear","elid","getElementID","fnid","getCallbackID","hashCode","for","action","onAction","prefix","findAction","onError","GS_LOG_ACTION","rid","waitAnimationFrame","onResize","attach","GSEnvironment","isMobile","userAgentData","mobile","userAgent","isDesktop","isWebkit","protocol","strVal","brands","brand","strAgt","isEdge","isDevice","platform","screen","otype","GSLoader","GS_TEMPLATE_URL","origin","TEMPLATE_URL","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","now","level","isHTML","getTemplateURL","loadSafe","templateURL","normalizeURL","templatePath","method","load","headers","asjson","ct","Accept","isJson","func","isFunc","GSPromise","callbacks","promise","abort","onAbort","await","aborted","onResolve","onReject","ps","p","then","GS_LOCALIZATION_LANGUAGE","lang","GSLocalization","GSLocalizationImpl","queue","queued","GS_LOCALIZATION_URL","translate","has","deft","getLanguage","texthash","reset","promises","loadWait","sequential","Pragma","store","isDefault","hk","details","GSDynamicStyle","super","deleteRule","getRule","setRule","sync","insertRule","updateRule","isImportant","setProperty","source","dynamicStyleSheetByID","dynamicStyleSheet","gsClass","dynamicRule","dynamicRuleByID","dynamicStyle","assign","dynamicStyleByID","AdoptedController","dynamic","addController","hostConnected","controllers","adopt","hostDisconnected","removeController","sheets","changed","renderRoot","onAdopted","init","ContentController","refs","removeContent","hostUpdated","isSelf","contentRef","options","renderOptions","renderBefore","previousElementSibling","keep","GSTemplateCache","template","create","isTemplateElement","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSAttributeHandler","anchor","call","exec","inject","property","swap","trigger","calls","toggles","triggers","handle","targets","handleTarget","handleBinding","handleAction","handleAttribute","handleProperty","handleToggle","handleTrigger","handleCall","handleExec","handleSwap","handleInject","handleTemplate","field","form","isField","HTMLFormElement","isFormElement","toObject","isAttributeJSON","jsonToAttr","toggleAttribute","isPropertyJSON","properties","toggleProperty","tout","symbol","applyContent","applyTemplate","clone","insertAdjacent","deattach","off","DEFINITION","AttributeController","eventName","onNotify","isFormEl","LocalizationController","hostUpdate","updateLanguage","updateLanguageExt","langauge","requestUpdate","onLanguage","OrientationController","hosts","update","onOrientation","TemplateController","lastRef","injected","request","templateInjected","templateRef","schedule","tasks","item","task","scheduled","process","finally","OrientationTypes","hasChanged","newVal","oldVal","ProtocolTypes","EnvironmentTypes","environment","ThemeController","theme","updateTheme","updateThemeExt","onTheme","notEmpty","GSEvent","EventTarget","listeners","listener","abortable","controller","AbortController","GSAbortController","emit","delayed","unbind","GSReadWriteRegistryImpl","handlers","INTERNAL","addHandler","removeHandler","getHandler","newHandler","enabled","register","verify","find","unregister","rw","instance","GSReadWriteRegistry","DataController","readCallback","writeCallback","errorCallback","onRead","onWrite","read","write","storeID","search","storage","firstPage","page","lastPage","nextPage","prevPage","skip","onDataRead","onDataWrite","onDataError","GSElement","flat","rtl","reflect","hide","padding","margin","rounded","bordered","onready","os","browser","adopted","uiHandler","localization","dataController","themes","attributeChangedCallback","oldValue","newValue","connectedCallback","isBindable","binded","disconnectedCallback","deattachListeners","createRenderRoot","firstUpdated","willUpdate","relink","isAllowRender","renderUI","renderTemplate","renderClass","border","mapCSS","flag","waitEvent","attachEvent","removeEvent","direction","gsTarget","isFocused","isValidEnvironment","isValidBrowser","isValidOS","isValidProtocol","isValidOrientation","definitions","mergeObjects","BaseView","monitorAction","handleError","IPPAttributes","setData","table","IPPJobs","attrStore","jobs","jobsStore","loadAttr","jobsTable","attrTable","onCancelJob","onPrintUri","onPurgeJobs","IPPView","onRefresh","IPPConsole","GSHighlightElement","URL_LIB","GS_URL_HLJS","codeRef","onTarget","onURL","onHighlight","hasLangauge","highlight","injectCSS","onMessage","terminate","response","worker","blobURL","Worker","onmessage","postMessage","langs"],"mappings":"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"}