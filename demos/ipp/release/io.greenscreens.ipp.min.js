import{GSDOM as t,GSElement as e,GSEvents as s}from'/webcomponents/release/esm/io.greenscreens.components.all.min.js';class Utils{static get notify(){return t.query('gs-notification')}static inform(t=!1,e){return t?Utils.notify?.info('Info',e):(Utils.notify?.danger('Error',e),t)}static handleError(t){const e=t.data?.error||t.msg||t.message||t.toString();return Utils.inform(!1,e),e}static async load(t=''){const e=await fetch(t);return await e.json()}}class BaseView extends e{renderUI(){return this.renderTemplate()}firstUpdated(){super.firstUpdated(),s.monitorAction(this)}onError(t){Utils.handleError(t)}}class IPPAttributes extends e{constructor(){super(),this.template='//ipp-printer-attributes.html'}renderUI(){return this.renderTemplate()}load(t){if(!t)return;t=t['printer-attributes']||t;const e=Object.entries(t).map((t=>({key:t[0],value:t[1]})));this.#t.store?.clear?.(),this.#t.write(e),this.#t.read()}get#t(){return this.#e.dataController}get#e(){return this.query('gs-table',!0)}static{e.define('gs-ipp-attributes',IPPAttributes)}}class IPPJobs extends BaseView{constructor(){super(),this.template='//ipp-jobs.html'}templateInjected(){const t=this;t.#s.on('select',t.onDetails.bind(t))}load(t){if(!t)return;const e=this;e.#r.data=[],t.jobs?this.#a(this.#s,t.jobs):e.#i(t)}#i(t){if(!t)return;t=t['job-attributes']||t;const e=Object.entries(t).map((t=>({key:t[0],value:t[1]})));this.#a(this.#r,e)}#a(t,e){const s=t.dataController;s.store?.clear?.(),s.write(e),s.read()}get#s(){return this.query('#table-jobs',!0)}get#r(){return this.query('#table-job-attributes',!0)}onCancelJob(t){}onPrintUri(t){}onPurgeJobs(t){this.#s.data=[]}async onDetails(t){const e=await Utils.load('./data/job-attributes.json');this.load(e)}async onRefresh(t){const e=await Utils.load('./data/jobs.json');this.load(e)}static{BaseView.define('gs-ipp-jobs',IPPJobs)}}class IPPView extends BaseView{constructor(){super(),this.template='//ipp-view.html'}get#o(){return this.query('gs-ipp-attributes',!0)}get#n(){return this.query('gs-ipp-jobs',!0)}get uri(){return this.query('#printerURI')?.value||''}async onRegister(){this.onRefresh()}async onRefresh(){const t=await Utils.load('./data/printer-attributes.json');this.#o.load(t);const e=await Utils.load('./data/jobs.json');this.#n.load(e)}static{BaseView.define('gs-ipp-view',IPPView)}}class IPPConsole extends e{constructor(){super(),this.template='//ipp-console.html'}renderUI(){return this.renderTemplate()}log(t=''){this.#l.content=JSON.stringify(t,'',4)}get#l(){return this.query('gs-highlight',!0)}static{e.define('gs-ipp-console',IPPConsole)}}
//# sourceMappingURL=io.greenscreens.ipp.min.js.map
