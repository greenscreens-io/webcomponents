{"version":3,"file":"io.greenscreens.admin.min.js","sources":["../modules/utils/Utils.mjs","../modules/utils/WebAuthn.mjs","../modules/dialogs/GSAdminDialog.mjs","../modules/shell/Login.mjs","../modules/shell/Sidebar.mjs","../modules/shell/Header.mjs","../modules/shell/Shell.mjs","../modules/views/GSSearch.mjs","../modules/views/BaseViewUI.mjs","../modules/views/configs/GSConfiguration.mjs","../modules/views/configs/GSTunnel.mjs","../modules/views/configs/GSCustomization.mjs","../modules/views/filters/GSFilterFido.mjs","../modules/views/filters/GSFilterIP.mjs","../modules/views/filters/GSFilterMobile.mjs","../modules/views/keys/GSApiKeys.mjs","../modules/views/keys/GSOtp.mjs","../modules/views/keys/GSBiometrics.mjs","../modules/views/others/GSPrinting.mjs","../modules/views/others/GSSchedulers.mjs","../modules/views/others/GSUsers.mjs","../modules/views/system/GSServices.mjs","../modules/views/system/GSWorkstations.mjs","../modules/views/system/GSWebmodules.mjs","../modules/dialogs/GSAbout.mjs","../modules/dialogs/GSCertBlocked.mjs","../modules/dialogs/GSCertClient.mjs","../modules/dialogs/GSCertImport.mjs","../modules/dialogs/GSCertImportPFX.mjs","../modules/dialogs/GSCertOpt.mjs","../modules/dialogs/GSLoginAdmin.mjs","../modules/dialogs/GSLoginDefaults.mjs","../modules/dialogs/GSOtpOptions.mjs","../modules/dialogs/GSRegisterBiometrics.mjs","../modules/dialogs/GSRegisterOtp.mjs","../modules/dialogs/GSNetwork.mjs","../modules/dialogs/GSSystem.mjs","../modules/dialogs/GSWorkstation.mjs","../modules/dialogs/GSFilter.mjs","../modules/dialogs/GSService.mjs","../modules/dialogs/GSPrinterReset.mjs","../modules/dialogs/GSPrinterSetup.mjs","../modules/dialogs/GSActivate.mjs","../modules/dialogs/GSKerberos.mjs","../modules/dialogs/GSMigrate.mjs","../modules/dialogs/GSCertImportStore.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSComponents,GSDOM,GSFunction,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport default class Utils {\r\n\r\n    static setUI(value) {\r\n        const el = document.createElement(value);\r\n        document.body.insertAdjacentElement('beforeend', el);\r\n    }\r\n\r\n    static unsetUI(value) {\r\n        const list = GSDOM.queryAll(value);\r\n        list.forEach(el => el.remove());\r\n    }\r\n\r\n    static get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (!Utils.notify) return;\r\n        if (success) return Utils.notify.info('Info', msg);\r\n        Utils.notify.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    /**\r\n     * Convert hex string to Uint8Array\r\n     * @param {string} data \r\n     * @returns {Uint8Array}\r\n     */\r\n    static fromHex(data) {\r\n        let a = [];\r\n        for (let i = 0, len = data.length; i < len; i += 2) {\r\n            a.push(parseInt(data.substring(i, 2), 16));\r\n        }\r\n\r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    /**\r\n     * Detect data and convert to Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            str\r\n     */\r\n    static #validateData(src) {\r\n        var data = null;\r\n        if (src instanceof Array) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof ArrayBuffer) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof Uint8Array) {\r\n            data = src;\r\n        } else if (src instanceof String || typeof src === 'string') {\r\n            data = utf8ToBuffer(src);\r\n        } else if (src.toArrayBuffer) {\r\n            data = new Uint8Array(src.toArrayBuffer());\r\n        } else {\r\n            throw \"Invalid input, must be String or ArrayBuffer or Uint8Array\";\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert String to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static stringToBlob(val) {\r\n        return new Blob([val], {\r\n            encoding: \"UTF-8\",\r\n            type: \"text/plain;charset=UTF-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert Binary to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static binaryToBlob(val) {\r\n        const data = Utils.#validateData(val);\r\n        return new Blob([data], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    /**\r\n     * Download raw data \r\n     * @param {string} name \r\n     * @param {string|array} data \r\n     */\r\n    static download(name, data) {\r\n        if (!data) return false;\r\n        const blob = GSUtil.isString(data) ? Utils.stringToBlob(data) : Utils.binaryToBlob(data);\r\n        const link = URL.createObjectURL(blob);\r\n        try {\r\n            const a = document.createElement('a');\r\n            a.download = name;\r\n            a.href = link;\r\n            a.click();\r\n        } finally {\r\n            setTimeout(() => URL.revokeObjectURL(link), 250);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static revokeObjectURL(url) {\r\n        if (url?.indexOf('blob:') === 0) URL.revokeObjectURL(url)\r\n    }\r\n\r\n    static openInNewTab(url, params, target = '_blank') {\r\n\r\n        const win = globalThis.open(url, target, params || null);\r\n\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        win.addEventListener('beforeunload', () => {\r\n            Utils.revokeObjectURL(url);\r\n            return null;\r\n        });\r\n\r\n        return win;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Module for WebAuth protocol\r\n */\r\nexport default class WebAuthn {\r\n\r\n    static #IP_REGEXP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\r\n    static #api = `${location.origin}/services/api?q=/wsauth`;\r\n    static #svc = `${location.origin}/services/rpc`;\r\n    static #headers = { 'x-type': 'admin' };\r\n\r\n    static {\r\n        Object.freeze(WebAuthn);\r\n    }\r\n\r\n    static #fromBinary(o) {\r\n        return Uint8Array.from(atob(o), (c) => {\r\n            return c.charCodeAt(0)\r\n        });\r\n    }\r\n\r\n    static #toBinary(data) {\r\n        return btoa(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n    }\r\n\r\n    static isAllowed() {\r\n        return (!WebAuthn.#IP_REGEXP.test(location.hostname) && location.protocol === 'https:') || location.hostname === 'localhost';\r\n    }\r\n\r\n    static get #cfg() {\r\n        return { api: WebAuthn.#api, service: WebAuthn.#svc, headers: WebAuthn.#headers };\r\n    }\r\n\r\n    static async #engine() {\r\n        if (!io?.greenscreens?.WebAuthnController) return Engine.init(WebAuthn.#cfg);\r\n    }\r\n\r\n    static async #callRemote(action, finish = false, data) {\r\n        await WebAuthn.#engine();\r\n        return await io.greenscreens.WebAuthnController[action](data, finish);\r\n    }\r\n\r\n    static async #doRegister(data) {\r\n\r\n        const resp = await WebAuthn.#callRemote('register', false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const uid = WebAuthn.#fromBinary(o.uid);\r\n\r\n        const obj = {\r\n            publicKey: {\r\n                rp: {\r\n                    name: o.rp,\r\n                    id: location.hostname\r\n                },\r\n\r\n                challenge: challenge,\r\n\r\n                user: {\r\n                    id: uid,\r\n                    name: o.name,\r\n                    displayName: o.displayName\r\n                },\r\n\r\n                // https://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n                /*\r\n                    {type: \"public-key\", alg: -7}\r\n                    {type: \"public-key\", alg: -35}\r\n                    {type: \"public-key\", alg: -36}\r\n                    {type: \"public-key\", alg: -257}\r\n                    {type: \"public-key\", alg: -258}\r\n                    {type: \"public-key\", alg: -259}\r\n                    {type: \"public-key\", alg: -37}\r\n                    {type: \"public-key\", alg: -38}\r\n                    {type: \"public-key\", alg: -39}\r\n                    {type: \"public-key\", alg: -8}\r\n                     */\r\n                pubKeyCredParams: [{\r\n                    type: \"public-key\",\r\n                    alg: -7\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -257\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -41\r\n                }\r\n                ],\r\n\r\n                attestation: \"direct\",\r\n                timeout: 60000,\r\n                excludeCredentials: [],\r\n                extensions: {},\r\n                authenticatorSelection: {\r\n                    requireResidentKey: false,\r\n                    userVerification: \"preferred\"\r\n                    //authenticatorAttachment : \"cross-platform\"\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const cred = await navigator.credentials.create(obj);\r\n        if (cred == null) throw new Error('Credential not found!');\r\n\r\n        const auth = {\r\n            uid: o.uid,\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            attestationObject: WebAuthn.#toBinary(cred.response.attestationObject),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote('register', true, auth);\r\n\r\n    }\r\n\r\n    static async #doAuthenticate(action, data) {\r\n\r\n        const resp = await WebAuthn.#callRemote(action, false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const creds = [];\r\n\r\n        if (action === 'test' && o.uid.length === 0) {\r\n            throw new Error('Invalid credentials!');\r\n        }\r\n\r\n        o.uid.every((v) => {\r\n            const uid = WebAuthn.#fromBinary(v);\r\n            const o = {\r\n                type: \"public-key\",\r\n                id: uid\r\n            };\r\n            //o.transports: [\"usb\", \"nfc\", \"ble\"],\r\n            creds.push(o);\r\n            return true;\r\n        });\r\n\r\n        const obj = {\r\n            challenge: challenge,\r\n            rpId: location.hostname,\r\n            userVerification: \"preferred\",\r\n            timeout: 60000,\r\n\r\n            allowCredentials: creds,\r\n            extensions: {\r\n                uvm: true, // RP wants to know how the user was verified\r\n                loc: false,\r\n                txAuthSimple: \"Could you please verify yourself?\"\r\n            }\r\n        };\r\n\r\n        const cred = await navigator.credentials.get({ publicKey: obj });\r\n\r\n        if (cred == null) {\r\n            throw new Error('Credential not found!');\r\n        }\r\n\r\n        const auth = {\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            authenticatorData: WebAuthn.#toBinary(cred.response.authenticatorData),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON),\r\n            signature: WebAuthn.#toBinary(cred.response.signature),\r\n            userHandle: WebAuthn.#toBinary(cred.response.userHandle)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote(action, true, auth);\r\n    }\r\n\r\n    static register(data) {\r\n        return WebAuthn.#doRegister(data);\r\n    }\r\n\r\n    static authenticate(data) {\r\n        return WebAuthn.#doAuthenticate(\"authenticate\", data);\r\n    }\r\n\r\n    static update(data) {\r\n        return WebAuthn.#doAuthenticate('update', data);\r\n    }\r\n\r\n    static unregister(data) {\r\n        return WebAuthn.#doAuthenticate('unregister', data);\r\n    }\r\n\r\n    static test(data) {\r\n        return WebAuthn.#doAuthenticate('test', data);\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport { GSAttr, GSComponents, GSDOM, GSEvents, GSLoader, GSDialog } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSAdminDialog extends GSDialog {\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        //me.cssTitle = 'fs-5 fw-bold text-muted';\r\n        //me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return '';\r\n    }\r\n\r\n\t/**\r\n\t * Override GSDialog method, to attach UI slot\r\n\t */\r\n\tasync onBeforeReady() {\r\n\r\n\t\tawait super.onBeforeReady();\r\n\t\tconst me = this;\r\n\r\n        me.on('data', me.#onFormData.bind(me));\r\n        me.on('error', me.#onFormError.bind(me));\r\n\t\tme.on('open', me.#onOpen.bind(me));\r\n\r\n\t\tconst tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n\t\tawait GSEvents.waitAnimationFrame(async () => {\r\n\t\t\tGSDOM.setHTML(me, tpl);\r\n\t\t\tme.title = me.dialogTitle;\r\n\t\t\tawait GSUtil.timeout(200);\r\n\t\t});\r\n\t}\r\n\r\n\tonReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.auto) me.open();\r\n\t\tsuper.onReady();\r\n\t}\r\n\r\n    /**\r\n     * Should auto open\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    /**\r\n     * Wait dialog\r\n     */\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Dialog form\r\n     */\r\n    get form() {\r\n        return GSDOM.query(this, 'form');\r\n    }\r\n\r\n    /**\r\n     * Override parent class method\r\n     * @param {*} data \r\n     */\r\n\topen(data) {\r\n\t\tconst me = this;\r\n\t\tme.form?.reset();\r\n\t\tme.#update(data);\r\n\t\tsuper.open(data);\r\n\t}\r\n\r\n    /**\r\n     * Used by inherited dialogs to load data into dialog forms\r\n     * @returns {*}\r\n     */\r\n    async onOpen(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onData(data) {\r\n        return true;\r\n    }\r\n\r\n\t/**\r\n\t * On dialog open, get data, if not ok, return false, cancel events\r\n\t */\r\n\tasync #onOpen(e) {\r\n\t\tconst me = this;\r\n\t\tconst data = await me.onOpen(GSDOM.toObject(me.form));\t\t\r\n\t\tdata === false ? GSEvents.prevent(e) : me.#update(data);\r\n\t}\r\n\r\n\t/**\r\n\t * Update dialog forms \r\n\t */\r\n\t#update(data) {\r\n\t\tif (typeof data == 'object') {\r\n\t\t\tconst me = this;\r\n\t\t\tGSDOM.queryAll(me, 'form').forEach(form => GSDOM.fromObject(form, data));\r\n\t\t\tGSEvents.send(me, 'change');\r\n\t\t}\r\n\t}\r\n   \r\n    #onFormError(e) {\r\n        Utils.inform(false, 'Some fields are invalid!');        \r\n    }\r\n\r\n    async #onFormData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        let sts = false; \r\n        try {\r\n\t\t\tme.disable();\r\n            sts = await me.onData(e.detail.data);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        } finally {\r\n\t\t\tme.enable();\r\n\t\t\tif (sts) me.close();\r\n\t\t}\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading Login class\r\n * @module dialogs/Login\r\n */\r\nimport {GSAttr,GSDOM,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport GSAdminDialog from '../dialogs/GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\n\r\nglobalThis.Tn5250 = {\r\n    version: '6.0.0.300',\r\n    build: '25.07.2023.',\r\n    release: 20230725, \r\n    opt : {\r\n        lic : true\r\n    }\r\n};\r\n\r\nexport default class Login extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-login', Login);\r\n        Object.seal(Login);\r\n    }\r\n\r\n    static #headers = { 'x-type': 'admin' };\r\n    static #cred = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n    static #api1 = `${location.origin}/services/api?q=/rpc`;\r\n    static #svc1 = `${location.origin}/services/rpc`;\r\n\r\n    static #api2 = `${location.origin}/services/api?q=/wsadmin`;\r\n    static #svc2 = `${location.origin}/services/wsadmin`.replace('http', 'ws');\r\n\r\n    static #auth = `${location.origin}/services/auth`;\r\n\r\n    #engine = null;\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        //me.visible = true;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n        me.cssTitle = 'd-flex justify-content-center w-100';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//shell/login.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        const url = globalThis.GSC?.logoUrl || '../assets/img/logo.png';\r\n        return `<img src=\"${url}\" alt=\"...\" height=\"30\" width=\"180\">`; // 'Admin Login';\r\n    }\r\n\r\n    get #otp() {\r\n        return this.query('input[name=\"otp\"]');\r\n    }\r\n\r\n    get #password() {\r\n        return this.query('input[name=\"password\"]');\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        console.clear();\r\n\r\n        const me = this;\r\n        me.#initDemo();\r\n        Utils.unsetUI('gs-admin-shell');\r\n\r\n        if (DEMO) return me.#toggle(false);\r\n\r\n        await GSUtil.timeout(5);\r\n        await me.#initAuth();\r\n\r\n        me.#engine = await me.#engineLogin();\r\n\r\n        me.#doWebAuth();\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        if (globalThis.DEMO) {\r\n            me.#shell();\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            me.#toggle(true);\r\n            const cred = Object.assign(data, Login.#cred);\r\n            await io.greenscreens.AdminController.login(cred);\r\n        } catch (e) {\r\n            me.onOpen();\r\n            throw e;\r\n        }\r\n\r\n        me.#postLogin();\r\n    }\r\n\r\n    async #doWebAuth() {\r\n        const me = this;\r\n        if (!me.#isWebauth) return;\r\n        const data = { appID: 0, ipAddress: Tn5250.opt.ip };\r\n        const cred = Object.assign(data, Login.#cred);\r\n        try {\r\n            const o = await WebAuthn.authenticate(cred);\r\n            if (o.success) document.cookie = 'X-Authorization=' + o.srl + '; path=/services/wsadmin';\r\n            me.#postLogin();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n            if (me.#webauthOnly) location.reload();\r\n        }\r\n    }\r\n\r\n    async #postLogin() {\r\n\r\n        console.clear();\r\n        const me = this;\r\n\r\n        me.#engine?.stop();\r\n        me.#engine = await me.#engineShell();\r\n\r\n        me.#engine.SocketChannel.on('offline', (e) => {\r\n            console.log('Socket channel closed!');\r\n            Utils.handleError(e);\r\n            me.#engine?.stop();\r\n            location.reload();\r\n        });\r\n\r\n        me.#shell();\r\n        return true;\r\n    }\r\n\r\n    get #isWebauth() {\r\n        return Tn5250?.opt?.fido;\r\n    }\r\n\r\n    get #isOtp() {\r\n        return Tn5250?.opt?.otp;\r\n    }\r\n\r\n    get #webauthOnly() {\r\n        return this.#isWebauth && !this.#isOtp;\r\n    }\r\n\r\n    #initDemo() {\r\n        //if (globalThis.hasOwnProperty('DEMO')) return;\r\n        if ('DEMO' in globalThis) return;\r\n        globalThis.DEMO = typeof Engine !== 'function';\r\n    }\r\n\r\n    #toggle(sts = false) {\r\n        GSDOM.queryAll(this, 'input, button').forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n        GSDOM.query(this, 'input').focus();\r\n    }\r\n\r\n    async #initAuth() {\r\n        delete globalThis.io;\r\n        const res = await fetch(Login.#auth);\r\n        if (!res.ok) return false;\r\n        const opt = globalThis.Tn5250.opt = await res.json();\r\n        globalThis.Tn5250.opt = opt;\r\n        const me = this;\r\n        GSAttr.toggle(me.#otp, 'disabled', !opt.otp);\r\n        GSAttr.toggle(me.#password, 'disabled', !opt.otp);\r\n        GSDOM.toggleClass(me.#otp, 'd-none', !opt.otp);\r\n        if (me.#webauthOnly) {\r\n            me.closable = false;\r\n            me.body.parentElement.innerHTML = '<div class=\"m-3 text-center fs-5\">Use security key to access Web Admin console.</div>';\r\n        }\r\n    }\r\n\r\n    async #engineLogin() {\r\n        return this.#getEngine(Login.#api1, Login.#svc1);\r\n    }\r\n\r\n    async #engineShell() {\r\n        return this.#getEngine(Login.#api2, Login.#svc2);\r\n    }\r\n\r\n    async #getEngine(api, svc) {\r\n        delete globalThis.io;\r\n        this.#engine = null;\r\n        return Engine.init({ api: api, service: svc, headers: Login.#headers });\r\n    }\r\n\r\n    #shell() {\r\n        this.#clear();\r\n        Utils.setUI('gs-admin-shell');\r\n    }\r\n\r\n    #clear() {\r\n        Utils.unsetUI('gs-admin-shell-login');\r\n        Utils.unsetUI('gs-admin-shell');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class SidebarUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport { GSComponents, GSFunction, GSElement, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        try {\r\n            const fnName = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n            const action = GSUtil.capitalizeAttr(fnName);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    // logout and replace with login tag\r\n    async logout() {\r\n        try {\r\n            Utils.unsetUI('gs-admin-shell-login');\r\n            Utils.unsetUI('gs-admin-shell');\r\n            const o = DEMO ? DEMO : await io.greenscreens.Session.closeSession();\r\n            return o.success;\r\n        } finally {\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n    // restart server\r\n    async restart() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.restart();\r\n        Utils.inform(o.success, 'Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.verifySSLClient(2);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        Utils.inform(true, msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.regenerate();\r\n        if (o.code === 'RSA') Utils.inform(true, 'New encryption keys generated');\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.request(true);\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        //Utils.download(\"server_public.txt\", data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generate(true);\r\n        Utils.inform(true, 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=0`);\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=1`);\r\n    }\r\n\r\n    explorer() {\r\n        Utils.openInNewTab(`${location.origin}/admin/explorer`, 'toolbar=no,scrollbars=yes,resizable=yes');\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=conf`);\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=log`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\nimport {GSElement} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Class representing UI Shell\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class ShellUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.GSC?.company && me.company) me.company.innerHTML = me.GSC.company;\r\n    }\r\n\r\n    get company() {\r\n        return this.getByID('company');\r\n    }\r\n\r\n    get GSC() {\r\n        return globalThis.GSC;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\n\r\nimport { GSAttr, GSEvents, GSElement, GSEnvironment } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\n\r\nimport { GSComponents, GSDOM, GSUtil, GSElement, GSEvents } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        globalThis.GS_LOG_ACTION = true;\r\n        GSEvents.monitorAction(me, 'view');\r\n        me.attachEvent(me.#table, 'filter', e => me.onViewRefresh());\r\n        requestAnimationFrame(() => me.onViewRefresh());\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.#table?.store.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.#table?.store;\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get form() {\r\n        return GSDOM.query(this.modal, '#form-main');\r\n    }\r\n\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async onViewExport() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewClone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n\r\n        try {\r\n\r\n            const sts = await me.onClone(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            Utils.notify.secondary('', 'Record cloned!');\r\n            me.onViewRefresh();\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewRemove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => !o.hasOwnProperty(me.recID) || (o[me.recID] !== data[me.recID]));\r\n            me.store.setData(subset);\r\n            Utils.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewDetails(e) {\r\n\r\n        const me = this;\r\n        const data = await me.onDetails(e.detail.data[0]);\r\n        if (!data) return;\r\n\r\n        me.form?.reset();\r\n        GSDOM.fromObject(me.form, data);\r\n        me.modal.open(data);\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.reload();\r\n            Utils.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewCreate(e) {\r\n\r\n        const me = this;\r\n\r\n        me.form?.reset();\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            Utils.notify.primary('', 'Record created!');\r\n\r\n            me.onViewRefresh();\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async onViewRefresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    me.store.setData(data);\r\n                    // me.store.firstPage();\r\n                } else {\r\n                    me.store.reload();\r\n                }\r\n            } catch (e) {\r\n                me.onError(e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    onViewSearch(e) {\r\n        this.store.filter = e.detail.value;\r\n    }\r\n\r\n\tonError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n    /**\r\n     * Handle data befoer opening the modal form\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async onDetails(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record cloned from existing one.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onClone(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport { GSComponents, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(1000);\r\n            me.#update();\r\n        });\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n\r\n        const ctx = me.query('gs-context');\r\n        // If license installer available\r\n        if (!me.#hasInstaller) {\r\n            // If license installer not available; remove activator\r\n            ctx?.self?.querySelector('[data-action=\"activate\"]')?.remove();\r\n        }\r\n    }\r\n\r\n    get #hasInstaller() {\r\n        return Tn5250?.opt?.lic == true;\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    get activateDialog() {\r\n        return GSComponents.get('modal-activate');\r\n    }\r\n\r\n    get printerReset() {\r\n        return GSComponents.get('modal-reset');\r\n    }\r\n\r\n    get printerSetup() {\r\n        return GSComponents.get('modal-setup');\r\n    }\r\n\r\n    get validate() {\r\n        return GSComponents.get('modal-validate');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.list(false);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.unsetHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.cloneConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    onViewResetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerReset.open(data);\r\n    }\r\n\r\n    onViewSetupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerSetup.open(data);\r\n    }\r\n\r\n    onViewActivate(e) {\r\n        const data = e.detail.data[0];\r\n        this.activateDialog.open(data);\r\n    }\r\n\r\n    async onViewValidateServer(e) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Hosts.validate(data);\r\n            const body = `<pre>${o.msg}</pre>`;\r\n            me.validate.confirm('Validate', body);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from \"../../utils/Utils.mjs\";\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.list(me.store.page, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        data.name = `${data.name} - ${Date.now()}`;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewSstart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.start(data.id);\r\n        Utils.inform(o.success, 'Tunnel started');\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.stop(data.id);\r\n        Utils.inform(o.success, 'Tunnel stopped');\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.restart(data.id);\r\n        Utils.inform(o.success, 'Tunnel restarted');\r\n    }\r\n\r\n    async onViewDownload(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.download(data.id);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud',\r\n            'cloud: ' + location.origin,\r\n            'token: ' + o.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n        ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.msg));\r\n        Utils.download('server.config', conf.join('\\n'));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scripts.getScripts();\r\n        me.header.value = o.data?.header || '';\r\n        me.footer.value = o.data?.footer || '';\r\n        me.ui.value = o.data?.ui || '';\r\n    }\r\n\r\n    async save() {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Scripts.setScripts(me.header.value, me.footer.value, me.ui.value);\r\n            Utils.inform(o.success, 'Data saved!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.add(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.update(data.id, data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","\r\n/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.update(data.id, data.active);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.remove(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    #prepare(json) {\r\n        json.uuid = json.uuid.toUpperCase();\r\n        json.host = json.host.toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.library = (json.library || '').toUpperCase();\r\n        json.userName = (json.userName || '').toUpperCase();\r\n        json.spoolName = (json.spoolName || '').toUpperCase();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    #mapState = { \"\": 0, \"true\": 1, \"false\": 2 };\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const type = filter.type ? parseInt(filter.type, 10) : null;\r\n        const status = me.#mapState[filter.status] || 0;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.list(me.store.page - 1, me.store.limit, type, status);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewRun(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.runNow(data.id);\r\n        Utils.inform(o.success, 'Task started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewCommit(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.commit();\r\n            Utils.inform(o.success, 'Sync with database ok!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n    async onViewResync(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.resync();\r\n            Utils.inform(o.success, 'Sync from storage started!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n\r\n    #prepare(json) {\r\n        json.confid = parseInt(json.confid || 0);\r\n        json.devtype = parseInt(json.devtype || 0);\r\n        json.driver = parseInt(json.driver || 0);\r\n        json.drawer1 = parseInt(json.drawer1 || -1);\r\n        json.drawer2 = parseInt(json.drawer2 || -1);\r\n        json.enhanced = parseInt(json.enhanced || 0);\r\n        json.uuid = (json.uuid || '').toUpperCase();\r\n        json.host = (json.host || '').toUpperCase();\r\n        json.user = (json.user || '').toUpperCase();\r\n        json.display = (json.display || '').toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.program = (json.program || '').toUpperCase();\r\n        json.printer = (json.printer || 'Default');\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.list();\r\n        return o.data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport {GSFunction} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    #terminal = {};\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Manage.listSessions(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onViewMessage(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, data.message);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewLogging(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.loging(data);\r\n            if (o.msg === 'false') {\r\n                const url = location.origin + '/services/logs?id=' + o.code;\r\n                Utils.download('server.log', url);\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKill(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killDevice(data);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewMessageFilter(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = Object.assign(me.filter);\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessages(me.filter);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKillFilter(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killSessions(me.filter);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewExport(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.export(0, 0, me.filter);\r\n            const tmp = JSON.stringify(o.data);\r\n            Utils.download('workstations.json', tmp);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        Object.values(me.#terminal)\r\n            .filter(el => GSFunction.isFunction(el.close))\r\n            .forEach(el => el.close());\r\n        me.#terminal = {};\r\n    }\r\n\r\n    onViewViewSession(e) {\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO mode.');\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n\r\n        let win = me.#terminal[data.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        const params = 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes';\r\n        const url = `${location.origin}/terminal/?d=0&k=0`;\r\n        win = Utils.openInNewTab(url, params);\r\n        win.onclose = () => delete me.#terminal[data.deviceID];\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        const id = setInterval(() => {\r\n\r\n            if (!win.Tn5250) return;\r\n            clearInterval(id);\r\n\r\n            me.#terminal[data.deviceID] = win;\r\n            win.document.title = `Terminal - ${data.uuid} - ${data.host} - ${data.display}`;\r\n            me.#updateScreen(win, data);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) => {\r\n                if (name === 'PF5') me.#updateScreen(win, data);\r\n            });\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async #updateScreen(win, data) {\r\n        if (!win?.Tn5250) return;\r\n        try {\r\n            const o = await io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n            win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.list();\r\n        return o.data;\r\n    }\r\n\r\n    async onViewStart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.start(data.name);\r\n        Utils.inform(o.success, 'Module started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.stop(data.name);\r\n        Utils.inform(o.success, 'Module stopped!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.restart(data.name);\r\n        Utils.inform(o.success, 'Module restarted!');\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport { GSModal } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '20.10.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get version() {\r\n        return globalThis.Tn5250?.opt?.version || GSAbout.#version;\r\n    }\r\n\r\n    get build() {\r\n        return globalThis.Tn5250?.opt?.build || GSAbout.#build;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${me.version}</span></div>\r\n            <div>Build : <span>${me.build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertBlocked class\r\n * @module dialogs/GSCertBlocked\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertBlocked extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certblocked', GSCertBlocked);\r\n        Object.seal(GSCertBlocked);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-blocked.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Blocked Certificates';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getBlocked();\r\n        return { list: o.msg };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setBlocked(data.list);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertClient extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generateClient(data);\r\n\r\n        const arr = Utils.fromHex(o.msg);\r\n        const raw = new Uint8Array(arr);\r\n        Utils.download(o.code, raw);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPEM(data.rootCAPub, data.rootCAPriv,\r\n            data.serverPub, data.serverPriv, data.rootPass, data.serverPass);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimportpfx', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-importpfx.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Binary Certificate';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    async pfx() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return btoa(new Uint8Array(buff));\r\n    }\r\n\r\n    async onData(data) {\r\n        data.pfx = await this.pfx();\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPFX(data.pfx, data.password);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport { GSLoader } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        if(DEMO)  return await GSLoader.loadSafe('./data/cert.json', 'GET', null, true);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.loadConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.saveConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Session.newAuth(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getDefaults();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveDefaults(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getOtp();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveOTP(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterBiometrics class\r\n * @module dialogs/GSRegisterBiometrics\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSRegisterBiometrics extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-bioreg', GSRegisterBiometrics);\r\n        Object.seal(GSRegisterBiometrics);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.align = 'center';\r\n        me.cancelable = false;\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-bio.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register Biometric';\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        const me = this;\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not supported in DEMO mode!');\r\n\r\n        if (!WebAuthn.isAllowed()) {\r\n            const msg = 'FIDO2 allowed only on secured url <br>and valid domain name!'\r\n            me.body = msg;\r\n            return Utils.inform(false, msg);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData() {\r\n        const params = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n        params.appID = 0;\r\n        params.ipAddress = Tn5250.opt.ip;\r\n        try {\r\n            const o = await WebAuthn.register(params);\r\n            console.log(o);\r\n            me.body = 'Biometric Web Admin login activated!';\r\n        } catch (e) {\r\n            me.body = Utils.handleError(e) || 'Biometric Web Admin login not activated!';\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport {GSDOM} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSRegisterOtp extends GSAdminDialog {\r\n\r\n    static #URL = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register OTP';\r\n    }\r\n\r\n    get scratch() {\r\n        return GSDOM.query(this, '#scratch');\r\n    }\r\n\r\n    get qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get token() {\r\n        return GSDOM.query(this, '#token');\r\n    }\r\n\r\n    getUrl(token) {\r\n        const b64 = self.btoa(token);\r\n        return `${location.origin}${GSRegisterOtp.#URL}${b64}`;\r\n    }\r\n\r\n    async onOpen() {\r\n        const me = this;\r\n        if (DEMO) return Utils.inform(false, 'Nota available in DEMO!');\r\n        const o = await io.greenscreens.OAuth.register();\r\n        me.#download(o.data);\r\n        me.#update(o.data);\r\n        return o.data;\r\n    }\r\n\r\n    async onData() {\r\n        return true;\r\n    }\r\n\r\n    #update(o) {\r\n        const me = this;\r\n        const url = me.getUrl(o.url);\r\n        me.qrcode.parentElement.href = url;\r\n        me.qrcode.src = url;\r\n        me.qrcode.title = o.url;\r\n        me.token.innerHTML = o.key.replaceAll('=', '');\r\n        me.scratch.innerHTML = o.scratchCodes.join('&nbsp;');\r\n    }\r\n\r\n    #download(o) {\r\n        const alt = o.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            o.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            o.key.replaceAll('=', ''),\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n\r\n        alt.every((v) => {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getInterface();\r\n        o.data.restart = o.data.restart ? '1' : '0';\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setInterface(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSSystem extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    async reloadKerberos() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.reloadKerberors();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstation class\r\n * @module dialogs/GSWorkstation\r\n */\r\nimport {GSLoader} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSWorkstation extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-workstation', GSWorkstation);\r\n        Object.seal(GSWorkstation);\r\n    }\r\n\r\n    #def = null;\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.cssBody = 'NA';\r\n        super.connectedCallback();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return null;\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Workstation Info';\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        this.#def = await GSLoader.loadSafe('data/wks.json','GET',null,true);\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        const css = 'fw-bold w-25 text-bg-secondary';\r\n        const html = ['<div class=\"container p-2\"><div class=\"row\"><div class=\"col-xs-12\"><table class=\"table border\"><tbody>'];\r\n        const body = me.#def.order.filter(v => me.#def.data[v])\r\n            .map(v => `<tr><td class=\"${css}\">${me.#def.data[v]}</td><td>${data[v] || ''}</td></td>`).join('');\r\n        html.push(body);\r\n        html.push('</tbody></table></div></div></div>');\r\n        me.body = html.join('');\r\n        super.open();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilter class\r\n * @module dialogs/GSFilter\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSFilter extends GSAdminDialog {\r\n\r\n    //\"((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\.?\\\\b){4}\";\r\n    static #IP = \"((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\\\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\";\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}/[0-9]{1,2}$`, `^${GSFilter.#IP}-${GSFilter.#IP}$`];\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-filter', GSFilter);\r\n        Object.seal(GSFilter);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n        me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//forms/filter-ip.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'IP Filter';\r\n    }\r\n\r\n    get typeField() {\r\n        return this.query('select[name=type]');\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[me.typeField.value];\r\n    }\r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[data.type];\r\n        return data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSService class\r\n * @module dialogs/GSService\r\n */\r\nimport {GSAttr,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSService extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-service', GSService);\r\n        Object.seal(GSService);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/service.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Service Module Property';\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.form?.reset();\r\n        me.valueField.type = 'text';\r\n        me.valueField.classList.value = 'form-control';\r\n        me.valueField.parentElement.classList.value = '';\r\n\r\n        if (GSUtil.isNumber(data.value)) {\r\n            me.valueField.type = 'number';\r\n        }\r\n\r\n        if (GSUtil.isBool(data.value)) {\r\n            me.valueField.type = 'checkbox';\r\n            me.valueField.classList.value = 'form-check-input';\r\n            me.valueField.parentElement.classList.value = 'form-check form-switch fs-5';\r\n        }\r\n\r\n        super.open(data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        const type = GSAttr.get(me.valueField, 'type');\r\n\r\n        if (type === 'checkbox') {\r\n            data.value = me.valueField.checked === true;\r\n        }\r\n\r\n        if (type === 'number') {\r\n            data.value = parseInt(data.value || 0) || 0;\r\n        }\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterReset extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.reset(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport {GSAttr, GSDOM, GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, 'select[name=\"hostTransform\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(250);\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        });\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        delete me.#data.drawer1;\r\n        delete me.#data.drawer2;\r\n        me.form.reset();\r\n        me.#update(true);\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            data.hostTransform = parseInt(data.hostTransform) === 1;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.setup(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n    #onHPT(e) {\r\n        this.#update(e.target.value !== '1');\r\n    }\r\n\r\n    #update(sts) {\r\n        const qry = '[data-group=\"true\"] input, [data-group=\"true\"] select';\r\n        this.queryAll(qry).forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSActivate class\r\n * @module dialogs/GSActivate\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe exist\r\n */\r\nexport default class GSActivate extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-activate', GSActivate);\r\n        Object.seal(GSActivate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/activate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Activator.activate(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSKerberos extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-kerberos', GSKerberos);\r\n        Object.seal(GSKerberos);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/kerberos.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'SSO Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.load();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.save(data);\r\n        return o.success;\r\n    }\r\n    \r\n    async onDialogReload() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.reload();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSMigrate extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-migrate', GSMigrate);\r\n        Object.seal(GSMigrate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/migrate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Migrate Storage';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.migrate(data.path);\r\n        const me = this;\r\n        o.success ? setTimeout(() => me.inform(),500) : me.inform();\r\n        return o.success;\r\n    }\r\n    \r\n    inform() {\r\n\t\tthis.notify.primary('', 'Migration started, check server logs for details!');\r\n\t}\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certstoreimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import-store.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import PFX/PEM Certificate Store';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    get isPEM() {\r\n\t\treturn this.isExt('.pem');\r\n\t}\r\n\r\n    get isPFX() {\r\n\t\treturn this.isExt('.pfx');\r\n\t}\r\n\r\n    isExt(val) {\r\n\t\treturn this.file?.name.endsWith(val);\r\n\t}\r\n\t    \t\r\n    async fileToHex() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return Utils.toHex(buff);\r\n    }\r\n\r\n    async onData(data) {\r\n\t\tif (DEMO) return DEMO.success;\r\n\t\tconst me = this;\r\n        data.hex = await me.fileToHex();\r\n        let o = false;\r\n        if (me.isPEM) {\r\n\t        o = await io.greenscreens.Certificate.loadFromPEM(data.hex, data.password, data.type);\r\n\t\t} else if (me.isPFX) {\r\n        \to = await io.greenscreens.Certificate.loadFromPFX(data.hex, data.password, data.type);\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Error('PEM or PFX file format supported!');\r\n\t\t}\r\n        return o.success;\r\n    }\r\n\r\n}"],"names":["Utils$1","Utils","static","value","el","document","createElement","body","insertAdjacentElement","GSDOM","queryAll","forEach","remove","notify","GSComponents","get","success","msg","info","danger","e","data","error","message","toString","inform","a","i","len","length","push","parseInt","substring","Uint8Array","src","Array","ArrayBuffer","String","utf8ToBuffer","toArrayBuffer","val","Blob","encoding","type","validateData","name","blob","GSUtil","isString","stringToBlob","binaryToBlob","link","URL","createObjectURL","download","href","click","setTimeout","revokeObjectURL","url","indexOf","params","target","win","globalThis","open","GSFunction","isFunction","focus","addEventListener","WebAuthn","location","origin","Object","freeze","o","from","atob","c","charCodeAt","btoa","fromCharCode","apply","IP_REGEXP","test","hostname","protocol","cfg","api","service","svc","headers","io","greenscreens","WebAuthnController","Engine","init","action","finish","engine","callRemote","challenge","fromBinary","uid","obj","publicKey","rp","id","user","displayName","pubKeyCredParams","alg","attestation","timeout","excludeCredentials","extensions","authenticatorSelection","requireResidentKey","userVerification","cred","navigator","credentials","create","Error","auth","rawId","toBinary","attestationObject","response","clientDataJSON","creds","every","v","rpId","allowCredentials","uvm","loc","txAuthSimple","authenticatorData","signature","userHandle","doRegister","doAuthenticate","GSAdminDialog","GSDialog","connectedCallback","super","this","cssHeader","dialogTemplate","dialogTitle","async","onBeforeReady","me","on","onFormData","bind","onFormError","onOpen","tpl","GSLoader","getTemplate","GSEvents","waitAnimationFrame","setHTML","title","onReady","auto","GSAttr","getAsBool","waiter","form","query","reset","update","toObject","prevent","fromObject","send","sts","disable","onData","detail","handleError","enable","close","onError","Tn5250","version","build","release","opt","lic","Login","customElements","define","seal","uuid","host","replace","cancelable","align","cssTitle","GSC","logoUrl","otp","password","initDemo","unsetUI","DEMO","toggle","initAuth","engineLogin","doWebAuth","shell","assign","AdminController","login","postLogin","isWebauth","appID","ipAddress","ip","authenticate","cookie","srl","webauthOnly","reload","stop","engineShell","SocketChannel","fido","isOtp","res","fetch","ok","json","toggleClass","closable","parentElement","innerHTML","getEngine","api1","svc1","api2","svc2","clear","setUI","SidebarUI","GSElement","HeaderUI","onAction","attachEvent","fnName","source","dataset","capitalizeAttr","fn","isFunctionAsync","Session","closeSession","Server","restart","Certificate","verifySSLClient","regenerate","code","request","requestPem","privatePem","confirm","generate","certExport","openInNewTab","explorer","downloadConfig","downloadLogs","ShellUI","company","getByID","GSSearch","css","iconCSS","inputCSS","placeholder","GSEnvironment","isWebkit","searchEl","onSearch","which","set","BaseViewUI","constructor","className","GS_LOG_ACTION","monitorAction","table","onViewRefresh","requestAnimationFrame","recID","filter","flt","store","modal","tagName","toLowerCase","export","JSON","stringify","rec","onClone","setData","secondary","onRemove","subset","hasOwnProperty","onDetails","result","waitEvent","onUpdate","warn","onCreate","primary","onLoad","isArray","onViewSearch","GSConfiguration","ctx","hasInstaller","self","querySelector","activateDialog","printerReset","printerSetup","validate","Hosts","list","setHost","unsetHost","cloneConfig","onViewResetPrinter","onViewSetupPrinter","onViewActivate","GSTunnel","Proxy","page","limit","save","Date","now","start","conf","fromHex","join","GSCustomization","Scripts","getScripts","header","footer","ui","setScripts","GSFilterFido","large","Fido","isActive","switcher","selectedIndex","onSwitch","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","add","onViewToggle","active","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","prepare","toUpperCase","outq","library","userName","spoolName","GSScheduler","mapState","true","false","status","Scheduler","runNow","GSUsers","Users","commit","resync","confid","devtype","driver","drawer1","drawer2","enhanced","display","program","printer","GSWorkstations","Tweaks","terminal","Manage","listSessions","prompt","trim","sendMessage","sessionID","deviceID","loging","killDevice","sendMessages","killSessions","tmp","disconnectedCallback","values","onViewViewSession","closed","onclose","setInterval","clearInterval","updateScreen","Keyboard","listen","getScreen","Application","Binary","GSWebmodules","WebModules","GSAbout","GSModal","undefined","html","GSCertBlocked","getBlocked","setBlocked","GSCertClient","generateClient","arr","raw","GSCertImport","setFromPEM","rootCAPub","rootCAPriv","serverPub","serverPriv","rootPass","serverPass","input","file","files","buff","arrayBuffer","pfx","setFromPFX","GSCertOpt","loadSafe","loadConfig","saveConfig","GSLoginAdmin","getConfig","newAuth","GSLoginDefaults","getDefaults","saveDefaults","GSOtpOptions","getOtp","saveOTP","GSRegisterBiometrics","isAllowed","register","GSRegisterOtp","scratch","qrcode","token","getUrl","b64","key","replaceAll","scratchCodes","alt","GSNetwork","getInterface","redirect","nodes","setInterface","GSSystem","setConfig","reloadKerberors","GSWorkstation","def","cssBody","order","map","GSFilter","IP","onChange","typeField","valueField","pattern","MASK","GSService","classList","isNumber","isBool","checked","module","property","GSPrinterReset","visible","Printer","GSPrinterSetup","hpt","onHPT","hostTransform","setup","GSActivate","Activator","activate","GSKerberos","Kerberos","load","GSMigrate","migrate","path","isPEM","isExt","isPFX","endsWith","toHex","hex","fileToHex","loadFromPEM","loadFromPFX"],"mappings":"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"}