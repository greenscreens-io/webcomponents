{"version":3,"file":"io.greenscreens.admin.min.js","sources":["../modules/utils/Utils.mjs","../modules/utils/WebAuthn.mjs","../../../modules/base/GSLog.mjs","../../../modules/base/GSUtil.mjs","../modules/dialogs/GSAsbtractDialog.mjs","../modules/shell/Login.mjs","../modules/shell/Sidebar.mjs","../modules/shell/Header.mjs","../modules/shell/Shell.mjs","../modules/views/GSSearch.mjs","../modules/views/BaseViewUI.mjs","../modules/views/configs/GSConfiguration.mjs","../modules/views/configs/GSTunnel.mjs","../modules/views/configs/GSCustomization.mjs","../modules/views/filters/GSFilterFido.mjs","../modules/views/filters/GSFilterIP.mjs","../modules/views/filters/GSFilterMobile.mjs","../modules/views/keys/GSApiKeys.mjs","../modules/views/keys/GSOtp.mjs","../modules/views/keys/GSBiometrics.mjs","../modules/views/others/GSPrinting.mjs","../modules/views/others/GSSchedulers.mjs","../modules/views/others/GSUsers.mjs","../modules/views/system/GSServices.mjs","../modules/views/system/GSWorkstations.mjs","../modules/views/system/GSWebmodules.mjs","../modules/dialogs/GSAbout.mjs","../modules/dialogs/GSCertClient.mjs","../modules/dialogs/GSCertOpt.mjs","../modules/dialogs/GSCertRevoke.mjs","../modules/dialogs/GSLoginAdmin.mjs","../modules/dialogs/GSLoginDefaults.mjs","../modules/dialogs/GSOtpOptions.mjs","../modules/dialogs/GSRegisterBiometrics.mjs","../modules/dialogs/GSRegisterOtp.mjs","../modules/dialogs/GSNetwork.mjs","../modules/dialogs/GSSystem.mjs","../modules/dialogs/GSWorkstation.mjs","../modules/dialogs/GSFilter.mjs","../modules/dialogs/GSService.mjs","../modules/dialogs/GSPrinterReset.mjs","../modules/dialogs/GSPrinterSetup.mjs","../modules/dialogs/GSActivate.mjs","../modules/dialogs/GSKerberos.mjs","../modules/dialogs/GSMigrate.mjs","../modules/dialogs/GSCertImportStore.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSComponents,GSDOM,GSFunction,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport default class Utils {\r\n\r\n    static setUI(value) {\r\n        const el = document.createElement(value);\r\n        document.body.insertAdjacentElement('beforeend', el);\r\n    }\r\n\r\n    static unsetUI(value) {\r\n        const list = GSDOM.queryAll(value);\r\n        list.forEach(el => el.remove());\r\n    }\r\n\r\n    static get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    static get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (success) {\r\n\t\t\tUtils.notify?.info('Info', msg);\r\n\t\t} else {\r\n        \tUtils.notify?.danger('Error', msg);\t\t\t\r\n\t\t}\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    static handleResponse(msg) {\r\n        const txt = (msg.message || msg)?.toString();\r\n        if (txt) Utils.inform(msg.success === true, txt);\r\n    }    \r\n\r\n    /**\r\n     * Convert hex string to Uint8Array\r\n     * @param {string} data \r\n     * @returns {Uint8Array}\r\n     */\r\n    static fromHex(data) {\r\n        let a = [];\r\n        for (let i = 0, len = data.length; i < len; i += 2) {\r\n            a.push(parseInt(data.substring(i, 2), 16));\r\n        }\r\n\r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    /**\r\n     * Detect data and convert to Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            str\r\n     */\r\n    static #validateData(src) {\r\n        var data = null;\r\n        if (src instanceof Array) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof ArrayBuffer) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof Uint8Array) {\r\n            data = src;\r\n        } else if (src instanceof String || typeof src === 'string') {\r\n            data = utf8ToBuffer(src);\r\n        } else if (src.toArrayBuffer) {\r\n            data = new Uint8Array(src.toArrayBuffer());\r\n        } else {\r\n            throw \"Invalid input, must be String or ArrayBuffer or Uint8Array\";\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert String to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static stringToBlob(val) {\r\n        return new Blob([val], {\r\n            encoding: \"UTF-8\",\r\n            type: \"text/plain;charset=UTF-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert Binary to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static binaryToBlob(val) {\r\n        const data = Utils.#validateData(val);\r\n        return new Blob([data], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    /**\r\n     * Download raw data \r\n     * @param {string} name \r\n     * @param {string|array} data \r\n     */\r\n    static download(name, data) {\r\n        if (!data) return false;\r\n        const blob = GSUtil.isString(data) ? Utils.stringToBlob(data) : Utils.binaryToBlob(data);\r\n        const link = URL.createObjectURL(blob);\r\n        try {\r\n            const a = document.createElement('a');\r\n            a.download = name;\r\n            a.href = link;\r\n            a.click();\r\n        } finally {\r\n            setTimeout(() => URL.revokeObjectURL(link), 250);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static revokeObjectURL(url) {\r\n        if (url?.indexOf('blob:') === 0) URL.revokeObjectURL(url)\r\n    }\r\n\r\n    static openInNewTab(url, params, target = '_blank') {\r\n\r\n        const win = globalThis.open(url, target, params || null);\r\n\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        win.addEventListener('beforeunload', () => {\r\n            Utils.revokeObjectURL(url);\r\n            return null;\r\n        });\r\n\r\n        return win;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Module for WebAuth protocol\r\n */\r\nexport default class WebAuthn {\r\n\r\n    static #IP_REGEXP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\r\n    static #api = `${location.origin}/services/api?q=/wsauth`;\r\n    static #svc = `${location.origin}/services/rpc`;\r\n    static #headers = { 'x-type': 'admin' };\r\n\r\n    static {\r\n        Object.freeze(WebAuthn);\r\n    }\r\n\r\n    static #fromBinary(o) {\r\n        return Uint8Array.from(atob(o), (c) => {\r\n            return c.charCodeAt(0)\r\n        });\r\n    }\r\n\r\n    static #toBinary(data) {\r\n        return btoa(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n    }\r\n\r\n    static isAllowed() {\r\n        return (!WebAuthn.#IP_REGEXP.test(location.hostname) && location.protocol === 'https:') || location.hostname === 'localhost';\r\n    }\r\n\r\n    static get #cfg() {\r\n        return { api: WebAuthn.#api, service: WebAuthn.#svc, headers: WebAuthn.#headers };\r\n    }\r\n\r\n    static async #engine() {\r\n        if (!io?.greenscreens?.WebAuthnController) return Engine.init(WebAuthn.#cfg);\r\n    }\r\n\r\n    static async #callRemote(action, finish = false, data) {\r\n        await WebAuthn.#engine();\r\n        return await io.greenscreens.WebAuthnController[action](data, finish);\r\n    }\r\n\r\n    static async #doRegister(data) {\r\n\r\n        const resp = await WebAuthn.#callRemote('register', false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const uid = WebAuthn.#fromBinary(o.uid);\r\n\r\n        const obj = {\r\n            publicKey: {\r\n                rp: {\r\n                    name: o.rp,\r\n                    id: location.hostname\r\n                },\r\n\r\n                challenge: challenge,\r\n\r\n                user: {\r\n                    id: uid,\r\n                    name: o.name,\r\n                    displayName: o.displayName\r\n                },\r\n\r\n                // https://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n                /*\r\n                    {type: \"public-key\", alg: -7}\r\n                    {type: \"public-key\", alg: -35}\r\n                    {type: \"public-key\", alg: -36}\r\n                    {type: \"public-key\", alg: -257}\r\n                    {type: \"public-key\", alg: -258}\r\n                    {type: \"public-key\", alg: -259}\r\n                    {type: \"public-key\", alg: -37}\r\n                    {type: \"public-key\", alg: -38}\r\n                    {type: \"public-key\", alg: -39}\r\n                    {type: \"public-key\", alg: -8}\r\n                     */\r\n                pubKeyCredParams: [{\r\n                    type: \"public-key\",\r\n                    alg: -7\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -257\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -41\r\n                }\r\n                ],\r\n\r\n                attestation: \"direct\",\r\n                timeout: 60000,\r\n                excludeCredentials: [],\r\n                extensions: {},\r\n                authenticatorSelection: {\r\n                    requireResidentKey: false,\r\n                    userVerification: \"preferred\"\r\n                    //authenticatorAttachment : \"cross-platform\"\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const cred = await navigator.credentials.create(obj);\r\n        if (cred == null) throw new Error('Credential not found!');\r\n\r\n        const auth = {\r\n            uid: o.uid,\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            attestationObject: WebAuthn.#toBinary(cred.response.attestationObject),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote('register', true, auth);\r\n\r\n    }\r\n\r\n    static async #doAuthenticate(action, data) {\r\n\r\n        const resp = await WebAuthn.#callRemote(action, false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const creds = [];\r\n\r\n        if (action === 'test' && o.uid.length === 0) {\r\n            throw new Error('Invalid credentials!');\r\n        }\r\n\r\n        o.uid.every((v) => {\r\n            const uid = WebAuthn.#fromBinary(v);\r\n            const o = {\r\n                type: \"public-key\",\r\n                id: uid\r\n            };\r\n            //o.transports: [\"usb\", \"nfc\", \"ble\"],\r\n            creds.push(o);\r\n            return true;\r\n        });\r\n\r\n        const obj = {\r\n            challenge: challenge,\r\n            rpId: location.hostname,\r\n            userVerification: \"preferred\",\r\n            timeout: 60000,\r\n\r\n            allowCredentials: creds,\r\n            extensions: {\r\n                uvm: true, // RP wants to know how the user was verified\r\n                loc: false,\r\n                txAuthSimple: \"Could you please verify yourself?\"\r\n            }\r\n        };\r\n\r\n        const cred = await navigator.credentials.get({ publicKey: obj });\r\n\r\n        if (cred == null) {\r\n            throw new Error('Credential not found!');\r\n        }\r\n\r\n        const auth = {\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            authenticatorData: WebAuthn.#toBinary(cred.response.authenticatorData),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON),\r\n            signature: WebAuthn.#toBinary(cred.response.signature),\r\n            userHandle: WebAuthn.#toBinary(cred.response.userHandle)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote(action, true, auth);\r\n    }\r\n\r\n    static register(data) {\r\n        return WebAuthn.#doRegister(data);\r\n    }\r\n\r\n    static authenticate(data) {\r\n        return WebAuthn.#doAuthenticate(\"authenticate\", data);\r\n    }\r\n\r\n    static update(data) {\r\n        return WebAuthn.#doAuthenticate('update', data);\r\n    }\r\n\r\n    static unregister(data) {\r\n        return WebAuthn.#doAuthenticate('unregister', data);\r\n    }\r\n\r\n    static test(data) {\r\n        return WebAuthn.#doAuthenticate('test', data);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\tstatic #JSON_NORMALIZE = /(['\"])?([a-z0-9A-Z_]+)(['\"])?\\s*:/g;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}, normalize = true) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(normalize ? GSUtil.normalizeJson(val) : val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tif (val) GSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Normalize unquoted JSON\r\n\t * @param {*} val \r\n\t * @returns \r\n\t */\r\n\tstatic normalizeJson(val = '') {\r\n\t\treturn val?.replace(GSUtil.#JSON_NORMALIZE, '\"$2\": ');\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport { GSAttr, GSDOM, GSLoader, GSDialog } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport GSUtil from '../../../../modules/base/GSUtil.mjs';\r\n\r\nexport default class GSAsbtractDialog extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog', GSAsbtractDialog);\r\n        Object.seal(GSAsbtractDialog);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        //me.cssTitle = 'fs-5 fw-bold text-muted';\r\n        //me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return GSAttr.get(this, 'content', '');\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    /**\r\n     * Override GSDialog method, to attach UI slot\r\n     */\r\n    async onBeforeReady() {\r\n\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n\r\n        me.on('data', me.#onFormData.bind(me));\r\n        me.on('error', me.#onFormError.bind(me));\r\n\r\n        if (me.dialogTemplate) {\r\n            let tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n            tpl = GSDOM.parse(tpl);\r\n            tpl.body.firstElementChild.slot = 'body';\r\n            GSDOM.appendChild(me, tpl.body.firstElementChild);\r\n            //GSDOM.setHTML(me, tpl);\r\n        }\r\n        if (me.dialogTitle) me.title = me.dialogTitle;\r\n    }\r\n\r\n    /**\r\n     * Override parent class method\r\n     * @param {*} data \r\n     */\r\n    open(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        super.open(data);\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onData(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Wait dialog\r\n     */\r\n    get waiter() {\r\n        return Utils.waiter;\r\n    }\r\n\r\n    /**\r\n     * Update dialog forms \r\n     */\r\n    #update(data) {\r\n        if (GSUtil.isJson(data)) {\r\n            const me = this;\r\n            me.reset();\r\n            me.forms.forEach(f => f.data = data);\r\n            me.emit('change');\r\n        }\r\n    }\r\n\r\n    #onFormError(e) {\r\n        Utils.inform(false, 'Some fields are invalid!');\r\n    }\r\n\r\n    async #onFormData(e) {\r\n        // GSEvents.prevent(e);\r\n        const me = this;\r\n        let sts = false;\r\n        try {\r\n            me.disable();\r\n            sts = await me.onData(e.detail.data);\r\n            Utils.notify.secondary('', 'Changes applied!', false, 0.75, 0.2);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        } finally {\r\n            me.enable();\r\n            if (sts) me.close();\r\n        }\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading Login class\r\n * @module dialogs/Login\r\n */\r\nimport {GSAttr,GSDOM,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport GSAsbtractDialog from '../dialogs/GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\n\r\nglobalThis.Tn5250 = {\r\n    version: '6.0.0.300',\r\n    build: '25.07.2023.',\r\n    release: 20230725, \r\n    opt : {\r\n        lic : true\r\n    }\r\n};\r\n\r\nexport default class Login extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-login', Login);\r\n        Object.seal(Login);\r\n    }\r\n\r\n    static #headers = { 'x-type': 'admin' };\r\n    static #cred = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n    static #api1 = `${location.origin}/services/api?q=/rpc`;\r\n    static #svc1 = `${location.origin}/services/rpc`;\r\n\r\n    static #api2 = `${location.origin}/services/api?q=/wsadmin`;\r\n    static #svc2 = `${location.origin}/services/wsadmin`.replace('http', 'ws');\r\n\r\n    static #auth = `${location.origin}/services/auth`;\r\n\r\n    #engine = null;\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        //me.visible = true;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n        me.cssTitle = 'd-flex justify-content-center w-100';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//shell/login.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        const url = globalThis.GSC?.logoUrl || '../assets/img/logo.png';\r\n        return `<img src=\"${url}\" alt=\"...\" height=\"30\" width=\"180\">`; // 'Admin Login';\r\n    }\r\n\r\n    get #otp() {\r\n        return this.query('input[name=\"otp\"]');\r\n    }\r\n\r\n    get #password() {\r\n        return this.query('input[name=\"password\"]');\r\n    }\r\n\r\n    async onFormInit(form) {\r\n    \r\n        super.onFormInit(form, { });\r\n    }\r\n\r\n    async beforeOpen() {\r\n\r\n        console.clear();\r\n\r\n        const me = this;\r\n        me.#initDemo();\r\n        Utils.unsetUI('gs-admin-shell');\r\n\r\n        if (DEMO) return me.#toggle(false);\r\n\r\n        await GSUtil.timeout(5);\r\n        await me.#initAuth();\r\n\r\n        me.#engine = await me.#engineLogin();\r\n\r\n        me.#doWebAuth();\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        if (globalThis.DEMO) {\r\n            me.#shell();\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            me.#toggle(true);\r\n            const cred = Object.assign(data, Login.#cred);\r\n            await io.greenscreens.AdminController.login(cred);\r\n        } catch (e) {\r\n            me.onOpen();\r\n            throw e;\r\n        }\r\n\r\n        me.#postLogin();\r\n    }\r\n\r\n    async #doWebAuth() {\r\n        const me = this;\r\n        if (!me.#isWebauth) return;\r\n        const data = { appID: 0, ipAddress: Tn5250.opt.ip };\r\n        const cred = Object.assign(data, Login.#cred);\r\n        try {\r\n            const o = await WebAuthn.authenticate(cred);\r\n            if (o.success) document.cookie = 'X-Authorization=' + o.srl + '; path=/services/wsadmin';\r\n            me.#postLogin();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n            if (me.#webauthOnly) location.reload();\r\n        }\r\n    }\r\n\r\n    async #postLogin() {\r\n\r\n        console.clear();\r\n        const me = this;\r\n\r\n        me.#engine?.stop();\r\n        me.#engine = await me.#engineShell();\r\n\r\n        me.#engine.SocketChannel.on('offline', (e) => {\r\n            console.log('Socket channel closed!');\r\n            Utils.handleError(e);\r\n            me.#engine?.stop();\r\n            location.reload();\r\n        });\r\n\r\n        me.#shell();\r\n        return true;\r\n    }\r\n\r\n    get #isWebauth() {\r\n        return Tn5250?.opt?.fido;\r\n    }\r\n\r\n    get #isOtp() {\r\n        return Tn5250?.opt?.otp;\r\n    }\r\n\r\n    get #webauthOnly() {\r\n        return this.#isWebauth && !this.#isOtp;\r\n    }\r\n\r\n    #initDemo() {\r\n        //if (globalThis.hasOwnProperty('DEMO')) return;\r\n        if ('DEMO' in globalThis) return;\r\n        globalThis.DEMO = typeof Engine !== 'function';\r\n    }\r\n\r\n    #toggle(sts = false) {\r\n\t\tconst me = this;\r\n\t\tif (sts) {\t\t\t\r\n\t\t\tme.disable();\r\n\t\t} else {\r\n\t\t\tme.enable();\r\n\t\t\tme.form?.elements[0]?.focus();\r\n\t\t}\r\n    }\r\n\r\n    async #initAuth() {\r\n        delete globalThis.io;\r\n        const res = await fetch(Login.#auth);\r\n        if (!res.ok) return false;\r\n        const opt = globalThis.Tn5250.opt = await res.json();\r\n        globalThis.Tn5250.opt = opt;\r\n        const me = this;\r\n        GSAttr.toggle(me.#otp, 'disabled', !opt.otp);\r\n        GSAttr.toggle(me.#password, 'disabled', !opt.otp);\r\n        GSDOM.toggleClass(me.#otp, 'd-none', !opt.otp);\r\n        if (me.#webauthOnly) {\r\n            me.closable = false;\r\n            me.body.parentElement.innerHTML = '<div class=\"m-3 text-center fs-5\">Use security key to access Web Admin console.</div>';\r\n        }\r\n    }\r\n\r\n    async #engineLogin() {\r\n        return this.#getEngine(Login.#api1, Login.#svc1);\r\n    }\r\n\r\n    async #engineShell() {\r\n        return this.#getEngine(Login.#api2, Login.#svc2);\r\n    }\r\n\r\n    async #getEngine(api, svc) {\r\n        delete globalThis.io;\r\n        this.#engine = null;\r\n        return Engine.init({ api: api, service: svc, headers: Login.#headers });\r\n    }\r\n\r\n    #shell() {\r\n        this.#clear();\r\n        Utils.setUI('gs-admin-shell');\r\n    }\r\n\r\n    #clear() {\r\n        Utils.unsetUI('gs-admin-shell-login');\r\n        Utils.unsetUI('gs-admin-shell');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class SidebarUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport { GSComponents, GSFunction, GSElement, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        try {\r\n            const fnName = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n            const action = GSUtil.capitalizeAttr(fnName);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    // logout and replace with login tag\r\n    async logout() {\r\n        try {\r\n            Utils.unsetUI('gs-admin-shell-login');\r\n            Utils.unsetUI('gs-admin-shell');\r\n            const o = DEMO ? DEMO : await io.greenscreens.Session.closeSession();\r\n            return o.success;\r\n        } finally {\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n    // restart server\r\n    async restart() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.restart();\r\n        Utils.inform(o.success, 'Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.verifySSLClient(2);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        Utils.inform(true, msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.regenerate();\r\n        if (o.code === 'RSA') Utils.inform(true, 'New encryption keys generated');\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.request(true);\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        //Utils.download(\"server_public.txt\", data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generate(true);\r\n        Utils.inform(true, 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=0`);\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=1`);\r\n    }\r\n\r\n    explorer() {\r\n        Utils.openInNewTab(`${location.origin}/admin/explorer`, 'toolbar=no,scrollbars=yes,resizable=yes');\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=conf`);\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=log`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\nimport {GSElement} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Class representing UI Shell\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class ShellUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.GSC?.company && me.company) me.company.innerHTML = me.GSC.company;\r\n    }\r\n\r\n    get company() {\r\n        return this.getByID('company');\r\n    }\r\n\r\n    get GSC() {\r\n        return globalThis.GSC;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\n\r\nimport { GSAttr, GSEvents, GSElement, GSEnvironment } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\n\r\nimport { GSUtil, GSElement, GSEvents, GSAttr } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n    \r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        globalThis.GS_LOG_ACTION = true;\r\n        GSEvents.monitorAction(me, 'view');\r\n        requestAnimationFrame(() => {\r\n            if (!me.#table) return;\r\n\t\t\tme.store.filter = me.#table.filters;\r\n\t\t\tme.store.sort = me.#table.sorters;\r\n\t\t\tme.onViewRefresh();\r\n\t\t});       \r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.store?.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.#table?.store;\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get form() {\r\n        return this.modal?.form;\r\n    }\r\n\r\n    get waiter() {\r\n        return Utils.waiter;\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async onViewExport() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewClone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n\r\n        try {\r\n\r\n            const sts = await me.onClone(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            Utils.notify.secondary('', 'Record cloned!');\r\n            me.onViewRefresh();\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewRemove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => !o.hasOwnProperty(me.recID) || (o[me.recID] !== data[me.recID]));\r\n            me.store.setData(subset);\r\n            Utils.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewDetails(e) {\r\n\r\n        const me = this;\r\n        const data = await me.onDetails(e.detail.data[0]);\r\n        if (!data) return;\r\n\r\n        const modal = me.modal;\r\n        modal.open(data);\r\n        const result = await modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            modal.reset();\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.load();\r\n            Utils.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewCreate(e) {\r\n\r\n        const me = this;\r\n\r\n        const modal = me.modal;\r\n        const tab = modal.query('GS-TAB');\r\n        if (tab) tab.index = 0;\r\n        modal.open();\r\n        const result = await modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            Utils.notify.primary('', 'Record created!');\r\n            \r\n            modal.reset();\r\n            me.onViewRefresh(e);\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async onViewRefresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        try {\r\n            if (Array.isArray(data) && data.length > 0) {\r\n                me.store.setData(data);\r\n                // me.store.firstPage();\r\n            } else {\r\n                me.store.read();\r\n            }\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    onViewSearch(e) {\r\n        const me = this;\r\n        me.store.filter = e.detail.value;\r\n        me.store.read();\r\n    }\r\n\r\n\tonError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n    /**\r\n     * Handle data before opening the modal form\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async onDetails(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record cloned from existing one.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onClone(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport { GSComponents, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(() => me.#update());\r\n    }\r\n    \r\n    async #update() {\r\n        await GSUtil.timeout(1000);\r\n        const me = this;\r\n\r\n        const ctx = me.query('gs-context');\r\n        // If license installer available\r\n        if (!me.#hasInstaller) {\r\n            // If license installer not available; remove activator\r\n            ctx?.self?.querySelector('[data-action=\"activate\"]')?.remove();\r\n        }\r\n    }\r\n\r\n    get #hasInstaller() {\r\n        return Tn5250?.opt?.lic == true;\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    get activateDialog() {\r\n        return GSComponents.get('modal-activate');\r\n    }\r\n\r\n    get printerReset() {\r\n        return GSComponents.get('modal-reset');\r\n    }\r\n\r\n    get printerSetup() {\r\n        return GSComponents.get('modal-setup');\r\n    }\r\n\r\n    get validate() {\r\n        return GSComponents.get('modal-validate');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.list(false);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.unsetHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.cloneConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    onViewResetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerReset.open(data);\r\n    }\r\n\r\n    onViewSetupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerSetup.open(data);\r\n    }\r\n\r\n    onViewActivate(e) {\r\n        const data = e.detail.data[0];\r\n        this.activateDialog.open(data);\r\n    }\r\n\r\n    async onViewValidateServer(e) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Hosts.validate(data);\r\n            const body = `<pre>${o.msg}</pre>`;\r\n            me.validate.confirm('Validate', body);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from \"../../utils/Utils.mjs\";\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        data.name = `${data.name} - ${Date.now()}`;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewSstart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.start(data.id);\r\n        Utils.inform(o.success, 'Tunnel started');\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.stop(data.id);\r\n        Utils.inform(o.success, 'Tunnel stopped');\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.restart(data.id);\r\n        Utils.inform(o.success, 'Tunnel restarted');\r\n    }\r\n\r\n    async onViewDownload(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.download(data.id);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud',\r\n            'cloud: ' + location.origin,\r\n            'token: ' + o.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n        ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.msg));\r\n        Utils.download('server.config', conf.join('\\n'));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scripts.getScripts();\r\n        me.header.value = o.data?.header || '';\r\n        me.footer.value = o.data?.footer || '';\r\n        me.ui.value = o.data?.ui || '';\r\n    }\r\n\r\n    async save() {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Scripts.setScripts(me.header.value, me.footer.value, me.ui.value);\r\n            Utils.inform(o.success, 'Data saved!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.activity(val);\r\n            Utils.inform(true, 'Filter monitoring changed!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.activity(val);\r\n            Utils.inform(true, 'Mobile monitoring changed!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.add(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.update(data.id, data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","\r\n/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.update(data.id, data.active);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.remove(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    #prepare(json) {\r\n        json.uuid = json.uuid.toUpperCase();\r\n        json.host = json.host.toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.library = (json.library || '').toUpperCase();\r\n        json.userName = (json.userName || '').toUpperCase();\r\n        json.spoolName = (json.spoolName || '').toUpperCase();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    #mapState = { \"\": 0, \"true\": 1, \"false\": 2 };\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const type = filter.type ? parseInt(filter.type, 10) : null;\r\n        const status = me.#mapState[filter.status] || 0;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.list(me.store.skip, me.store.limit, type, status);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewRun(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.runNow(data.id);\r\n        Utils.inform(o.success, 'Task started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewCommit(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.commit();\r\n            Utils.inform(o.success, 'Sync with database ok!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n    async onViewResync(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.resync();\r\n            Utils.inform(o.success, 'Sync from storage started!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n\r\n    #prepare(json) {\r\n        json.confid = parseInt(json.confid || 0);\r\n        json.devtype = parseInt(json.devtype || 0);\r\n        json.driver = parseInt(json.driver || 0);\r\n        json.drawer1 = parseInt(json.drawer1 || -1);\r\n        json.drawer2 = parseInt(json.drawer2 || -1);\r\n        json.enhanced = parseInt(json.enhanced || 0);\r\n        json.uuid = (json.uuid || '').toUpperCase();\r\n        json.host = (json.host || '').toUpperCase();\r\n        json.user = (json.user || '').toUpperCase();\r\n        json.display = (json.display || '').toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.program = (json.program || '').toUpperCase();\r\n        json.printer = (json.printer || 'Default');\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.list();\r\n        return o.data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport {GSFunction} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    #terminal = {};\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Manage.listSessions(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onViewMessage(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, data.message);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewLogging(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.loging(data);\r\n            if (o.msg === 'false') {\r\n                const url = location.origin + '/services/logs?id=' + o.code;\r\n                Utils.download('server.log', url);\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKill(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killDevice(data);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewMessageFilter(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = Object.assign(me.filter);\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessages(me.filter);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKillFilter(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killSessions(me.filter);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewExport(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.export(0, 0, me.filter);\r\n            const tmp = JSON.stringify(o.data);\r\n            Utils.download('workstations.json', tmp);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        Object.values(me.#terminal)\r\n            .filter(el => GSFunction.isFunction(el.close))\r\n            .forEach(el => el.close());\r\n        me.#terminal = {};\r\n    }\r\n\r\n    onViewViewSession(e) {\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO mode.');\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n\r\n        let win = me.#terminal[data.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        const params = 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes';\r\n        const url = `${location.origin}/terminal/?d=0&k=0`;\r\n        win = Utils.openInNewTab(url, params);\r\n        win.onclose = () => delete me.#terminal[data.deviceID];\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        const id = setInterval(() => {\r\n\r\n            if (!win.Tn5250) return;\r\n            clearInterval(id);\r\n\r\n            me.#terminal[data.deviceID] = win;\r\n            win.document.title = `Terminal - ${data.uuid} - ${data.host} - ${data.display}`;\r\n            me.#updateScreen(win, data);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) => {\r\n                if (name === 'PF5') me.#updateScreen(win, data);\r\n            });\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async #updateScreen(win, data) {\r\n        if (!win?.Tn5250) return;\r\n        try {\r\n            const o = await io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n            win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.list();\r\n        return o.data;\r\n    }\r\n\r\n    async onViewStart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.start(data.name);\r\n        Utils.inform(o.success, 'Module started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.stop(data.name);\r\n        Utils.inform(o.success, 'Module stopped!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.restart(data.name);\r\n        Utils.inform(o.success, 'Module restarted!');\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport { GSModal } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '20.10.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get version() {\r\n        return globalThis.Tn5250?.opt?.version || GSAbout.#version;\r\n    }\r\n\r\n    get build() {\r\n        return globalThis.Tn5250?.opt?.build || GSAbout.#build;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${me.version}</span></div>\r\n            <div>Build : <span>${me.build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertClient extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generateClient(data);\r\n\r\n        const arr = Utils.fromHex(o.msg);\r\n        const raw = new Uint8Array(arr);\r\n        Utils.download(o.code, raw);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport { GSLoader } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async onFormInit(form, data) {\r\n        if(DEMO)  {\r\n            data = await GSLoader.loadSafe('./data/cert.json', 'GET', null, true);            \r\n        } else {\r\n            data = await io.greenscreens.Certificate.loadConfig();\r\n            data = data.data;\r\n        }\r\n        super.onFormInit(form, data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.saveConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2023 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertRevoke class\r\n * @module dialogs/GSCertRevoke\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSCertRevoke extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certrevoke', GSCertRevoke);\r\n        Object.seal(GSCertRevoke);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-revoke.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Revoke Client Certificate';\r\n    }\r\n\r\n    async onData(data) {\r\n\t\tif (DEMO) return DEMO.success;\r\n\t\tconst me = this;\r\n\t\tif (!data?.email) return false;\r\n\t    const o = await io.greenscreens.Certificate.revokeClient(data.email);\r\n\t    if (o.msg) Utils.notify.secondary('Client certificate revoking', o.msg, true, 4, 0.2);\r\n\t    me.enable();\r\n\t    me.visible = false;\r\n\t    /*\r\n\t\tsuper.onData();\r\n        return o.success;\r\n        */\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        delete o.data.password;\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Session.newAuth(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getDefaults();\r\n        delete o.data.password;\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveDefaults(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getOtp();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveOTP(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterBiometrics class\r\n * @module dialogs/GSRegisterBiometrics\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSRegisterBiometrics extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-bioreg', GSRegisterBiometrics);\r\n        Object.seal(GSRegisterBiometrics);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.align = 'center';\r\n        me.cancelable = false;\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-bio.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register Biometric';\r\n    }\r\n\r\n    async beforeOpen() {\r\n\r\n        const me = this;\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not supported in DEMO mode!');\r\n\r\n        if (!WebAuthn.isAllowed()) {\r\n            const msg = 'FIDO2 allowed only on secured url <br>and valid domain name!'\r\n            me.body = msg;\r\n            return Utils.inform(false, msg);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData() {\r\n        const params = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n        params.appID = 0;\r\n        params.ipAddress = Tn5250.opt.ip;\r\n        try {\r\n            const o = await WebAuthn.register(params);\r\n            console.log(o);\r\n            me.body = 'Biometric Web Admin login activated!';\r\n        } catch (e) {\r\n            me.body = Utils.handleError(e) || 'Biometric Web Admin login not activated!';\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport {GSDOM} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSRegisterOtp extends GSAsbtractDialog {\r\n\r\n    static #URL = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register OTP';\r\n    }\r\n\r\n    get scratch() {\r\n        return GSDOM.query(this, '#scratch');\r\n    }\r\n\r\n    get qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get token() {\r\n        return GSDOM.query(this, '#token');\r\n    }\r\n\r\n    getUrl(token) {\r\n        const b64 = self.btoa(token);\r\n        return `${location.origin}${GSRegisterOtp.#URL}${b64}`;\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        if (DEMO) return;\r\n        const o = await io.greenscreens.OAuth.register();\r\n        const me = this;\r\n        me.#download(o.data);\r\n        me.#update(o.data);\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async beforeOpen() {\r\n        return DEMO ? Utils.inform(false, 'Not available in DEMO!') : true;\r\n    }\r\n\r\n    async onData() {\r\n        return true;\r\n    }\r\n\r\n    #update(o) {\r\n        const me = this;\r\n        const url = me.getUrl(o.url);\r\n        me.qrcode.parentElement.href = url;\r\n        me.qrcode.src = url;\r\n        me.qrcode.title = o.url;\r\n        me.token.innerHTML = o.key.replaceAll('=', '');\r\n        me.scratch.innerHTML = o.scratchCodes.join('&nbsp;');\r\n    }\r\n\r\n    #download(o) {\r\n        const alt = o.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            o.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            o.key.replaceAll('=', ''),\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n\r\n        alt.every((v) => {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getInterface();\r\n        o.data.restart = o.data.restart ? '1' : '0';\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setInterface(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSSystem extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    async reloadKerberos() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.reloadKerberors();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstation class\r\n * @module dialogs/GSWorkstation\r\n */\r\nimport {GSLoader} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSWorkstation extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-workstation', GSWorkstation);\r\n        Object.seal(GSWorkstation);\r\n    }\r\n\r\n    #def = null;\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.cssBody = 'NA';\r\n        super.connectedCallback();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return null;\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Workstation Info';\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        this.#def = await GSLoader.loadSafe('data/wks.json','GET',null,true);\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        const css = 'fw-bold w-25 text-bg-secondary';\r\n        const html = ['<div class=\"container p-2\"><div class=\"row\"><div class=\"col-xs-12\"><table class=\"table border\"><tbody>'];\r\n        const body = me.#def.order.filter(v => me.#def.data[v])\r\n            .map(v => `<tr><td class=\"${css}\">${me.#def.data[v]}</td><td>${data[v] || ''}</td></td>`).join('');\r\n        html.push(body);\r\n        html.push('</tbody></table></div></div></div>');\r\n        me.body = html.join('');\r\n        super.open();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilter class\r\n * @module dialogs/GSFilter\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSFilter extends GSAsbtractDialog {\r\n\r\n    //\"((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\.?\\\\b){4}\";\r\n    /*\r\n    static #IP = \"((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\\\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\";\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}/[0-9]{1,2}$`, `^${GSFilter.#IP}-${GSFilter.#IP}$`];\r\n    */\r\n    static #SEG = \"(?:(?:[0-9]{1,2})|(?:1[0-9]{2,2})|(?:2[0-4][0-9])|(?:25[0-5])|\\\\*)\";\r\n    static #CDIR = \"(?:/[1-9]{1,2})\";\r\n    static #IP = `(${GSFilter.#SEG}\\\\.){3}${GSFilter.#SEG}`; \r\n    static #SEGM = `${GSFilter.#SEG}(?:\\-${GSFilter.#SEG})?`;\r\n    static #IPM = `(${GSFilter.#SEGM}\\\\.){3}${GSFilter.#SEGM}`;\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}${GSFilter.#CDIR}$`, `^${GSFilter.#IPM}$`];\r\n\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-filter', GSFilter);\r\n        Object.seal(GSFilter);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n        me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//forms/filter-ip.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'IP Filter';\r\n    }\r\n\r\n    get typeField() {\r\n        return this.query('select[name=type]');\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[me.typeField.value];\r\n    }   \r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        if (me.valueField) me.valueField.pattern = GSFilter.#MASK[me.form.data?.type];\r\n        super.onOpen(data);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSService class\r\n * @module dialogs/GSService\r\n */\r\nimport {GSAttr,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSService extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-service', GSService);\r\n        Object.seal(GSService);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/service.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Service Module Property';\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.form?.reset();\r\n        me.valueField.type = 'text';\r\n        me.valueField.classList.value = 'form-control';\r\n        me.valueField.parentElement.classList.value = '';\r\n\r\n        if (GSUtil.isNumber(data.value)) {\r\n            me.valueField.type = 'number';\r\n        }\r\n\r\n        if (GSUtil.isBool(data.value)) {\r\n            me.valueField.type = 'checkbox';\r\n            me.valueField.classList.value = 'form-check-input';\r\n            me.valueField.parentElement.classList.value = 'form-check form-switch fs-5';\r\n        }\r\n\r\n        super.open(data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        const type = GSAttr.get(me.valueField, 'type');\r\n\r\n        if (type === 'checkbox') {\r\n            data.value = me.valueField.checked === true;\r\n        }\r\n\r\n        if (type === 'number') {\r\n            data.value = parseInt(data.value || 0) || 0;\r\n        }\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSPrinterReset extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        super.open();\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        super.onFormInit(form, this.#data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.reset(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport {GSAttr, GSDOM, GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, 'select[name=\"hostTransform\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(250);\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        });\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        delete me.#data.drawer1;\r\n        delete me.#data.drawer2;\r\n        me.form.reset();\r\n        me.#update(true);\r\n        super.open();\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        super.onFormInit(form, this.#data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            data.hostTransform = parseInt(data.hostTransform) === 1;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.setup(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n    #onHPT(e) {\r\n        this.#update(e.target.value !== '1');\r\n    }\r\n\r\n    #update(sts) {\r\n        const qry = '[data-group=\"true\"] input, [data-group=\"true\"] select';\r\n        this.queryAll(qry).forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSActivate class\r\n * @module dialogs/GSActivate\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe exist\r\n */\r\nexport default class GSActivate extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-activate', GSActivate);\r\n        Object.seal(GSActivate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/activate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onFormInit(form, data) {\r\n        data = data || form?.data;\r\n        data = { ipAddress: data?.ipAddress || '' };\r\n        super.onFormInit(form, data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Activator.activate(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSKerberos extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-kerberos', GSKerberos);\r\n        Object.seal(GSKerberos);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/kerberos.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'SSO Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.load();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.save(data);\r\n        return o.success;\r\n    }\r\n    \r\n    async onDialogReload() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.reload();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport Utils from '../utils/Utils.mjs';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSMigrate extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-migrate', GSMigrate);\r\n        Object.seal(GSMigrate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/migrate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Migrate Storage';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.migrate(data.path);\r\n        const me = this;\r\n        o.success ? setTimeout(() => me.inform(),500) : me.inform();\r\n        return o.success;\r\n    }\r\n    \r\n    inform() {\r\n\t\tUtils.notify.primary('', 'Migration started, check server logs for details!');\r\n\t}\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSCertImport extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certstoreimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import-store.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import PFX/PEM Certificate Store';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    get isPEM() {\r\n\t\treturn this.isExt('.pem');\r\n\t}\r\n\r\n    get isPFX() {\r\n\t\treturn this.isExt('.pfx');\r\n\t}\r\n\r\n    isExt(val) {\r\n\t\treturn this.file?.name.endsWith(val);\r\n\t}\r\n\t    \t\r\n    async fileToHex() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return Utils.toHex(buff);\r\n    }\r\n\r\n    async onData(data) {\r\n\t\tif (DEMO) return DEMO.success;\r\n\t\tconst me = this;\r\n        data.hex = await me.fileToHex();\r\n        let o = false;\r\n        if (me.isPEM) {\r\n\t        o = await io.greenscreens.Certificate.loadFromPEM(data.hex, data.password, data.type);\r\n\t\t} else if (me.isPFX) {\r\n        \to = await io.greenscreens.Certificate.loadFromPFX(data.hex, data.password, data.type);\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Error('PEM or PFX file format supported!');\r\n\t\t}\r\n        return o.success;\r\n    }\r\n\r\n}"],"names":["Utils$1","Utils","static","value","el","document","createElement","body","insertAdjacentElement","GSDOM","queryAll","forEach","remove","notify","GSComponents","get","waiter","success","msg","info","danger","e","data","error","message","toString","inform","txt","a","i","len","length","push","parseInt","substring","Uint8Array","src","Array","ArrayBuffer","String","utf8ToBuffer","toArrayBuffer","val","Blob","encoding","type","validateData","name","blob","GSUtil","isString","stringToBlob","binaryToBlob","link","URL","createObjectURL","download","href","click","setTimeout","revokeObjectURL","url","indexOf","params","target","win","globalThis","open","GSFunction","isFunction","focus","addEventListener","WebAuthn","location","origin","Object","freeze","o","from","atob","c","charCodeAt","btoa","fromCharCode","apply","IP_REGEXP","test","hostname","protocol","cfg","api","service","svc","headers","io","greenscreens","WebAuthnController","Engine","init","action","finish","engine","callRemote","challenge","fromBinary","uid","obj","publicKey","rp","id","user","displayName","pubKeyCredParams","alg","attestation","timeout","excludeCredentials","extensions","authenticatorSelection","requireResidentKey","userVerification","cred","navigator","credentials","create","Error","auth","rawId","toBinary","attestationObject","response","clientDataJSON","creds","every","v","rpId","allowCredentials","uvm","loc","txAuthSimple","authenticatorData","signature","userHandle","doRegister","doAuthenticate","GSLog","this","print","tracing","forced","logging","tmp","nodeName","fn","console","log","seal","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","dft","isNumber","trim","toLowerCase","str","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","includes","pattern","charset","Math","floor","random","locale","language","languages","startsWith","isArray","isJsonString","isJsonType","normalize","JSON","parse","normalizeJson","warn","JSON_NORMALIZE","def","format","capitalizeAll","tpl","names","keys","vals","values","Function","isStringNonEmpty","window","isStringEmpty","left","right","lmatch","rmatch","time","signal","AbortSignal","Promise","resolve","reject","iid","bind","clearTimeout","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","import","GSAsbtractDialog","GSDialog","constructor","super","connectedCallback","cssHeader","dialogTemplate","GSAttr","dialogTitle","async","onBeforeReady","me","on","onFormData","onFormError","GSLoader","getTemplate","firstElementChild","slot","appendChild","title","update","isJson","reset","forms","f","emit","sts","disable","onData","detail","secondary","handleError","enable","close","onError","Tn5250","version","build","release","opt","lic","Login","uuid","host","cancelable","align","cssTitle","GSC","logoUrl","otp","query","password","form","onFormInit","initDemo","unsetUI","DEMO","toggle","initAuth","engineLogin","doWebAuth","shell","assign","AdminController","login","onOpen","postLogin","isWebauth","appID","ipAddress","ip","authenticate","cookie","srl","webauthOnly","reload","stop","engineShell","SocketChannel","fido","isOtp","elements","res","fetch","ok","json","toggleClass","closable","parentElement","innerHTML","getEngine","api1","svc1","api2","svc2","clear","setUI","SidebarUI","GSElement","onReady","HeaderUI","onAction","attachEvent","fnName","source","dataset","capitalizeAttr","isFunctionAsync","Session","closeSession","Server","restart","Certificate","verifySSLClient","regenerate","code","request","requestPem","privatePem","confirm","generate","certExport","openInNewTab","explorer","downloadConfig","downloadLogs","ShellUI","company","getByID","GSSearch","css","iconCSS","inputCSS","placeholder","GSEnvironment","isWebkit","searchEl","onSearch","which","GSEvents","prevent","send","set","BaseViewUI","className","GS_LOG_ACTION","monitorAction","requestAnimationFrame","table","store","filter","filters","sort","sorters","onViewRefresh","recID","flt","modal","tagName","export","stringify","rec","onClone","setData","onRemove","subset","hasOwnProperty","onDetails","result","waitEvent","onUpdate","load","tab","index","onCreate","primary","onLoad","read","onViewSearch","GSConfiguration","ctx","hasInstaller","querySelector","activateDialog","printerReset","printerSetup","validate","Hosts","list","setHost","unsetHost","cloneConfig","onViewResetPrinter","onViewSetupPrinter","onViewActivate","GSTunnel","Proxy","skip","limit","save","Date","now","start","conf","fromHex","GSCustomization","Scripts","getScripts","header","footer","ui","setScripts","GSFilterFido","large","Fido","isActive","switcher","selectedIndex","onSwitch","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","add","onViewToggle","active","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","prepare","outq","library","userName","spoolName","GSScheduler","mapState","true","false","status","Scheduler","runNow","GSUsers","Users","commit","resync","confid","devtype","driver","drawer1","drawer2","enhanced","display","program","printer","GSWorkstations","Tweaks","terminal","Manage","listSessions","prompt","sendMessage","sessionID","deviceID","loging","killDevice","sendMessages","killSessions","disconnectedCallback","onViewViewSession","closed","onclose","setInterval","clearInterval","updateScreen","Keyboard","listen","getScreen","Application","Binary","GSWebmodules","WebModules","GSAbout","GSModal","undefined","html","GSCertClient","generateClient","arr","raw","GSCertOpt","loadSafe","loadConfig","saveConfig","GSCertRevoke","email","revokeClient","visible","GSLoginAdmin","getConfig","newAuth","GSLoginDefaults","getDefaults","saveDefaults","GSOtpOptions","getOtp","saveOTP","GSRegisterBiometrics","isAllowed","register","GSRegisterOtp","scratch","qrcode","token","getUrl","b64","key","replaceAll","scratchCodes","alt","GSNetwork","getInterface","redirect","nodes","setInterface","GSSystem","setConfig","reloadKerberors","GSWorkstation","cssBody","order","GSFilter","SEG","SEGM","IP","CDIR","IPM","onChange","typeField","valueField","MASK","GSService","classList","isBool","checked","module","property","GSPrinterReset","Printer","GSPrinterSetup","hpt","onHPT","hostTransform","setup","GSActivate","Activator","activate","GSKerberos","Kerberos","GSMigrate","migrate","path","GSCertImport","input","file","files","isPEM","isExt","isPFX","endsWith","buff","arrayBuffer","toHex","hex","fileToHex","loadFromPEM","loadFromPFX"],"mappings":"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"}