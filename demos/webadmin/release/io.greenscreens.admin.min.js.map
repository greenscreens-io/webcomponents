{"version":3,"file":"io.greenscreens.admin.min.js","sources":["../modules/utils/Utils.mjs","../modules/utils/WebAuthn.mjs","../modules/dialogs/GSAdminDialog.mjs","../modules/shell/Login.mjs","../modules/shell/Sidebar.mjs","../modules/shell/Header.mjs","../modules/shell/Shell.mjs","../modules/views/GSSearch.mjs","../modules/views/BaseViewUI.mjs","../modules/views/configs/GSConfiguration.mjs","../modules/views/configs/GSTunnel.mjs","../modules/views/configs/GSCustomization.mjs","../modules/views/filters/GSFilterFido.mjs","../modules/views/filters/GSFilterIP.mjs","../modules/views/filters/GSFilterMobile.mjs","../modules/views/keys/GSApiKeys.mjs","../modules/views/keys/GSOtp.mjs","../modules/views/keys/GSBiometrics.mjs","../modules/views/others/GSPrinting.mjs","../modules/views/others/GSSchedulers.mjs","../modules/views/others/GSUsers.mjs","../modules/views/system/GSServices.mjs","../modules/views/system/GSWorkstations.mjs","../modules/views/system/GSWebmodules.mjs","../modules/dialogs/GSAbout.mjs","../modules/dialogs/GSCertBlocked.mjs","../modules/dialogs/GSCertClient.mjs","../modules/dialogs/GSCertImport.mjs","../modules/dialogs/GSCertImportPFX.mjs","../modules/dialogs/GSCertOpt.mjs","../modules/dialogs/GSLoginAdmin.mjs","../modules/dialogs/GSLoginDefaults.mjs","../modules/dialogs/GSOtpOptions.mjs","../modules/dialogs/GSRegisterBiometrics.mjs","../modules/dialogs/GSRegisterOtp.mjs","../modules/dialogs/GSNetwork.mjs","../modules/dialogs/GSSystem.mjs","../modules/dialogs/GSWorkstation.mjs","../modules/dialogs/GSFilter.mjs","../modules/dialogs/GSService.mjs","../modules/dialogs/GSPrinterReset.mjs","../modules/dialogs/GSPrinterSetup.mjs","../modules/dialogs/GSActivate.mjs","../modules/dialogs/GSInstall.mjs","../modules/dialogs/GSLicense.mjs","../modules/dialogs/GSKerberos.mjs","../modules/dialogs/GSMigrate.mjs","../modules/dialogs/GSCertImportStore.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSComponents,GSDOM,GSFunction,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport default class Utils {\r\n\r\n    static setUI(value) {\r\n        const el = document.createElement(value);\r\n        document.body.insertAdjacentElement('beforeend', el);\r\n    }\r\n\r\n    static unsetUI(value) {\r\n        const list = GSDOM.queryAll(value);\r\n        list.forEach(el => el.remove());\r\n    }\r\n\r\n    static get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (!Utils.notify) return;\r\n        if (success) return Utils.notify.info('Info', msg);\r\n        Utils.notify.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    /**\r\n     * Convert hex string to Uint8Array\r\n     * @param {string} data \r\n     * @returns {Uint8Array}\r\n     */\r\n    static fromHex(data) {\r\n        let a = [];\r\n        for (let i = 0, len = data.length; i < len; i += 2) {\r\n            a.push(parseInt(data.substring(i, 2), 16));\r\n        }\r\n\r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    /**\r\n     * Detect data and convert to Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            str\r\n     */\r\n    static #validateData(src) {\r\n        var data = null;\r\n        if (src instanceof Array) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof ArrayBuffer) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof Uint8Array) {\r\n            data = src;\r\n        } else if (src instanceof String || typeof src === 'string') {\r\n            data = utf8ToBuffer(src);\r\n        } else if (src.toArrayBuffer) {\r\n            data = new Uint8Array(src.toArrayBuffer());\r\n        } else {\r\n            throw \"Invalid input, must be String or ArrayBuffer or Uint8Array\";\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert String to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static stringToBlob(val) {\r\n        return new Blob([val], {\r\n            encoding: \"UTF-8\",\r\n            type: \"text/plain;charset=UTF-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert Binary to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static binaryToBlob(val) {\r\n        const data = Utils.#validateData(val);\r\n        return new Blob([data], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    /**\r\n     * Download raw data \r\n     * @param {string} name \r\n     * @param {string|array} data \r\n     */\r\n    static download(name, data) {\r\n        if (!data) return false;\r\n        const blob = GSUtil.isString(data) ? Utils.stringToBlob(data) : Utils.binaryToBlob(data);\r\n        const link = URL.createObjectURL(blob);\r\n        try {\r\n            const a = document.createElement('a');\r\n            a.download = name;\r\n            a.href = link;\r\n            a.click();\r\n        } finally {\r\n            setTimeout(() => URL.revokeObjectURL(link), 250);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static revokeObjectURL(url) {\r\n        if (url?.indexOf('blob:') === 0) URL.revokeObjectURL(url)\r\n    }\r\n\r\n    static openInNewTab(url, params, target = '_blank') {\r\n\r\n        const win = globalThis.open(url, target, params || null);\r\n\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        win.addEventListener('beforeunload', () => {\r\n            Utils.revokeObjectURL(url);\r\n            return null;\r\n        });\r\n\r\n        return win;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Module for WebAuth protocol\r\n */\r\nexport default class WebAuthn {\r\n\r\n    static #IP_REGEXP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\r\n    static #api = `${location.origin}/services/api?q=/wsauth`;\r\n    static #svc = `${location.origin}/services/rpc`;\r\n    static #headers = { 'x-type': 'admin' };\r\n\r\n    static {\r\n        Object.freeze(WebAuthn);\r\n    }\r\n\r\n    static #fromBinary(o) {\r\n        return Uint8Array.from(atob(o), (c) => {\r\n            return c.charCodeAt(0)\r\n        });\r\n    }\r\n\r\n    static #toBinary(data) {\r\n        return btoa(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n    }\r\n\r\n    static isAllowed() {\r\n        return (!WebAuthn.#IP_REGEXP.test(location.hostname) && location.protocol === 'https:') || location.hostname === 'localhost';\r\n    }\r\n\r\n    static get #cfg() {\r\n        return { api: WebAuthn.#api, service: WebAuthn.#svc, headers: WebAuthn.#headers };\r\n    }\r\n\r\n    static async #engine() {\r\n        if (!io?.greenscreens?.WebAuthnController) return Engine.init(WebAuthn.#cfg);\r\n    }\r\n\r\n    static async #callRemote(action, finish = false, data) {\r\n        await WebAuthn.#engine();\r\n        return await io.greenscreens.WebAuthnController[action](data, finish);\r\n    }\r\n\r\n    static async #doRegister(data) {\r\n\r\n        const resp = await WebAuthn.#callRemote('register', false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const uid = WebAuthn.#fromBinary(o.uid);\r\n\r\n        const obj = {\r\n            publicKey: {\r\n                rp: {\r\n                    name: o.rp,\r\n                    id: location.hostname\r\n                },\r\n\r\n                challenge: challenge,\r\n\r\n                user: {\r\n                    id: uid,\r\n                    name: o.name,\r\n                    displayName: o.displayName\r\n                },\r\n\r\n                // https://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n                /*\r\n                    {type: \"public-key\", alg: -7}\r\n                    {type: \"public-key\", alg: -35}\r\n                    {type: \"public-key\", alg: -36}\r\n                    {type: \"public-key\", alg: -257}\r\n                    {type: \"public-key\", alg: -258}\r\n                    {type: \"public-key\", alg: -259}\r\n                    {type: \"public-key\", alg: -37}\r\n                    {type: \"public-key\", alg: -38}\r\n                    {type: \"public-key\", alg: -39}\r\n                    {type: \"public-key\", alg: -8}\r\n                     */\r\n                pubKeyCredParams: [{\r\n                    type: \"public-key\",\r\n                    alg: -7\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -257\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -41\r\n                }\r\n                ],\r\n\r\n                attestation: \"direct\",\r\n                timeout: 60000,\r\n                excludeCredentials: [],\r\n                extensions: {},\r\n                authenticatorSelection: {\r\n                    requireResidentKey: false,\r\n                    userVerification: \"preferred\"\r\n                    //authenticatorAttachment : \"cross-platform\"\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const cred = await navigator.credentials.create(obj);\r\n        if (cred == null) throw new Error('Credential not found!');\r\n\r\n        const auth = {\r\n            uid: o.uid,\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            attestationObject: WebAuthn.#toBinary(cred.response.attestationObject),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote('register', true, auth);\r\n\r\n    }\r\n\r\n    static async #doAuthenticate(action, data) {\r\n\r\n        const resp = await WebAuthn.#callRemote(action, false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const creds = [];\r\n\r\n        if (action === 'test' && o.uid.length === 0) {\r\n            throw new Error('Invalid credentials!');\r\n        }\r\n\r\n        o.uid.every((v) => {\r\n            const uid = WebAuthn.#fromBinary(v);\r\n            const o = {\r\n                type: \"public-key\",\r\n                id: uid\r\n            };\r\n            //o.transports: [\"usb\", \"nfc\", \"ble\"],\r\n            creds.push(o);\r\n            return true;\r\n        });\r\n\r\n        const obj = {\r\n            challenge: challenge,\r\n            rpId: location.hostname,\r\n            userVerification: \"preferred\",\r\n            timeout: 60000,\r\n\r\n            allowCredentials: creds,\r\n            extensions: {\r\n                uvm: true, // RP wants to know how the user was verified\r\n                loc: false,\r\n                txAuthSimple: \"Could you please verify yourself?\"\r\n            }\r\n        };\r\n\r\n        const cred = await navigator.credentials.get({ publicKey: obj });\r\n\r\n        if (cred == null) {\r\n            throw new Error('Credential not found!');\r\n        }\r\n\r\n        const auth = {\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            authenticatorData: WebAuthn.#toBinary(cred.response.authenticatorData),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON),\r\n            signature: WebAuthn.#toBinary(cred.response.signature),\r\n            userHandle: WebAuthn.#toBinary(cred.response.userHandle)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote(action, true, auth);\r\n    }\r\n\r\n    static register(data) {\r\n        return WebAuthn.#doRegister(data);\r\n    }\r\n\r\n    static authenticate(data) {\r\n        return WebAuthn.#doAuthenticate(\"authenticate\", data);\r\n    }\r\n\r\n    static update(data) {\r\n        return WebAuthn.#doAuthenticate('update', data);\r\n    }\r\n\r\n    static unregister(data) {\r\n        return WebAuthn.#doAuthenticate('unregister', data);\r\n    }\r\n\r\n    static test(data) {\r\n        return WebAuthn.#doAuthenticate('test', data);\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport { GSAttr, GSComponents, GSDOM, GSEvents, GSLoader, GSDialog } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSAdminDialog extends GSDialog {\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        //me.cssTitle = 'fs-5 fw-bold text-muted';\r\n        //me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return '';\r\n    }\r\n\r\n    async onReady() {\r\n\r\n        super.onReady();\r\n        const me = this;\r\n\r\n        me.on('data', me.#onFormData.bind(me));\r\n        me.on('error', me.#onFormError.bind(me));\r\n\r\n        const tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n        requestAnimationFrame(() => {\r\n            GSDOM.setHTML(me, tpl);\r\n            me.title = me.dialogTitle;\r\n            if (me.auto) me.open();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Should auto open\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    /**\r\n     * Wait dialog\r\n     */\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Dialog form\r\n     */\r\n    get form() {\r\n        return GSDOM.query(this, 'form');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to load data into dialog forms\r\n     * @returns {*}\r\n     */\r\n    async onOpen(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onData(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Override GSModal open method, adds data\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async open(data) {\r\n        const me = this;\r\n        me.form?.reset();\r\n        data = await me.onOpen(data);\r\n        if (data === false) return;\r\n        super.open();\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(200);\r\n            me.#update(data);\r\n        });\r\n    }\r\n\r\n    #update(data) {\r\n        if (typeof data == 'object') GSDOM.queryAll(this, 'form').forEach(form => GSDOM.fromObject(form, data))\r\n    }\r\n   \r\n    #onFormError(e) {\r\n        Utils.inform(false, 'Some fields are invalid!');        \r\n    }\r\n\r\n    async #onFormData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        let sts = false; \r\n        try {\r\n\t\t\tme.disable();\r\n            sts = await me.onData(e.detail.data);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        } finally {\r\n\t\t\tme.enable();\r\n\t\t\tif (sts) me.close();\r\n\t\t}\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading Login class\r\n * @module dialogs/Login\r\n */\r\nimport {GSAttr,GSDOM,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport GSAdminDialog from '../dialogs/GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\n\r\nglobalThis.Tn5250 = {\r\n    version: '6.0.0.300',\r\n    build: '15.10.2022.',\r\n    release: 20221015\r\n};\r\n\r\nexport default class Login extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-login', Login);\r\n        Object.seal(Login);\r\n    }\r\n\r\n    static #headers = { 'x-type': 'admin' };\r\n    static #cred = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n    static #api1 = `${location.origin}/services/api?q=/rpc`;\r\n    static #svc1 = `${location.origin}/services/rpc`;\r\n\r\n    static #api2 = `${location.origin}/services/api?q=/wsadmin`;\r\n    static #svc2 = `${location.origin}/services/wsadmin`.replace('http', 'ws');\r\n\r\n    static #auth = `${location.origin}/services/auth`;\r\n\r\n    #engine = null;\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        //me.visible = true;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n        me.cssTitle = 'd-flex justify-content-center w-100';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//shell/login.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        const url = globalThis.GSC?.logoUrl || '../assets/img/logo.png';\r\n        return `<img src=\"${url}\" alt=\"...\" height=\"30\" width=\"180\">`; // 'Admin Login';\r\n    }\r\n\r\n    get #otp() {\r\n        return this.query('input[name=\"otp\"]');\r\n    }\r\n\r\n    get #password() {\r\n        return this.query('input[name=\"password\"]');\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        console.clear();\r\n\r\n        const me = this;\r\n        me.#initDemo();\r\n        Utils.unsetUI('gs-admin-shell');\r\n\r\n        if (DEMO) return me.#toggle(false);\r\n\r\n        await GSUtil.timeout(5);\r\n        await me.#initAuth();\r\n\r\n        me.#engine = await me.#engineLogin();\r\n\r\n        me.#doWebAuth();\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        if (globalThis.DEMO) {\r\n            me.#shell();\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            me.#toggle(true);\r\n            const cred = Object.assign(data, Login.#cred);\r\n            await io.greenscreens.AdminController.login(cred);\r\n        } catch (e) {\r\n            me.onOpen();\r\n            throw e;\r\n        }\r\n\r\n        me.#postLogin();\r\n    }\r\n\r\n    async #doWebAuth() {\r\n        const me = this;\r\n        if (!me.#isWebauth) return;\r\n        const data = { appID: 0, ipAddress: Tn5250.opt.ip };\r\n        const cred = Object.assign(data, Login.#cred);\r\n        try {\r\n            const o = await WebAuthn.authenticate(cred);\r\n            if (o.success) document.cookie = 'X-Authorization=' + o.srl + '; path=/services/wsadmin';\r\n            me.#postLogin();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n            if (me.#webauthOnly) location.reload();\r\n        }\r\n    }\r\n\r\n    async #postLogin() {\r\n\r\n        console.clear();\r\n        const me = this;\r\n\r\n        me.#engine?.stop();\r\n        me.#engine = await me.#engineShell();\r\n\r\n        me.#engine.SocketChannel.on('offline', (e) => {\r\n            console.log('Socket channel closed!');\r\n            Utils.handleError(e);\r\n            me.#engine?.stop();\r\n            location.reload();\r\n        });\r\n\r\n        me.#shell();\r\n        return true;\r\n    }\r\n\r\n    get #isWebauth() {\r\n        return Tn5250?.opt?.fido;\r\n    }\r\n\r\n    get #isOtp() {\r\n        return Tn5250?.opt?.otp;\r\n    }\r\n\r\n    get #webauthOnly() {\r\n        return this.#isWebauth && !this.#isOtp;\r\n    }\r\n\r\n    #initDemo() {\r\n        //if (globalThis.hasOwnProperty('DEMO')) return;\r\n        if ('DEMO' in globalThis) return;\r\n        globalThis.DEMO = typeof Engine !== 'function';\r\n    }\r\n\r\n    #toggle(sts = false) {\r\n        GSDOM.queryAll(this, 'input, button').forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n        GSDOM.query(this, 'input').focus();\r\n    }\r\n\r\n    async #initAuth() {\r\n        delete globalThis.io;\r\n        const res = await fetch(Login.#auth);\r\n        if (!res.ok) return false;\r\n        const opt = globalThis.Tn5250.opt = await res.json();\r\n        globalThis.Tn5250.opt = opt;\r\n        const me = this;\r\n        GSAttr.toggle(me.#otp, 'disabled', !opt.otp);\r\n        GSAttr.toggle(me.#password, 'disabled', !opt.otp);\r\n        GSDOM.toggleClass(me.#otp, 'd-none', !opt.otp);\r\n        if (me.#webauthOnly) {\r\n            me.closable = false;\r\n            me.body.parentElement.innerHTML = '<div class=\"m-3 text-center fs-5\">Use security key to access Web Admin console.</div>';\r\n        }\r\n    }\r\n\r\n    async #engineLogin() {\r\n        return this.#getEngine(Login.#api1, Login.#svc1);\r\n    }\r\n\r\n    async #engineShell() {\r\n        return this.#getEngine(Login.#api2, Login.#svc2);\r\n    }\r\n\r\n    async #getEngine(api, svc) {\r\n        delete globalThis.io;\r\n        this.#engine = null;\r\n        return Engine.init({ api: api, service: svc, headers: Login.#headers });\r\n    }\r\n\r\n    #shell() {\r\n        this.#clear();\r\n        Utils.setUI('gs-admin-shell');\r\n    }\r\n\r\n    #clear() {\r\n        Utils.unsetUI('gs-admin-shell-login');\r\n        Utils.unsetUI('gs-admin-shell');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class SidebarUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport { GSComponents, GSFunction, GSElement, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        try {\r\n            const fnName = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n            const action = GSUtil.capitalizeAttr(fnName);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    // logout and replace with login tag\r\n    async logout() {\r\n        try {\r\n            Utils.unsetUI('gs-admin-shell-login');\r\n            Utils.unsetUI('gs-admin-shell');\r\n            const o = DEMO ? DEMO : await io.greenscreens.Session.closeSession();\r\n            return o.success;\r\n        } finally {\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n    // restart server\r\n    async restart() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.restart();\r\n        Utils.inform(o.success, 'Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.verifySSLClient(2);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        Utils.inform(true, msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.regenerate();\r\n        if (o.code === 'RSA') Utils.inform(true, 'New encryption keys generated');\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.request(true);\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        //Utils.download(\"server_public.txt\", data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generate(true);\r\n        Utils.inform(true, 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab(`${location.origin}/services/certificate`);\r\n    }\r\n\r\n    explorer() {\r\n        Utils.openInNewTab(`${location.origin}/admin/explorer`, 'toolbar=no,scrollbars=yes,resizable=yes');\r\n    }\r\n\r\n    downloadSavf() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=savf`);\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=conf`);\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=log`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\nimport {GSElement} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Class representing UI Shell\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class ShellUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.GSC?.company && me.company) me.company.innerHTML = me.GSC.company;\r\n    }\r\n\r\n    get company() {\r\n        return this.getByID('company');\r\n    }\r\n\r\n    get GSC() {\r\n        return globalThis.GSC;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\n\r\nimport { GSAttr, GSEvents, GSElement, GSEnvironment } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\n\r\nimport { GSComponents, GSDOM, GSUtil, GSElement, GSEvents } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        globalThis.GS_LOG_ACTION = true;\r\n        GSEvents.monitorAction(me, 'view');\r\n        me.attachEvent(me.#table, 'filter', e => me.onViewRefresh());\r\n        requestAnimationFrame(() => me.onViewRefresh());\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.#table?.store.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.#table?.store;\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get form() {\r\n        return GSDOM.query(this.modal, '#form-main');\r\n    }\r\n\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async onViewExport() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewClone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n\r\n        try {\r\n\r\n            const sts = await me.onClone(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            Utils.notify.secondary('', 'Record cloned!');\r\n            me.onViewRefresh();\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewRemove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => !o.hasOwnProperty(me.recID) || (o[me.recID] !== data[me.recID]));\r\n            me.store.setData(subset);\r\n            Utils.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewDetails(e) {\r\n\r\n        const me = this;\r\n        const data = await me.onDetails(e.detail.data[0]);\r\n        if (!data) return;\r\n\r\n        me.form?.reset();\r\n        GSDOM.fromObject(me.form, data);\r\n        me.modal.open(data);\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.reload();\r\n            Utils.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewCreate(e) {\r\n\r\n        const me = this;\r\n\r\n        me.form?.reset();\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            Utils.notify.primary('', 'Record created!');\r\n\r\n            me.onViewRefresh();\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async onViewRefresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    me.store.setData(data);\r\n                    // me.store.firstPage();\r\n                } else {\r\n                    me.store.reload();\r\n                }\r\n            } catch (e) {\r\n                me.onError(e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    onViewSearch(e) {\r\n        this.store.filter = e.detail.value;\r\n    }\r\n\r\n\tonError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n    /**\r\n     * Handle data befoer opening the modal form\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async onDetails(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record cloned from existing one.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onClone(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport { GSComponents, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(1000);\r\n            me.#update();\r\n        });\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n\r\n        const ctx = me.query('gs-context');\r\n        // If license installer available\r\n        if (me.#hasInstaller) {\r\n            ctx?.self?.querySelector('[data-action=\"license\"]')?.remove();\r\n            ctx?.self?.querySelector('[data-action=\"install\"]')?.remove();\r\n        } else {\r\n            // If license installer not available; remove activator\r\n            ctx?.self?.querySelector('[data-action=\"activate\"]')?.remove();\r\n        }\r\n    }\r\n\r\n    get #hasInstaller() {\r\n        return Tn5250?.opt?.lic == true;\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    get activateDialog() {\r\n        return GSComponents.get('modal-activate');\r\n    }\r\n\r\n    get installDialog() {\r\n        return GSComponents.get('modal-install');\r\n    }\r\n\r\n    get licenseDialog() {\r\n        return GSComponents.get('modal-license');\r\n    }\r\n\r\n    get printerReset() {\r\n        return GSComponents.get('modal-reset');\r\n    }\r\n\r\n    get printerSetup() {\r\n        return GSComponents.get('modal-setup');\r\n    }\r\n\r\n    get validate() {\r\n        return GSComponents.get('modal-validate');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.list(false);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.unsetHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.cloneConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    onViewResetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerReset.open(data);\r\n    }\r\n\r\n    onViewSetupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerSetup.open(data);\r\n    }\r\n\r\n    onViewActivate(e) {\r\n        const data = e.detail.data[0];\r\n        this.activateDialog.open(data);\r\n    }\r\n\r\n    onViewInstall(e) {\r\n        const data = e.detail.data[0];\r\n        this.installDialog.open(data);\r\n    }\r\n\r\n    onViewLicense(e) {\r\n        const data = e.detail.data[0];\r\n        this.licenseDialog.open(data);\r\n    }\r\n\r\n    async onViewValidateServer(e) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Hosts.validate(data);\r\n            const body = `<pre>${o.msg}</pre>`;\r\n            me.validate.confirm('Validate', body);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from \"../../utils/Utils.mjs\";\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.list(me.store.page, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        data.name = `${data.name} - ${Date.now()}`;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewSstart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.start(data.id);\r\n        Utils.inform(o.success, 'Tunnel started');\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.stop(data.id);\r\n        Utils.inform(o.success, 'Tunnel stopped');\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.restart(data.id);\r\n        Utils.inform(o.success, 'Tunnel restarted');\r\n    }\r\n\r\n    async onViewDownload(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.download(data.id);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud',\r\n            'cloud: ' + location.origin,\r\n            'token: ' + o.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n        ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.msg));\r\n        Utils.download('server.config', conf.join('\\n'));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scripts.getScripts();\r\n        me.header.value = o.data?.header || '';\r\n        me.footer.value = o.data?.footer || '';\r\n        me.ui.value = o.data?.ui || '';\r\n    }\r\n\r\n    async save() {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Scripts.setScripts(me.header.value, me.footer.value, me.ui.value);\r\n            Utils.inform(o.success, 'Data saved!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.add(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.update(data.id, data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","\r\n/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.update(data.id, data.active);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.remove(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    #prepare(json) {\r\n        json.uuid = json.uuid.toUpperCase();\r\n        json.host = json.host.toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.library = (json.library || '').toUpperCase();\r\n        json.userName = (json.userName || '').toUpperCase();\r\n        json.spoolName = (json.spoolName || '').toUpperCase();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    #mapState = { \"\": 0, \"true\": 1, \"false\": 2 };\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const type = filter.type ? parseInt(filter.type, 10) : null;\r\n        const status = me.#mapState[filter.status] || 0;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.list(me.store.page - 1, me.store.limit, type, status);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewRun(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.runNow(data.id);\r\n        Utils.inform(o.success, 'Task started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewCommit(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.commit();\r\n            Utils.inform(o.success, 'Sync with database ok!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n    async onViewResync(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.resync();\r\n            Utils.inform(o.success, 'Sync from storage started!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n\r\n    #prepare(json) {\r\n        json.confid = parseInt(json.confid || 0);\r\n        json.devtype = parseInt(json.devtype || 0);\r\n        json.driver = parseInt(json.driver || 0);\r\n        json.drawer1 = parseInt(json.drawer1 || -1);\r\n        json.drawer2 = parseInt(json.drawer2 || -1);\r\n        json.enhanced = parseInt(json.enhanced || 0);\r\n        json.uuid = (json.uuid || '').toUpperCase();\r\n        json.host = (json.host || '').toUpperCase();\r\n        json.user = (json.user || '').toUpperCase();\r\n        json.display = (json.display || '').toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.program = (json.program || '').toUpperCase();\r\n        json.printer = (json.printer || 'Default');\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.list();\r\n        return o.data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport {GSFunction} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    #terminal = {};\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Manage.listSessions(me.store.page - 1, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onViewMessage(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, data.message);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewLogging(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.loging(data);\r\n            if (o.msg === 'false') {\r\n                const url = location.origin + '/services/logs?id=' + o.code;\r\n                Utils.download('server.log', url);\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKill(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killDevice(data);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewMessageFilter(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = Object.assign(me.filter);\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessages(me.filter);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKillFilter(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killSessions(me.filter);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewExport(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.export(0, 0, me.filter);\r\n            const tmp = JSON.stringify(o.data);\r\n            Utils.download('workstations.json', tmp);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        Object.values(me.#terminal)\r\n            .filter(el => GSFunction.isFunction(el.close))\r\n            .forEach(el => el.close());\r\n        me.#terminal = {};\r\n    }\r\n\r\n    onViewViewSession(e) {\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO mode.');\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n\r\n        let win = me.#terminal[data.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        const params = 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes';\r\n        const url = `${location.origin}/terminal/?d=0&k=0`;\r\n        win = Utils.openInNewTab(url, params);\r\n        win.onclose = () => delete me.#terminal[data.deviceID];\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        const id = setInterval(() => {\r\n\r\n            if (!win.Tn5250) return;\r\n            clearInterval(id);\r\n\r\n            me.#terminal[data.deviceID] = win;\r\n            win.document.title = `Terminal - ${data.uuid} - ${data.host} - ${data.display}`;\r\n            me.#updateScreen(win, data);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) => {\r\n                if (name === 'PF5') me.#updateScreen(win, data);\r\n            });\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async #updateScreen(win, data) {\r\n        if (!win?.Tn5250) return;\r\n        try {\r\n            const o = await io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n            win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.list();\r\n        return o.data;\r\n    }\r\n\r\n    async onViewStart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.start(data.name);\r\n        Utils.inform(o.success, 'Module started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.stop(data.name);\r\n        Utils.inform(o.success, 'Module stopped!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.restart(data.name);\r\n        Utils.inform(o.success, 'Module restarted!');\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport { GSModal } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '20.10.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get version() {\r\n        return globalThis.Tn5250?.opt?.version || GSAbout.#version;\r\n    }\r\n\r\n    get build() {\r\n        return globalThis.Tn5250?.opt?.build || GSAbout.#build;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${me.version}</span></div>\r\n            <div>Build : <span>${me.build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertBlocked class\r\n * @module dialogs/GSCertBlocked\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertBlocked extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certblocked', GSCertBlocked);\r\n        Object.seal(GSCertBlocked);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-blocked.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Blocked Certificates';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getBlocked();\r\n        return { list: o.msg };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setBlocked(data.list);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertClient extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generateClient(data);\r\n\r\n        const arr = Utils.fromHex(o.msg);\r\n        const raw = new Uint8Array(arr);\r\n        Utils.download(o.code, raw);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPEM(data.rootCAPub, data.rootCAPriv,\r\n            data.serverPub, data.serverPriv, data.rootPass, data.serverPass);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimportpfx', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-importpfx.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Binary Certificate';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    async pfx() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return btoa(new Uint8Array(buff));\r\n    }\r\n\r\n    async onData(data) {\r\n        data.pfx = await this.pfx();\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPFX(data.pfx, data.password);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.loadConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.saveConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Session.newAuth(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getDefaults();\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveDefaults(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getOtp();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveOTP(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterBiometrics class\r\n * @module dialogs/GSRegisterBiometrics\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSRegisterBiometrics extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-bioreg', GSRegisterBiometrics);\r\n        Object.seal(GSRegisterBiometrics);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.align = 'center';\r\n        me.cancelable = false;\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-bio.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register Biometric';\r\n    }\r\n\r\n    async onOpen() {\r\n\r\n        const me = this;\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not supported in DEMO mode!');\r\n\r\n        if (!WebAuthn.isAllowed()) {\r\n            const msg = 'FIDO2 allowed only on secured url <br>and valid domain name!'\r\n            me.body = msg;\r\n            return Utils.inform(false, msg);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData() {\r\n        const params = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n        params.appID = 0;\r\n        params.ipAddress = Tn5250.opt.ip;\r\n        try {\r\n            const o = await WebAuthn.register(params);\r\n            console.log(o);\r\n            me.body = 'Biometric Web Admin login activated!';\r\n        } catch (e) {\r\n            me.body = Utils.handleError(e) || 'Biometric Web Admin login not activated!';\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport {GSDOM} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSRegisterOtp extends GSAdminDialog {\r\n\r\n    static #URL = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register OTP';\r\n    }\r\n\r\n    get scratch() {\r\n        return GSDOM.query(this, '#scratch');\r\n    }\r\n\r\n    get qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get token() {\r\n        return GSDOM.query(this, '#token');\r\n    }\r\n\r\n    getUrl(token) {\r\n        const b64 = self.btoa(token);\r\n        return `${location.origin}${GSRegisterOtp.#URL}${b64}`;\r\n    }\r\n\r\n    async onOpen() {\r\n        const me = this;\r\n        if (DEMO) return Utils.inform(false, 'Nota available in DEMO!');\r\n        const o = await io.greenscreens.OAuth.register();\r\n        me.#download(o.data);\r\n        me.#update(o.data);\r\n        return o.data;\r\n    }\r\n\r\n    async onData() {\r\n        return true;\r\n    }\r\n\r\n    #update(o) {\r\n        const me = this;\r\n        const url = me.getUrl(o.url);\r\n        me.qrcode.parentElement.href = url;\r\n        me.qrcode.src = url;\r\n        me.qrcode.title = o.url;\r\n        me.token.innerHTML = o.key.replaceAll('=', '');\r\n        me.scratch.innerHTML = o.scratchCodes.join('&nbsp;');\r\n    }\r\n\r\n    #download(o) {\r\n        const alt = o.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            o.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            o.key.replaceAll('=', ''),\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n\r\n        alt.every((v) => {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getInterface();\r\n        o.data.restart = o.data.restart ? '1' : '0';\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setInterface(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSSystem extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    async reloadKerberos() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.reloadKerberors();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstation class\r\n * @module dialogs/GSWorkstation\r\n */\r\nimport {GSLoader} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSWorkstation extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-workstation', GSWorkstation);\r\n        Object.seal(GSWorkstation);\r\n    }\r\n\r\n    #def = null;\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.cssBody = 'NA';\r\n        super.connectedCallback();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return null;\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Workstation Info';\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        this.#def = await GSLoader.loadSafe('data/wks.json','GET',null,true);\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        const css = 'fw-bold w-25 text-bg-secondary';\r\n        const html = ['<div class=\"container p-2\"><div class=\"row\"><div class=\"col-xs-12\"><table class=\"table border\"><tbody>'];\r\n        const body = me.#def.order.filter(v => me.#def.data[v])\r\n            .map(v => `<tr><td class=\"${css}\">${me.#def.data[v]}</td><td>${data[v] || ''}</td></td>`).join('');\r\n        html.push(body);\r\n        html.push('</tbody></table></div></div></div>');\r\n        me.body = html.join('');\r\n        super.open();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilter class\r\n * @module dialogs/GSFilter\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSFilter extends GSAdminDialog {\r\n\r\n    //\"((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\.?\\\\b){4}\";\r\n    static #IP = \"((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\\\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\";\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}/[0-9]{1,2}$`, `^${GSFilter.#IP}-${GSFilter.#IP}$`];\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-filter', GSFilter);\r\n        Object.seal(GSFilter);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n        me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//forms/filter-ip.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'IP Filter';\r\n    }\r\n\r\n    get typeField() {\r\n        return this.query('select[name=type]');\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[me.typeField.value];\r\n    }\r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[data.type];\r\n        return data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSService class\r\n * @module dialogs/GSService\r\n */\r\nimport {GSAttr,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSService extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-service', GSService);\r\n        Object.seal(GSService);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/service.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Service Module Property';\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    async onOpen(data) {\r\n        const me = this;\r\n        me.valueField.type = 'text';\r\n        me.valueField.classList.value = 'form-control';\r\n        me.valueField.parentElement.classList.value = '';\r\n\r\n        if (GSUtil.isNumber(data.value)) {\r\n            me.valueField.type = 'number';\r\n        }\r\n\r\n        if (GSUtil.isBool(data.value)) {\r\n            me.valueField.type = 'checkbox';\r\n            me.valueField.classList.value = 'form-check-input';\r\n            me.valueField.parentElement.classList.value = 'form-check form-switch fs-5';\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        const type = GSAttr.get(me.valueField, 'type');\r\n\r\n        if (type === 'checkbox') {\r\n            data.value = me.valueField.checked === true;\r\n        }\r\n\r\n        if (type === 'number') {\r\n            data.value = parseInt(data.value || 0) || 0;\r\n        }\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterReset extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.reset(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport {GSAttr, GSDOM, GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, 'select[name=\"hostTransform\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(250);\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        });\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        delete me.#data.drawer1;\r\n        delete me.#data.drawer2;\r\n        me.form.reset();\r\n        me.#update(true);\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            data.hostTransform = parseInt(data.hostTransform) === 1;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.setup(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n    #onHPT(e) {\r\n        this.#update(e.target.value !== '1');\r\n    }\r\n\r\n    #update(sts) {\r\n        const qry = '[data-group=\"true\"] input, [data-group=\"true\"] select';\r\n        this.queryAll(qry).forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSActivate class\r\n * @module dialogs/GSActivate\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe exist\r\n */\r\nexport default class GSActivate extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-activate', GSActivate);\r\n        Object.seal(GSActivate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/activate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Activator.activate(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSInstall class\r\n * @module dialogs/GSInstall\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe does not exist\r\n */\r\nexport default class GSInstall extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-install', GSInstall);\r\n        Object.seal(GSInstall);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/install.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Install product to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Installer.installProduct(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLicense class\r\n * @module dialogs/GSLicense\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe does not exist\r\n */\r\nexport default class GSLicense extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-license', GSLicense);\r\n        Object.seal(GSLicense);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/license.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onOpen(data) {\r\n        return { ipAddress: data?.ipAddress || '' };\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Installer.addProductLicense(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSKerberos extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-kerberos', GSKerberos);\r\n        Object.seal(GSKerberos);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/kerberos.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'SSO Options';\r\n    }\r\n\r\n    async onOpen() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.load();\r\n        return o.data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.save(data);\r\n        return o.success;\r\n    }\r\n    \r\n    async onDialogReload() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.reload();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\n\r\nexport default class GSMigrate extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-migrate', GSMigrate);\r\n        Object.seal(GSMigrate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/migrate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Migrate Storage';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.migrate(data.path);\r\n        const me = this;\r\n        o.success ? setTimeout(() => me.inform(),500) : me.inform();\r\n        return o.success;\r\n    }\r\n    \r\n    inform() {\r\n\t\tthis.notify.primary('', 'Migration started, check server logs for details!');\r\n\t}\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAdminDialog from './GSAdminDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSCertImport extends GSAdminDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certstoreimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import-store.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import PFX/PEM Certificate Store';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    get isPEM() {\r\n\t\treturn this.isExt('.pem');\r\n\t}\r\n\r\n    get isPFX() {\r\n\t\treturn this.isExt('.pfx');\r\n\t}\r\n\r\n    isExt(val) {\r\n\t\treturn this.file?.name.endsWith(val);\r\n\t}\r\n\t    \t\r\n    async fileToHex() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return Utils.toHex(buff);\r\n    }\r\n\r\n    async onData(data) {\r\n\t\tif (DEMO) return DEMO.success;\r\n\t\tconst me = this;\r\n        data.hex = await me.fileToHex();\r\n        let o = false;\r\n        if (me.isPEM) {\r\n\t        o = await io.greenscreens.Certificate.loadFromPEM(data.hex, data.password, data.type);\r\n\t\t} else if (me.isPFX) {\r\n        \to = await io.greenscreens.Certificate.loadFromPFX(data.hex, data.password, data.type);\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Error('PEM or PFX file format supported!');\r\n\t\t}\r\n        return o.success;\r\n    }\r\n\r\n}"],"names":["Utils$1","Utils","static","value","el","document","createElement","body","insertAdjacentElement","GSDOM","queryAll","forEach","remove","notify","GSComponents","get","success","msg","info","danger","e","data","error","message","toString","inform","a","i","len","length","push","parseInt","substring","Uint8Array","src","Array","ArrayBuffer","String","utf8ToBuffer","toArrayBuffer","val","Blob","encoding","type","validateData","name","blob","GSUtil","isString","stringToBlob","binaryToBlob","link","URL","createObjectURL","download","href","click","setTimeout","revokeObjectURL","url","indexOf","params","target","win","globalThis","open","GSFunction","isFunction","focus","addEventListener","WebAuthn","location","origin","Object","freeze","o","from","atob","c","charCodeAt","btoa","fromCharCode","apply","IP_REGEXP","test","hostname","protocol","cfg","api","service","svc","headers","io","greenscreens","WebAuthnController","Engine","init","action","finish","engine","callRemote","challenge","fromBinary","uid","obj","publicKey","rp","id","user","displayName","pubKeyCredParams","alg","attestation","timeout","excludeCredentials","extensions","authenticatorSelection","requireResidentKey","userVerification","cred","navigator","credentials","create","Error","auth","rawId","toBinary","attestationObject","response","clientDataJSON","creds","every","v","rpId","allowCredentials","uvm","loc","txAuthSimple","authenticatorData","signature","userHandle","doRegister","doAuthenticate","GSAdminDialog","GSDialog","connectedCallback","super","this","cssHeader","dialogTemplate","dialogTitle","async","onReady","me","on","onFormData","bind","onFormError","tpl","GSLoader","getTemplate","requestAnimationFrame","setHTML","title","auto","GSAttr","getAsBool","waiter","form","query","reset","onOpen","update","fromObject","GSEvents","prevent","sts","disable","onData","detail","handleError","enable","close","onError","Tn5250","version","build","release","Login","customElements","define","seal","uuid","host","replace","cancelable","align","cssTitle","GSC","logoUrl","otp","password","initDemo","unsetUI","DEMO","toggle","initAuth","engineLogin","doWebAuth","shell","assign","AdminController","login","postLogin","isWebauth","appID","ipAddress","opt","ip","authenticate","cookie","srl","webauthOnly","reload","stop","engineShell","SocketChannel","fido","isOtp","res","fetch","ok","json","toggleClass","closable","parentElement","innerHTML","getEngine","api1","svc1","api2","svc2","clear","setUI","SidebarUI","GSElement","HeaderUI","onAction","attachEvent","fnName","source","dataset","capitalizeAttr","fn","isFunctionAsync","Session","closeSession","Server","restart","Certificate","verifySSLClient","regenerate","code","request","requestPem","privatePem","confirm","generate","certExport","openInNewTab","explorer","downloadSavf","downloadConfig","downloadLogs","ShellUI","company","getByID","GSSearch","css","iconCSS","inputCSS","placeholder","GSEnvironment","isWebkit","searchEl","onSearch","which","send","set","BaseViewUI","constructor","className","GS_LOG_ACTION","monitorAction","table","onViewRefresh","recID","filter","flt","store","modal","tagName","toLowerCase","export","JSON","stringify","rec","onClone","setData","secondary","onRemove","subset","hasOwnProperty","onDetails","result","waitEvent","onUpdate","warn","onCreate","primary","onLoad","isArray","onViewSearch","GSConfiguration","ctx","hasInstaller","self","querySelector","lic","activateDialog","installDialog","licenseDialog","printerReset","printerSetup","validate","Hosts","list","setHost","unsetHost","cloneConfig","onViewResetPrinter","onViewSetupPrinter","onViewActivate","onViewInstall","onViewLicense","GSTunnel","Proxy","page","limit","save","Date","now","start","conf","fromHex","join","GSCustomization","Scripts","getScripts","header","footer","ui","setScripts","GSFilterFido","large","Fido","isActive","switcher","selectedIndex","onSwitch","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","add","onViewToggle","active","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","prepare","toUpperCase","outq","library","userName","spoolName","GSScheduler","mapState","true","false","status","Scheduler","runNow","GSUsers","Users","commit","resync","confid","devtype","driver","drawer1","drawer2","enhanced","display","program","printer","GSWorkstations","Tweaks","terminal","Manage","listSessions","prompt","trim","sendMessage","sessionID","deviceID","loging","killDevice","sendMessages","killSessions","tmp","disconnectedCallback","values","onViewViewSession","closed","onclose","setInterval","clearInterval","updateScreen","Keyboard","listen","getScreen","Application","Binary","GSWebmodules","WebModules","GSAbout","GSModal","undefined","html","GSCertBlocked","getBlocked","setBlocked","GSCertClient","generateClient","arr","raw","GSCertImport","setFromPEM","rootCAPub","rootCAPriv","serverPub","serverPriv","rootPass","serverPass","input","file","files","buff","arrayBuffer","pfx","setFromPFX","GSCertOpt","loadConfig","saveConfig","GSLoginAdmin","getConfig","newAuth","GSLoginDefaults","getDefaults","saveDefaults","GSOtpOptions","getOtp","saveOTP","GSRegisterBiometrics","isAllowed","register","GSRegisterOtp","scratch","qrcode","token","getUrl","b64","key","replaceAll","scratchCodes","alt","GSNetwork","getInterface","redirect","nodes","setInterface","GSSystem","setConfig","reloadKerberors","GSWorkstation","def","cssBody","loadSafe","order","map","GSFilter","IP","onChange","typeField","valueField","pattern","MASK","GSService","classList","isNumber","isBool","checked","module","property","GSPrinterReset","visible","Printer","GSPrinterSetup","hpt","onHPT","hostTransform","setup","GSActivate","Activator","activate","GSInstall","Installer","installProduct","GSLicense","addProductLicense","GSKerberos","Kerberos","load","GSMigrate","migrate","path","isPEM","isExt","isPFX","endsWith","toHex","hex","fileToHex","loadFromPEM","loadFromPFX"],"mappings":"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"}