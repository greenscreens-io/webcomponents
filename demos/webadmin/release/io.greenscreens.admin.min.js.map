{"version":3,"file":"io.greenscreens.admin.min.js","sources":["../modules/utils/Utils.mjs","../modules/utils/WebAuthn.mjs","../../../modules/base/GSLog.mjs","../../../modules/base/GSUtil.mjs","../modules/dialogs/GSAsbtractDialog.mjs","../modules/shell/Login.mjs","../modules/shell/Sidebar.mjs","../modules/shell/Header.mjs","../modules/shell/Shell.mjs","../modules/views/GSSearch.mjs","../modules/views/BaseViewUI.mjs","../modules/views/configs/GSConfiguration.mjs","../modules/views/configs/GSTunnel.mjs","../modules/views/configs/GSCustomization.mjs","../modules/views/filters/GSFilterFido.mjs","../modules/views/filters/GSFilterIP.mjs","../modules/views/filters/GSFilterMobile.mjs","../modules/views/keys/GSApiKeys.mjs","../modules/views/keys/GSOtp.mjs","../modules/views/keys/GSBiometrics.mjs","../modules/views/others/GSPrinting.mjs","../modules/views/others/GSSchedulers.mjs","../modules/views/others/GSUsers.mjs","../modules/views/system/GSServices.mjs","../modules/views/system/GSWorkstations.mjs","../modules/views/system/GSWebmodules.mjs","../modules/dialogs/GSAbout.mjs","../modules/dialogs/GSCertBlocked.mjs","../modules/dialogs/GSCertClient.mjs","../modules/dialogs/GSCertImport.mjs","../modules/dialogs/GSCertImportPFX.mjs","../modules/dialogs/GSCertOpt.mjs","../modules/dialogs/GSLoginAdmin.mjs","../modules/dialogs/GSLoginDefaults.mjs","../modules/dialogs/GSOtpOptions.mjs","../modules/dialogs/GSRegisterBiometrics.mjs","../modules/dialogs/GSRegisterOtp.mjs","../modules/dialogs/GSNetwork.mjs","../modules/dialogs/GSSystem.mjs","../modules/dialogs/GSWorkstation.mjs","../modules/dialogs/GSFilter.mjs","../modules/dialogs/GSService.mjs","../modules/dialogs/GSPrinterReset.mjs","../modules/dialogs/GSPrinterSetup.mjs","../modules/dialogs/GSActivate.mjs","../modules/dialogs/GSKerberos.mjs","../modules/dialogs/GSMigrate.mjs","../modules/dialogs/GSCertImportStore.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSComponents,GSDOM,GSFunction,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Utils class\r\n * @module Utils\r\n */\r\n\r\n/**\r\n * Helper class with shared utility functions\r\n * @class\r\n */\r\nexport default class Utils {\r\n\r\n    static setUI(value) {\r\n        const el = document.createElement(value);\r\n        document.body.insertAdjacentElement('beforeend', el);\r\n    }\r\n\r\n    static unsetUI(value) {\r\n        const list = GSDOM.queryAll(value);\r\n        list.forEach(el => el.remove());\r\n    }\r\n\r\n    static get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    static inform(success = false, msg) {\r\n        if (!Utils.notify) return;\r\n        if (success) return Utils.notify.info('Info', msg);\r\n        Utils.notify.danger('Error', msg);\r\n        return success;\r\n    }\r\n\r\n    static handleError(e) {\r\n        console.log(e);\r\n        const msg = e.data?.error || e.msg || e.message || e.toString();\r\n        Utils.inform(false, msg);\r\n        return msg;\r\n    }\r\n\r\n    /**\r\n     * Convert hex string to Uint8Array\r\n     * @param {string} data \r\n     * @returns {Uint8Array}\r\n     */\r\n    static fromHex(data) {\r\n        let a = [];\r\n        for (let i = 0, len = data.length; i < len; i += 2) {\r\n            a.push(parseInt(data.substring(i, 2), 16));\r\n        }\r\n\r\n        return new Uint8Array(a);\r\n    }\r\n\r\n    /**\r\n     * Detect data and convert to Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            str\r\n     */\r\n    static #validateData(src) {\r\n        var data = null;\r\n        if (src instanceof Array) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof ArrayBuffer) {\r\n            data = new Uint8Array(src);\r\n        } else if (src instanceof Uint8Array) {\r\n            data = src;\r\n        } else if (src instanceof String || typeof src === 'string') {\r\n            data = utf8ToBuffer(src);\r\n        } else if (src.toArrayBuffer) {\r\n            data = new Uint8Array(src.toArrayBuffer());\r\n        } else {\r\n            throw \"Invalid input, must be String or ArrayBuffer or Uint8Array\";\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert String to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static stringToBlob(val) {\r\n        return new Blob([val], {\r\n            encoding: \"UTF-8\",\r\n            type: \"text/plain;charset=UTF-8\"\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Convert Binary to blob object\r\n     * \r\n     * @param {String} val \r\n     * @return {Blob}\r\n     */\r\n    static binaryToBlob(val) {\r\n        const data = Utils.#validateData(val);\r\n        return new Blob([data], { type: 'application/octet-stream' });\r\n    }\r\n\r\n    /**\r\n     * Download raw data \r\n     * @param {string} name \r\n     * @param {string|array} data \r\n     */\r\n    static download(name, data) {\r\n        if (!data) return false;\r\n        const blob = GSUtil.isString(data) ? Utils.stringToBlob(data) : Utils.binaryToBlob(data);\r\n        const link = URL.createObjectURL(blob);\r\n        try {\r\n            const a = document.createElement('a');\r\n            a.download = name;\r\n            a.href = link;\r\n            a.click();\r\n        } finally {\r\n            setTimeout(() => URL.revokeObjectURL(link), 250);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    static revokeObjectURL(url) {\r\n        if (url?.indexOf('blob:') === 0) URL.revokeObjectURL(url)\r\n    }\r\n\r\n    static openInNewTab(url, params, target = '_blank') {\r\n\r\n        const win = globalThis.open(url, target, params || null);\r\n\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        win.addEventListener('beforeunload', () => {\r\n            Utils.revokeObjectURL(url);\r\n            return null;\r\n        });\r\n\r\n        return win;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * Module for WebAuth protocol\r\n */\r\nexport default class WebAuthn {\r\n\r\n    static #IP_REGEXP = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;\r\n\r\n    static #api = `${location.origin}/services/api?q=/wsauth`;\r\n    static #svc = `${location.origin}/services/rpc`;\r\n    static #headers = { 'x-type': 'admin' };\r\n\r\n    static {\r\n        Object.freeze(WebAuthn);\r\n    }\r\n\r\n    static #fromBinary(o) {\r\n        return Uint8Array.from(atob(o), (c) => {\r\n            return c.charCodeAt(0)\r\n        });\r\n    }\r\n\r\n    static #toBinary(data) {\r\n        return btoa(String.fromCharCode.apply(null, new Uint8Array(data)))\r\n    }\r\n\r\n    static isAllowed() {\r\n        return (!WebAuthn.#IP_REGEXP.test(location.hostname) && location.protocol === 'https:') || location.hostname === 'localhost';\r\n    }\r\n\r\n    static get #cfg() {\r\n        return { api: WebAuthn.#api, service: WebAuthn.#svc, headers: WebAuthn.#headers };\r\n    }\r\n\r\n    static async #engine() {\r\n        if (!io?.greenscreens?.WebAuthnController) return Engine.init(WebAuthn.#cfg);\r\n    }\r\n\r\n    static async #callRemote(action, finish = false, data) {\r\n        await WebAuthn.#engine();\r\n        return await io.greenscreens.WebAuthnController[action](data, finish);\r\n    }\r\n\r\n    static async #doRegister(data) {\r\n\r\n        const resp = await WebAuthn.#callRemote('register', false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const uid = WebAuthn.#fromBinary(o.uid);\r\n\r\n        const obj = {\r\n            publicKey: {\r\n                rp: {\r\n                    name: o.rp,\r\n                    id: location.hostname\r\n                },\r\n\r\n                challenge: challenge,\r\n\r\n                user: {\r\n                    id: uid,\r\n                    name: o.name,\r\n                    displayName: o.displayName\r\n                },\r\n\r\n                // https://www.iana.org/assignments/cose/cose.xhtml#algorithms\r\n                /*\r\n                    {type: \"public-key\", alg: -7}\r\n                    {type: \"public-key\", alg: -35}\r\n                    {type: \"public-key\", alg: -36}\r\n                    {type: \"public-key\", alg: -257}\r\n                    {type: \"public-key\", alg: -258}\r\n                    {type: \"public-key\", alg: -259}\r\n                    {type: \"public-key\", alg: -37}\r\n                    {type: \"public-key\", alg: -38}\r\n                    {type: \"public-key\", alg: -39}\r\n                    {type: \"public-key\", alg: -8}\r\n                     */\r\n                pubKeyCredParams: [{\r\n                    type: \"public-key\",\r\n                    alg: -7\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -257\r\n                },\r\n                {\r\n                    type: \"public-key\",\r\n                    alg: -41\r\n                }\r\n                ],\r\n\r\n                attestation: \"direct\",\r\n                timeout: 60000,\r\n                excludeCredentials: [],\r\n                extensions: {},\r\n                authenticatorSelection: {\r\n                    requireResidentKey: false,\r\n                    userVerification: \"preferred\"\r\n                    //authenticatorAttachment : \"cross-platform\"\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n        const cred = await navigator.credentials.create(obj);\r\n        if (cred == null) throw new Error('Credential not found!');\r\n\r\n        const auth = {\r\n            uid: o.uid,\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            attestationObject: WebAuthn.#toBinary(cred.response.attestationObject),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote('register', true, auth);\r\n\r\n    }\r\n\r\n    static async #doAuthenticate(action, data) {\r\n\r\n        const resp = await WebAuthn.#callRemote(action, false, data);\r\n        const o = resp.data;\r\n        const challenge = WebAuthn.#fromBinary(o.challenge);\r\n        const creds = [];\r\n\r\n        if (action === 'test' && o.uid.length === 0) {\r\n            throw new Error('Invalid credentials!');\r\n        }\r\n\r\n        o.uid.every((v) => {\r\n            const uid = WebAuthn.#fromBinary(v);\r\n            const o = {\r\n                type: \"public-key\",\r\n                id: uid\r\n            };\r\n            //o.transports: [\"usb\", \"nfc\", \"ble\"],\r\n            creds.push(o);\r\n            return true;\r\n        });\r\n\r\n        const obj = {\r\n            challenge: challenge,\r\n            rpId: location.hostname,\r\n            userVerification: \"preferred\",\r\n            timeout: 60000,\r\n\r\n            allowCredentials: creds,\r\n            extensions: {\r\n                uvm: true, // RP wants to know how the user was verified\r\n                loc: false,\r\n                txAuthSimple: \"Could you please verify yourself?\"\r\n            }\r\n        };\r\n\r\n        const cred = await navigator.credentials.get({ publicKey: obj });\r\n\r\n        if (cred == null) {\r\n            throw new Error('Credential not found!');\r\n        }\r\n\r\n        const auth = {\r\n            id: cred.id,\r\n            rawId: WebAuthn.#toBinary(cred.rawId),\r\n            authenticatorData: WebAuthn.#toBinary(cred.response.authenticatorData),\r\n            clientDataJSON: WebAuthn.#toBinary(cred.response.clientDataJSON),\r\n            signature: WebAuthn.#toBinary(cred.response.signature),\r\n            userHandle: WebAuthn.#toBinary(cred.response.userHandle)\r\n        };\r\n\r\n        return await WebAuthn.#callRemote(action, true, auth);\r\n    }\r\n\r\n    static register(data) {\r\n        return WebAuthn.#doRegister(data);\r\n    }\r\n\r\n    static authenticate(data) {\r\n        return WebAuthn.#doAuthenticate(\"authenticate\", data);\r\n    }\r\n\r\n    static update(data) {\r\n        return WebAuthn.#doAuthenticate('update', data);\r\n    }\r\n\r\n    static unregister(data) {\r\n        return WebAuthn.#doAuthenticate('unregister', data);\r\n    }\r\n\r\n    static test(data) {\r\n        return WebAuthn.#doAuthenticate('test', data);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\tstatic tracing = false;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Debug messages only if tracing flag enabled\r\n\t * @param {*} el \r\n\t * @param {*} msg \r\n\t */\r\n\tstatic trace(el, msg) {\r\n\t\tif (GSLog.tracing) this.#print(el, msg, false, 'error');\r\n\t}\r\n\r\n\t/**\r\n\t * Generic logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disabled globaly, use this to force logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tconst tmp = el ? `${el.nodeName} -> ${el.id}: ${msg}` : msg;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tfn(tmp);\r\n\t\tif (msg instanceof Error) fn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isBool = (v) => { return typeof v === 'boolean' || v instanceof Boolean };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0, dft = 0) => GSUtil.isNumber(val) ? parseFloat(val) : dft;\r\n\r\n\tstatic asBool = (val = false) => val?.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str = '', obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word = '') => word ? word[0].toUpperCase() + word.slice(1).toLowerCase() : '';\r\n\r\n\tstatic capitalizeAll = (word = '', split = ' ') => word.split(split).map((v, i) => GSUtil.capitalize(v)).join(split);\r\n\r\n\tstatic capitalizeAttr = (word = '') => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Generate random set of characters\r\n\t * @param {*} pattern \r\n\t * @param {*} charset \r\n\t * @returns \r\n\t */\r\n\tstatic generateUUID = (pattern = \"xxxx-xxxx-xxxx-xxxx-xxxx\", charset = \"abcdef0123456789\") => pattern.replace(/[x]/g, () => charset[Math.floor(Math.random() * charset.length)]);\r\n\r\n\t/**\r\n\t * Get browser default locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided parameter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn val && Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '', dft = {}) {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn dft;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Transform text based on CSS text attribute format\r\n\t * @param {string} format \r\n\t * @param {string} value \r\n\t * @returns \r\n\t */\r\n\tstatic textTransform(format = '', value = '') {\r\n\t\tswitch (format) {\r\n\t\t\tcase 'lowercase':\r\n\t\t\t\tvalue = value.toLowerCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'uppercase':\r\n\t\t\t\tvalue = value.toUpperCase();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'capitalize':\r\n\t\t\t\tvalue = GSUtil.capitalizeAll(value);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isString(value)) return;\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\treturn GSUtil.normalize(val).trim().length === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @param {number|AbortSignal} signal Abort object\r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0, signal) {\r\n        signal = GSUtil.isNumber(signal) ? AbortSignal.timeout(signal) : signal;\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst iid = setTimeout(resolve.bind(null, true), time);\r\n\t\t\tif(signal instanceof AbortSignal) {\r\n\t\t\t\tsignal.addEventListener('abort', () => {\r\n\t\t\t\t\tclearTimeout(iid);\r\n\t\t\t\t\treject(new Error('aborted timeout'));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\t/**\r\n\t * Inport and initialize source in JavaScript modules\r\n\t * Standard eval or new Function can not be used\r\n\t * @param {*} src \r\n\t * @returns \r\n\t */\r\n\tstatic async importSource(src) {\r\n\t\tconst blob = new Blob([src], { type: \"text/javascript\" });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\treturn await import(url);\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport { GSAttr, GSComponents, GSDOM, GSEvents, GSLoader, GSDialog } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport GSUtil from '../../../../modules/base/GSUtil.mjs';\r\n\r\nexport default class GSAsbtractDialog extends GSDialog {\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        //me.cssTitle = 'fs-5 fw-bold text-muted';\r\n        //me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Override GSDialog method, to attach UI slot\r\n     */\r\n    async onBeforeReady() {\r\n\r\n        await super.onBeforeReady();\r\n        const me = this;\r\n\r\n        me.on('data', me.#onFormData.bind(me));\r\n        me.on('error', me.#onFormError.bind(me));\r\n\r\n        const tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n        GSDOM.setHTML(me, tpl);\r\n        me.title = me.dialogTitle;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.auto) me.open();\r\n        super.onReady();\r\n    }\r\n\r\n    /**\r\n     * Override parent class method\r\n     * @param {*} data \r\n     */\r\n    open(data) {\r\n        const me = this;\r\n        me.#update(data);\r\n        super.open(data);\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onData(data) {\r\n        return true;\r\n    }    \r\n\r\n    /**\r\n     * Should auto open\r\n     */\r\n    get auto() {\r\n        return GSAttr.getAsBool(this, 'auto', true);\r\n    }\r\n\r\n    /**\r\n     * Wait dialog\r\n     */\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Dialog form\r\n     */\r\n    get form() {\r\n        return GSDOM.query(this, 'form');\r\n    }\r\n\r\n    get forms() {\r\n        return GSDOM.queryAll(this, 'form');\r\n    }\r\n\r\n    /**\r\n     * Update dialog forms \r\n     */\r\n    #update(data) {\r\n        if (GSUtil.isJson(data)) {\r\n            const me = this;\r\n            me.forms.forEach(form => { form.reset(); form.data = data; });\r\n            me.emit('change');\r\n        }\r\n    }\r\n\r\n    #onFormError(e) {\r\n        Utils.inform(false, 'Some fields are invalid!');\r\n    }\r\n\r\n    async #onFormData(e) {\r\n        GSEvents.prevent(e);\r\n        const me = this;\r\n        let sts = false;\r\n        try {\r\n            me.disable();\r\n            sts = await me.onData(e.detail.data);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        } finally {\r\n            me.enable();\r\n            if (sts) me.close();\r\n        }\r\n    }\r\n\r\n    onError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading Login class\r\n * @module dialogs/Login\r\n */\r\nimport {GSAttr,GSDOM,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport GSAsbtractDialog from '../dialogs/GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\n\r\nglobalThis.Tn5250 = {\r\n    version: '6.0.0.300',\r\n    build: '25.07.2023.',\r\n    release: 20230725, \r\n    opt : {\r\n        lic : true\r\n    }\r\n};\r\n\r\nexport default class Login extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-login', Login);\r\n        Object.seal(Login);\r\n    }\r\n\r\n    static #headers = { 'x-type': 'admin' };\r\n    static #cred = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n    static #api1 = `${location.origin}/services/api?q=/rpc`;\r\n    static #svc1 = `${location.origin}/services/rpc`;\r\n\r\n    static #api2 = `${location.origin}/services/api?q=/wsadmin`;\r\n    static #svc2 = `${location.origin}/services/wsadmin`.replace('http', 'ws');\r\n\r\n    static #auth = `${location.origin}/services/auth`;\r\n\r\n    #engine = null;\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        //me.visible = true;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n        me.cssTitle = 'd-flex justify-content-center w-100';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//shell/login.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        const url = globalThis.GSC?.logoUrl || '../assets/img/logo.png';\r\n        return `<img src=\"${url}\" alt=\"...\" height=\"30\" width=\"180\">`; // 'Admin Login';\r\n    }\r\n\r\n    get #otp() {\r\n        return this.query('input[name=\"otp\"]');\r\n    }\r\n\r\n    get #password() {\r\n        return this.query('input[name=\"password\"]');\r\n    }\r\n\r\n    async beforeOpen() {\r\n\r\n        console.clear();\r\n\r\n        const me = this;\r\n        me.#initDemo();\r\n        Utils.unsetUI('gs-admin-shell');\r\n\r\n        if (DEMO) return me.#toggle(false);\r\n\r\n        await GSUtil.timeout(5);\r\n        await me.#initAuth();\r\n\r\n        me.#engine = await me.#engineLogin();\r\n\r\n        me.#doWebAuth();\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        if (globalThis.DEMO) {\r\n            me.#shell();\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            me.#toggle(true);\r\n            const cred = Object.assign(data, Login.#cred);\r\n            await io.greenscreens.AdminController.login(cred);\r\n        } catch (e) {\r\n            me.onOpen();\r\n            throw e;\r\n        }\r\n\r\n        me.#postLogin();\r\n    }\r\n\r\n    async #doWebAuth() {\r\n        const me = this;\r\n        if (!me.#isWebauth) return;\r\n        const data = { appID: 0, ipAddress: Tn5250.opt.ip };\r\n        const cred = Object.assign(data, Login.#cred);\r\n        try {\r\n            const o = await WebAuthn.authenticate(cred);\r\n            if (o.success) document.cookie = 'X-Authorization=' + o.srl + '; path=/services/wsadmin';\r\n            me.#postLogin();\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n            if (me.#webauthOnly) location.reload();\r\n        }\r\n    }\r\n\r\n    async #postLogin() {\r\n\r\n        console.clear();\r\n        const me = this;\r\n\r\n        me.#engine?.stop();\r\n        me.#engine = await me.#engineShell();\r\n\r\n        me.#engine.SocketChannel.on('offline', (e) => {\r\n            console.log('Socket channel closed!');\r\n            Utils.handleError(e);\r\n            me.#engine?.stop();\r\n            location.reload();\r\n        });\r\n\r\n        me.#shell();\r\n        return true;\r\n    }\r\n\r\n    get #isWebauth() {\r\n        return Tn5250?.opt?.fido;\r\n    }\r\n\r\n    get #isOtp() {\r\n        return Tn5250?.opt?.otp;\r\n    }\r\n\r\n    get #webauthOnly() {\r\n        return this.#isWebauth && !this.#isOtp;\r\n    }\r\n\r\n    #initDemo() {\r\n        //if (globalThis.hasOwnProperty('DEMO')) return;\r\n        if ('DEMO' in globalThis) return;\r\n        globalThis.DEMO = typeof Engine !== 'function';\r\n    }\r\n\r\n    #toggle(sts = false) {\r\n        GSDOM.queryAll(this, 'input, button').forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n        GSDOM.query(this, 'input').focus();\r\n    }\r\n\r\n    async #initAuth() {\r\n        delete globalThis.io;\r\n        const res = await fetch(Login.#auth);\r\n        if (!res.ok) return false;\r\n        const opt = globalThis.Tn5250.opt = await res.json();\r\n        globalThis.Tn5250.opt = opt;\r\n        const me = this;\r\n        GSAttr.toggle(me.#otp, 'disabled', !opt.otp);\r\n        GSAttr.toggle(me.#password, 'disabled', !opt.otp);\r\n        GSDOM.toggleClass(me.#otp, 'd-none', !opt.otp);\r\n        if (me.#webauthOnly) {\r\n            me.closable = false;\r\n            me.body.parentElement.innerHTML = '<div class=\"m-3 text-center fs-5\">Use security key to access Web Admin console.</div>';\r\n        }\r\n    }\r\n\r\n    async #engineLogin() {\r\n        return this.#getEngine(Login.#api1, Login.#svc1);\r\n    }\r\n\r\n    async #engineShell() {\r\n        return this.#getEngine(Login.#api2, Login.#svc2);\r\n    }\r\n\r\n    async #getEngine(api, svc) {\r\n        delete globalThis.io;\r\n        this.#engine = null;\r\n        return Engine.init({ api: api, service: svc, headers: Login.#headers });\r\n    }\r\n\r\n    #shell() {\r\n        this.#clear();\r\n        Utils.setUI('gs-admin-shell');\r\n    }\r\n\r\n    #clear() {\r\n        Utils.unsetUI('gs-admin-shell-login');\r\n        Utils.unsetUI('gs-admin-shell');\r\n    }\r\n\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport {GSElement } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class SidebarUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport { GSComponents, GSFunction, GSElement, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    async #onAction(e) {\r\n        const me = this;\r\n        try {\r\n            const fnName = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n            const action = GSUtil.capitalizeAttr(fnName);\r\n            const fn = me[action];\r\n            if (GSFunction.isFunction(fn)) {\r\n                if (GSFunction.isFunctionAsync(fn)) {\r\n                    await me[action](e);\r\n                } else {\r\n                    me[action](e);\r\n                }\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    // logout and replace with login tag\r\n    async logout() {\r\n        try {\r\n            Utils.unsetUI('gs-admin-shell-login');\r\n            Utils.unsetUI('gs-admin-shell');\r\n            const o = DEMO ? DEMO : await io.greenscreens.Session.closeSession();\r\n            return o.success;\r\n        } finally {\r\n            location.reload();\r\n        }\r\n    }\r\n\r\n    // restart server\r\n    async restart() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.restart();\r\n        Utils.inform(o.success, 'Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.verifySSLClient(2);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        Utils.inform(true, msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.regenerate();\r\n        if (o.code === 'RSA') Utils.inform(true, 'New encryption keys generated');\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.request(true);\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        //Utils.download(\"server_public.txt\", data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generate(true);\r\n        Utils.inform(true, 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=0`);\r\n        Utils.openInNewTab(`${location.origin}/services/certificate?id=1`);\r\n    }\r\n\r\n    explorer() {\r\n        Utils.openInNewTab(`${location.origin}/admin/explorer`, 'toolbar=no,scrollbars=yes,resizable=yes');\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=conf`);\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab(`${location.origin}/services/admintransfer?type=log`);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\nimport {GSElement} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Class representing UI Shell\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class ShellUI extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        if (me.GSC?.company && me.company) me.company.innerHTML = me.GSC.company;\r\n    }\r\n\r\n    get company() {\r\n        return this.getByID('company');\r\n    }\r\n\r\n    get GSC() {\r\n        return globalThis.GSC;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\n\r\nimport { GSAttr, GSEvents, GSElement, GSEnvironment } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvents.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvents.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\n\r\nimport { GSComponents, GSDOM, GSUtil, GSElement, GSEvents } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nimport Utils from \"../utils/Utils.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        globalThis.GS_LOG_ACTION = true;\r\n        GSEvents.monitorAction(me, 'view');\r\n        me.attachEvent(me.#table, 'filter', e => me.onViewRefresh());\r\n        requestAnimationFrame(() => me.onViewRefresh());\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.#table?.store.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.#table?.store;\r\n    }\r\n\r\n    get #table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get form() {\r\n        return GSDOM.query(this.modal, '#form-main');\r\n    }\r\n\r\n    get waiter() {\r\n        return GSComponents.get('modal-waiter');\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async onViewExport() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewClone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n\r\n        try {\r\n\r\n            const sts = await me.onClone(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            Utils.notify.secondary('', 'Record cloned!');\r\n            me.onViewRefresh();\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewRemove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => !o.hasOwnProperty(me.recID) || (o[me.recID] !== data[me.recID]));\r\n            me.store.setData(subset);\r\n            Utils.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewDetails(e) {\r\n\r\n        const me = this;\r\n        const data = await me.onDetails(e.detail.data[0]);\r\n        if (!data) return;\r\n\r\n        me.form?.reset();\r\n        GSDOM.fromObject(me.form, data);\r\n        me.modal.open(data);\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.reload();\r\n            Utils.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async onViewCreate(e) {\r\n\r\n        const me = this;\r\n\r\n        me.form?.reset();\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            Utils.notify.primary('', 'Record created!');\r\n\r\n            me.onViewRefresh();\r\n\r\n        } catch (e) {\r\n            me.onError(e);\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async onViewRefresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            try {\r\n                if (Array.isArray(data) && data.length > 0) {\r\n                    me.store.setData(data);\r\n                    // me.store.firstPage();\r\n                } else {\r\n                    me.store.reload();\r\n                }\r\n            } catch (e) {\r\n                me.onError(e);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    onViewSearch(e) {\r\n        this.store.filter = e.detail.value;\r\n    }\r\n\r\n\tonError(e) {\r\n        Utils.handleError(e);\r\n    }\r\n\r\n    /**\r\n     * Handle data befoer opening the modal form\r\n     * @param {*} data \r\n     * @returns \r\n     */\r\n    async onDetails(data) {\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record cloned from existing one.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onClone(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport { GSComponents, GSUtil } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(1000);\r\n            me.#update();\r\n        });\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n\r\n        const ctx = me.query('gs-context');\r\n        // If license installer available\r\n        if (!me.#hasInstaller) {\r\n            // If license installer not available; remove activator\r\n            ctx?.self?.querySelector('[data-action=\"activate\"]')?.remove();\r\n        }\r\n    }\r\n\r\n    get #hasInstaller() {\r\n        return Tn5250?.opt?.lic == true;\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    get activateDialog() {\r\n        return GSComponents.get('modal-activate');\r\n    }\r\n\r\n    get printerReset() {\r\n        return GSComponents.get('modal-reset');\r\n    }\r\n\r\n    get printerSetup() {\r\n        return GSComponents.get('modal-setup');\r\n    }\r\n\r\n    get validate() {\r\n        return GSComponents.get('modal-validate');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.list(false);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.setHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.unsetHost(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Hosts.cloneConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    onViewResetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerReset.open(data);\r\n    }\r\n\r\n    onViewSetupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        this.printerSetup.open(data);\r\n    }\r\n\r\n    onViewActivate(e) {\r\n        const data = e.detail.data[0];\r\n        this.activateDialog.open(data);\r\n    }\r\n\r\n    async onViewValidateServer(e) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Hosts.validate(data);\r\n            const body = `<pre>${o.msg}</pre>`;\r\n            me.validate.confirm('Validate', body);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from \"../../utils/Utils.mjs\";\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        data.name = `${data.name} - ${Date.now()}`;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewSstart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.start(data.id);\r\n        Utils.inform(o.success, 'Tunnel started');\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.stop(data.id);\r\n        Utils.inform(o.success, 'Tunnel stopped');\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.restart(data.id);\r\n        Utils.inform(o.success, 'Tunnel restarted');\r\n    }\r\n\r\n    async onViewDownload(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Proxy.download(data.id);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud',\r\n            'cloud: ' + location.origin,\r\n            'token: ' + o.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n        ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.msg));\r\n        Utils.download('server.config', conf.join('\\n'));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scripts.getScripts();\r\n        me.header.value = o.data?.header || '';\r\n        me.footer.value = o.data?.footer || '';\r\n        me.ui.value = o.data?.ui || '';\r\n    }\r\n\r\n    async save() {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Scripts.setScripts(me.header.value, me.footer.value, me.ui.value);\r\n            Utils.inform(o.success, 'Data saved!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Fido.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Fido.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Filter.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Filter.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.isActive();\r\n            me.switcher.selectedIndex = parseInt(o.code, 10);\r\n        } finally {\r\n            me.attachEvent(me.switcher, 'change', me.#onSwitch.bind(me));\r\n        }\r\n    }\r\n\r\n    get switcher() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    async #onSwitch(e) {\r\n        try {\r\n            const val = parseInt(e.target.value, 10);\r\n            const o = DEMO ? DEMO : await io.greenscreens.Mobile.activity(val);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Mobile.remove(data.id);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.add(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.update(data.id, data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.ApiKeys.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","\r\n/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.update(data.id, data.active);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.OAuth.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    onViewToggle(e) {\r\n        const data = e.detail.data[0];\r\n        if (!data) return Utils.inform(false, 'Record not selected!');\r\n        data.active = !data.active;\r\n        const me = this;\r\n        me.onUpdate(data);\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebAuth.remove(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.set(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Printers.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    #prepare(json) {\r\n        json.uuid = json.uuid.toUpperCase();\r\n        json.host = json.host.toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.library = (json.library || '').toUpperCase();\r\n        json.userName = (json.userName || '').toUpperCase();\r\n        json.spoolName = (json.spoolName || '').toUpperCase();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    #mapState = { \"\": 0, \"true\": 1, \"false\": 2 };\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const type = filter.type ? parseInt(filter.type, 10) : null;\r\n        const status = me.#mapState[filter.status] || 0;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.list(me.store.skip, me.store.limit, type, status);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewRun(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.Scheduler.runNow(data.id);\r\n        Utils.inform(o.success, 'Task started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.list(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onCreate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        this.#prepare(data);\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onClone(data) {\r\n        delete data.id;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.save(data);\r\n        return o.success;\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Users.remove(data.id);\r\n        return o.success;\r\n    }\r\n\r\n    async onViewCommit(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.commit();\r\n            Utils.inform(o.success, 'Sync with database ok!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n    async onViewResync(e) {\r\n        const me = this;\r\n        me.waiter.open()\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Users.resync();\r\n            Utils.inform(o.success, 'Sync from storage started!');\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n\r\n\r\n    #prepare(json) {\r\n        json.confid = parseInt(json.confid || 0);\r\n        json.devtype = parseInt(json.devtype || 0);\r\n        json.driver = parseInt(json.driver || 0);\r\n        json.drawer1 = parseInt(json.drawer1 || -1);\r\n        json.drawer2 = parseInt(json.drawer2 || -1);\r\n        json.enhanced = parseInt(json.enhanced || 0);\r\n        json.uuid = (json.uuid || '').toUpperCase();\r\n        json.host = (json.host || '').toUpperCase();\r\n        json.user = (json.user || '').toUpperCase();\r\n        json.display = (json.display || '').toUpperCase();\r\n        json.outq = (json.outq || '').toUpperCase();\r\n        json.program = (json.program || '').toUpperCase();\r\n        json.printer = (json.printer || 'Default');\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.list();\r\n        return o.data;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../utils/Utils.mjs';\r\nimport {GSFunction} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    #terminal = {};\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = DEMO ? DEMO : await io.greenscreens.Manage.listSessions(me.store.skip, me.store.limit, filter);\r\n        return o.data;\r\n    }\r\n\r\n    async onViewMessage(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, data.message);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewLogging(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.loging(data);\r\n            if (o.msg === 'false') {\r\n                const url = location.origin + '/services/logs?id=' + o.code;\r\n                Utils.download('server.log', url);\r\n            }\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKill(e) {\r\n        const me = this;\r\n        try {\r\n            const data = e.detail.data[0];\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killDevice(data);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewMessageFilter(e) {\r\n\r\n        const msg = prompt('Enter message to send');\r\n        if (!(msg?.trim().length > 0)) return;\r\n\r\n        const me = this;\r\n        try {\r\n            const data = Object.assign(me.filter);\r\n            data.message = msg;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.sendMessages(me.filter);\r\n            Utils.inform(true, 'Message sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewKillFilter(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.killSessions(me.filter);\r\n            Utils.inform(true, 'Kill signal sent!');\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    async onViewExport(e) {\r\n        const me = this;\r\n        try {\r\n            const o = DEMO ? DEMO : await io.greenscreens.Manage.export(0, 0, me.filter);\r\n            const tmp = JSON.stringify(o.data);\r\n            Utils.download('workstations.json', tmp);\r\n        } catch (e) {\r\n            Utils.handleError(e);\r\n        }\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        super.disconnectedCallback();\r\n        const me = this;\r\n        Object.values(me.#terminal)\r\n            .filter(el => GSFunction.isFunction(el.close))\r\n            .forEach(el => el.close());\r\n        me.#terminal = {};\r\n    }\r\n\r\n    onViewViewSession(e) {\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO mode.');\r\n\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n\r\n        let win = me.#terminal[data.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        const params = 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes';\r\n        const url = `${location.origin}/terminal/?d=0&k=0`;\r\n        win = Utils.openInNewTab(url, params);\r\n        win.onclose = () => delete me.#terminal[data.deviceID];\r\n        if (GSFunction.isFunction(win.focus)) win.focus();\r\n\r\n        const id = setInterval(() => {\r\n\r\n            if (!win.Tn5250) return;\r\n            clearInterval(id);\r\n\r\n            me.#terminal[data.deviceID] = win;\r\n            win.document.title = `Terminal - ${data.uuid} - ${data.host} - ${data.display}`;\r\n            me.#updateScreen(win, data);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) => {\r\n                if (name === 'PF5') me.#updateScreen(win, data);\r\n            });\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async #updateScreen(win, data) {\r\n        if (!win?.Tn5250) return;\r\n        try {\r\n            const o = await io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n            win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport Utils from \"../../utils/Utils.mjs\";\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.list();\r\n        return o.data;\r\n    }\r\n\r\n    async onViewStart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.start(data.name);\r\n        Utils.inform(o.success, 'Module started!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewStop(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.stop(data.name);\r\n        Utils.inform(o.success, 'Module stopped!');\r\n        me.onViewRefresh();\r\n    }\r\n\r\n    async onViewRestart(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = DEMO ? DEMO : await io.greenscreens.WebModules.restart(data.name);\r\n        Utils.inform(o.success, 'Module restarted!');\r\n        me.onViewRefresh();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport { GSModal } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '20.10.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get version() {\r\n        return globalThis.Tn5250?.opt?.version || GSAbout.#version;\r\n    }\r\n\r\n    get build() {\r\n        return globalThis.Tn5250?.opt?.build || GSAbout.#build;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${me.version}</span></div>\r\n            <div>Build : <span>${me.build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertBlocked class\r\n * @module dialogs/GSCertBlocked\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertBlocked extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certblocked', GSCertBlocked);\r\n        Object.seal(GSCertBlocked);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-blocked.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Blocked Certificates';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getBlocked();\r\n        super.onFormInit(form, { list: o.msg });\r\n    }\r\n    \r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setBlocked(data.list);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertClient extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.generateClient(data);\r\n\r\n        const arr = Utils.fromHex(o.msg);\r\n        const raw = new Uint8Array(arr);\r\n        Utils.download(o.code, raw);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Certificates';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPEM(data.rootCAPub, data.rootCAPriv,\r\n            data.serverPub, data.serverPriv, data.rootPass, data.serverPass);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimportpfx', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-importpfx.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Binary Certificate';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    async pfx() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return btoa(new Uint8Array(buff));\r\n    }\r\n\r\n    async onData(data) {\r\n        data.pfx = await this.pfx();\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.setFromPFX(data.pfx, data.password);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport { GSLoader } from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async onFormInit(form, data) {\r\n        if(DEMO)  {\r\n            data = await GSLoader.loadSafe('./data/cert.json', 'GET', null, true);            \r\n        } else {\r\n            data = await io.greenscreens.Certificate.loadConfig();\r\n            data = data.data;\r\n        }\r\n        super.onFormInit(form, data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Certificate.saveConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        delete o.data.password;\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Session.newAuth(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getDefaults();\r\n        delete o.data.password;\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveDefaults(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getOtp();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.saveOTP(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterBiometrics class\r\n * @module dialogs/GSRegisterBiometrics\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport WebAuthn from '../utils/WebAuthn.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSRegisterBiometrics extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-bioreg', GSRegisterBiometrics);\r\n        Object.seal(GSRegisterBiometrics);\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.align = 'center';\r\n        me.cancelable = false;\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-bio.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register Biometric';\r\n    }\r\n\r\n    async beforeOpen() {\r\n\r\n        const me = this;\r\n\r\n        if (DEMO) return Utils.inform(false, 'Not supported in DEMO mode!');\r\n\r\n        if (!WebAuthn.isAllowed()) {\r\n            const msg = 'FIDO2 allowed only on secured url <br>and valid domain name!'\r\n            me.body = msg;\r\n            return Utils.inform(false, msg);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    async onData() {\r\n        const params = { uuid: 'ADMIN', host: 'ADMIN', user: 'ADMIN' };\r\n        params.appID = 0;\r\n        params.ipAddress = Tn5250.opt.ip;\r\n        try {\r\n            const o = await WebAuthn.register(params);\r\n            console.log(o);\r\n            me.body = 'Biometric Web Admin login activated!';\r\n        } catch (e) {\r\n            me.body = Utils.handleError(e) || 'Biometric Web Admin login not activated!';\r\n        }\r\n        return true;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\nimport {GSDOM} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\n\r\nexport default class GSRegisterOtp extends GSAsbtractDialog {\r\n\r\n    static #URL = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Register OTP';\r\n    }\r\n\r\n    get scratch() {\r\n        return GSDOM.query(this, '#scratch');\r\n    }\r\n\r\n    get qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get token() {\r\n        return GSDOM.query(this, '#token');\r\n    }\r\n\r\n    getUrl(token) {\r\n        const b64 = self.btoa(token);\r\n        return `${location.origin}${GSRegisterOtp.#URL}${b64}`;\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        if (DEMO) return;\r\n        const o = await io.greenscreens.OAuth.register();\r\n        me.#download(o.data);\r\n        me.#update(o.data);\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onOpen() {\r\n        if (DEMO) return Utils.inform(false, 'Not available in DEMO!');\r\n    }\r\n\r\n    async onData() {\r\n        return true;\r\n    }\r\n\r\n    #update(o) {\r\n        const me = this;\r\n        const url = me.getUrl(o.url);\r\n        me.qrcode.parentElement.href = url;\r\n        me.qrcode.src = url;\r\n        me.qrcode.title = o.url;\r\n        me.token.innerHTML = o.key.replaceAll('=', '');\r\n        me.scratch.innerHTML = o.scratchCodes.join('&nbsp;');\r\n    }\r\n\r\n    #download(o) {\r\n        const alt = o.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            o.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            o.key.replaceAll('=', ''),\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n\r\n        alt.every((v) => {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getInterface();\r\n        o.data.restart = o.data.restart ? '1' : '0';\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setInterface(data);\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSSystem extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.getConfig();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.setConfig(data);\r\n        return o.success;\r\n    }\r\n\r\n    async reloadKerberos() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.reloadKerberors();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstation class\r\n * @module dialogs/GSWorkstation\r\n */\r\nimport {GSLoader} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSWorkstation extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-workstation', GSWorkstation);\r\n        Object.seal(GSWorkstation);\r\n    }\r\n\r\n    #def = null;\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.cssBody = 'NA';\r\n        super.connectedCallback();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return null;\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Workstation Info';\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        this.#def = await GSLoader.loadSafe('data/wks.json','GET',null,true);\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        const css = 'fw-bold w-25 text-bg-secondary';\r\n        const html = ['<div class=\"container p-2\"><div class=\"row\"><div class=\"col-xs-12\"><table class=\"table border\"><tbody>'];\r\n        const body = me.#def.order.filter(v => me.#def.data[v])\r\n            .map(v => `<tr><td class=\"${css}\">${me.#def.data[v]}</td><td>${data[v] || ''}</td></td>`).join('');\r\n        html.push(body);\r\n        html.push('</tbody></table></div></div></div>');\r\n        me.body = html.join('');\r\n        super.open();\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilter class\r\n * @module dialogs/GSFilter\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSFilter extends GSAsbtractDialog {\r\n\r\n    //\"((25[0-5]|(2[0-4]|1\\\\d|[1-9]|)\\\\d)\\.?\\\\b){4}\";\r\n    static #IP = \"((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\\\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\\\*)\";\r\n    static #MASK = [`^${GSFilter.#IP}$`, `^${GSFilter.#IP}/[0-9]{1,2}$`, `^${GSFilter.#IP}-${GSFilter.#IP}$`];\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-filter', GSFilter);\r\n        Object.seal(GSFilter);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n        me.attachEvent(me, 'change', me.#onChange.bind(me));\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//forms/filter-ip.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'IP Filter';\r\n    }\r\n\r\n    get typeField() {\r\n        return this.query('select[name=type]');\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[me.typeField.value];\r\n    }   \r\n\r\n    async onFormInit(form) {\r\n        const me = this;\r\n        me.valueField.pattern = GSFilter.#MASK[data.type];\r\n        super.onFormInit(form);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSService class\r\n * @module dialogs/GSService\r\n */\r\nimport {GSAttr,GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSService extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-service', GSService);\r\n        Object.seal(GSService);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/service.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Service Module Property';\r\n    }\r\n\r\n    get valueField() {\r\n        return this.query('input[name=value]');\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.form?.reset();\r\n        me.valueField.type = 'text';\r\n        me.valueField.classList.value = 'form-control';\r\n        me.valueField.parentElement.classList.value = '';\r\n\r\n        if (GSUtil.isNumber(data.value)) {\r\n            me.valueField.type = 'number';\r\n        }\r\n\r\n        if (GSUtil.isBool(data.value)) {\r\n            me.valueField.type = 'checkbox';\r\n            me.valueField.classList.value = 'form-check-input';\r\n            me.valueField.parentElement.classList.value = 'form-check form-switch fs-5';\r\n        }\r\n\r\n        super.open(data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n\r\n        const type = GSAttr.get(me.valueField, 'type');\r\n\r\n        if (type === 'checkbox') {\r\n            data.value = me.valueField.checked === true;\r\n        }\r\n\r\n        if (type === 'number') {\r\n            data.value = parseInt(data.value || 0) || 0;\r\n        }\r\n\r\n        const o = DEMO ? DEMO : await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSPrinterReset extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        super.open();\r\n    }\r\n\r\n    async onOpen() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.reset(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport {GSAttr, GSDOM, GSUtil} from '/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    #data = null;\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, 'select[name=\"hostTransform\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        requestAnimationFrame(async () => {\r\n            await GSUtil.timeout(250);\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        });\r\n    }\r\n\r\n    open(data) {\r\n        const me = this;\r\n        me.#data = Object.assign({}, data);\r\n        me.#data.host = me.#data.name;\r\n        delete me.#data.drawer1;\r\n        delete me.#data.drawer2;\r\n        me.form.reset();\r\n        me.#update(true);\r\n        super.open();\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        super.onFormInit(form, this.#data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const me = this;\r\n        me.waiter.open();\r\n        let success = false;\r\n        try {\r\n            me.visible = false;\r\n            data.hostTransform = parseInt(data.hostTransform) === 1;\r\n            const o = DEMO ? DEMO : await io.greenscreens.Printer.setup(data);\r\n            success = o.success;\r\n        } catch (e) {\r\n            me.visible = true;\r\n            throw e;\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        return success;\r\n    }\r\n\r\n    #onHPT(e) {\r\n        this.#update(e.target.value !== '1');\r\n    }\r\n\r\n    #update(sts) {\r\n        const qry = '[data-group=\"true\"] input, [data-group=\"true\"] select';\r\n        this.queryAll(qry).forEach(el => GSAttr.toggle(el, 'disabled', sts));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSActivate class\r\n * @module dialogs/GSActivate\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\n/**\r\n * Available when install.exe exist\r\n */\r\nexport default class GSActivate extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-activate', GSActivate);\r\n        Object.seal(GSActivate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/activate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Add license key to the IBM i server';\r\n    }\r\n\r\n    async onFormInit(form, data) {\r\n        data = data || form?.data;\r\n        data = { ipAddress: data?.ipAddress || '' };\r\n        super.onFormInit(form, data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Activator.activate(data);\r\n        return o.success;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSKerberos extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-kerberos', GSKerberos);\r\n        Object.seal(GSKerberos);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/kerberos.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'SSO Options';\r\n    }\r\n\r\n    async onFormInit(form) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.load();\r\n        super.onFormInit(form, o.data);\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.save(data);\r\n        return o.success;\r\n    }\r\n    \r\n    async onDialogReload() {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Kerberos.reload();\r\n        return o.success;\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\n\r\nexport default class GSMigrate extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-migrate', GSMigrate);\r\n        Object.seal(GSMigrate);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/migrate.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Migrate Storage';\r\n    }\r\n\r\n    async onData(data) {\r\n        const o = DEMO ? DEMO : await io.greenscreens.Server.migrate(data.path);\r\n        const me = this;\r\n        o.success ? setTimeout(() => me.inform(),500) : me.inform();\r\n        return o.success;\r\n    }\r\n    \r\n    inform() {\r\n\t\tthis.notify.primary('', 'Migration started, check server logs for details!');\r\n\t}\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSAsbtractDialog from './GSAsbtractDialog.mjs';\r\nimport Utils from '../utils/Utils.mjs';\r\n\r\nexport default class GSCertImport extends GSAsbtractDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certstoreimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        if (this.large) this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import-store.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import PFX/PEM Certificate Store';\r\n    }\r\n\r\n    get input () {\r\n        return GSDOM.query(this, 'gs-filebox')?.query('input');\r\n    }\r\n\r\n    get file() {\r\n        const input = this.input;\r\n        if (!input?.files?.length > 0) return false;\r\n        return input.files[0];\r\n    }\r\n\r\n    get isPEM() {\r\n\t\treturn this.isExt('.pem');\r\n\t}\r\n\r\n    get isPFX() {\r\n\t\treturn this.isExt('.pfx');\r\n\t}\r\n\r\n    isExt(val) {\r\n\t\treturn this.file?.name.endsWith(val);\r\n\t}\r\n\t    \t\r\n    async fileToHex() {\r\n        const buff = await this.file?.arrayBuffer();\r\n        return Utils.toHex(buff);\r\n    }\r\n\r\n    async onData(data) {\r\n\t\tif (DEMO) return DEMO.success;\r\n\t\tconst me = this;\r\n        data.hex = await me.fileToHex();\r\n        let o = false;\r\n        if (me.isPEM) {\r\n\t        o = await io.greenscreens.Certificate.loadFromPEM(data.hex, data.password, data.type);\r\n\t\t} else if (me.isPFX) {\r\n        \to = await io.greenscreens.Certificate.loadFromPFX(data.hex, data.password, data.type);\t\t\t\r\n\t\t} else {\r\n\t\t\tthrow new Error('PEM or PFX file format supported!');\r\n\t\t}\r\n        return o.success;\r\n    }\r\n\r\n}"],"names":["Utils$1","Utils","static","value","el","document","createElement","body","insertAdjacentElement","GSDOM","queryAll","forEach","remove","notify","GSComponents","get","success","msg","info","danger","e","data","error","message","toString","inform","a","i","len","length","push","parseInt","substring","Uint8Array","src","Array","ArrayBuffer","String","utf8ToBuffer","toArrayBuffer","val","Blob","encoding","type","validateData","name","blob","GSUtil","isString","stringToBlob","binaryToBlob","link","URL","createObjectURL","download","href","click","setTimeout","revokeObjectURL","url","indexOf","params","target","win","globalThis","open","GSFunction","isFunction","focus","addEventListener","WebAuthn","location","origin","Object","freeze","o","from","atob","c","charCodeAt","btoa","fromCharCode","apply","IP_REGEXP","test","hostname","protocol","cfg","api","service","svc","headers","io","greenscreens","WebAuthnController","Engine","init","action","finish","engine","callRemote","challenge","fromBinary","uid","obj","publicKey","rp","id","user","displayName","pubKeyCredParams","alg","attestation","timeout","excludeCredentials","extensions","authenticatorSelection","requireResidentKey","userVerification","cred","navigator","credentials","create","Error","auth","rawId","toBinary","attestationObject","response","clientDataJSON","creds","every","v","rpId","allowCredentials","uvm","loc","txAuthSimple","authenticatorData","signature","userHandle","doRegister","doAuthenticate","GSLog","this","print","tracing","forced","logging","tmp","nodeName","fn","console","log","seal","GS_FLAT","n","isNaN","parseFloat","isFinite","Boolean","dft","isNumber","trim","toLowerCase","str","replace","x","g","word","toUpperCase","slice","split","map","capitalize","join","includes","pattern","charset","Math","floor","random","locale","language","languages","startsWith","isArray","isJsonString","isJsonType","JSON","parse","warn","def","format","capitalizeAll","tpl","names","keys","vals","values","Function","isStringNonEmpty","window","isStringEmpty","normalize","left","right","lmatch","rmatch","time","signal","AbortSignal","Promise","resolve","reject","iid","bind","clearTimeout","clazz","ext","expose","HTMLElement","isPrototypeOf","customElements","define","extends","isSealed","isFrozen","self","import","GSAsbtractDialog","GSDialog","connectedCallback","super","cssHeader","dialogTemplate","dialogTitle","async","onBeforeReady","me","on","onFormData","onFormError","GSLoader","getTemplate","setHTML","title","onReady","auto","update","GSAttr","getAsBool","waiter","form","query","forms","isJson","reset","emit","GSEvents","prevent","sts","disable","onData","detail","handleError","enable","close","onError","Tn5250","version","build","release","opt","lic","Login","uuid","host","cancelable","align","cssTitle","GSC","logoUrl","otp","password","initDemo","unsetUI","DEMO","toggle","initAuth","engineLogin","doWebAuth","shell","assign","AdminController","login","onOpen","postLogin","isWebauth","appID","ipAddress","ip","authenticate","cookie","srl","webauthOnly","reload","stop","engineShell","SocketChannel","fido","isOtp","res","fetch","ok","json","toggleClass","closable","parentElement","innerHTML","getEngine","api1","svc1","api2","svc2","clear","setUI","SidebarUI","GSElement","HeaderUI","onAction","attachEvent","fnName","source","dataset","capitalizeAttr","isFunctionAsync","Session","closeSession","Server","restart","Certificate","verifySSLClient","regenerate","code","request","requestPem","privatePem","confirm","generate","certExport","openInNewTab","explorer","downloadConfig","downloadLogs","ShellUI","company","getByID","GSSearch","css","iconCSS","inputCSS","placeholder","GSEnvironment","isWebkit","searchEl","onSearch","which","send","set","BaseViewUI","constructor","className","GS_LOG_ACTION","monitorAction","table","onViewRefresh","requestAnimationFrame","recID","filter","flt","store","modal","tagName","export","stringify","rec","onClone","setData","secondary","onRemove","subset","hasOwnProperty","onDetails","fromObject","result","waitEvent","onUpdate","onCreate","primary","onLoad","onViewSearch","GSConfiguration","ctx","hasInstaller","querySelector","activateDialog","printerReset","printerSetup","validate","Hosts","list","setHost","unsetHost","cloneConfig","onViewResetPrinter","onViewSetupPrinter","onViewActivate","GSTunnel","Proxy","skip","limit","save","Date","now","start","conf","fromHex","GSCustomization","Scripts","getScripts","header","footer","ui","setScripts","GSFilterFido","large","Fido","isActive","switcher","selectedIndex","onSwitch","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","add","onViewToggle","active","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","prepare","outq","library","userName","spoolName","GSScheduler","mapState","true","false","status","Scheduler","runNow","GSUsers","Users","commit","resync","confid","devtype","driver","drawer1","drawer2","enhanced","display","program","printer","GSWorkstations","Tweaks","terminal","Manage","listSessions","prompt","sendMessage","sessionID","deviceID","loging","killDevice","sendMessages","killSessions","disconnectedCallback","onViewViewSession","closed","onclose","setInterval","clearInterval","updateScreen","Keyboard","listen","getScreen","Application","Binary","GSWebmodules","WebModules","GSAbout","GSModal","undefined","html","GSCertBlocked","getBlocked","onFormInit","setBlocked","GSCertClient","generateClient","arr","raw","GSCertImport","setFromPEM","rootCAPub","rootCAPriv","serverPub","serverPriv","rootPass","serverPass","input","file","files","buff","arrayBuffer","pfx","setFromPFX","GSCertOpt","loadSafe","loadConfig","saveConfig","GSLoginAdmin","getConfig","newAuth","GSLoginDefaults","getDefaults","saveDefaults","GSOtpOptions","getOtp","saveOTP","GSRegisterBiometrics","isAllowed","register","GSRegisterOtp","scratch","qrcode","token","getUrl","b64","key","replaceAll","scratchCodes","alt","GSNetwork","getInterface","redirect","nodes","setInterface","GSSystem","setConfig","reloadKerberors","GSWorkstation","cssBody","order","GSFilter","IP","onChange","typeField","valueField","MASK","GSService","classList","isBool","checked","module","property","GSPrinterReset","visible","Printer","GSPrinterSetup","hpt","onHPT","hostTransform","setup","GSActivate","Activator","activate","GSKerberos","Kerberos","load","GSMigrate","migrate","path","isPEM","isExt","isPFX","endsWith","toHex","hex","fileToHex","loadFromPEM","loadFromPFX"],"mappings":"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"}