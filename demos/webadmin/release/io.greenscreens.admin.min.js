import{GSDOM as e,GSComponents as t,GSUtil as s,GSFunction as a,GSDialog as n,GSLoader as r,GSAttr as i,GSEvent as o,GSElement as c,GSEnvironment as l,GSModal as d}from'/webcomponents/release/esm/io.greenscreens.components.all.esm.min.js';class Utils$1{static setUI(e){const t=document.createElement(e);document.body.insertAdjacentElement('beforeend',t)}static unsetUI(t){e.queryAll(t).forEach((e=>e.remove()))}static get notify(){return t.get('notification')}static inform(e=!1,t){if(Utils$1.notify)return e?Utils$1.notify.info('Info',t):(Utils$1.notify.danger('Error',t),e)}static handleError(e){const t=e.data?.error||e.msg||e.message||e.toString();return Utils$1.inform(!1,t),t}static fromHex(e){let t=[];for(let s=0,a=e.length;s<a;s+=2)t.push(parseInt(e.substring(s,2),16));return new Uint8Array(t)}static#e(e){var t=null;if(e instanceof Array)t=new Uint8Array(e);else if(e instanceof ArrayBuffer)t=new Uint8Array(e);else if(e instanceof Uint8Array)t=e;else if(e instanceof String||'string'==typeof e)t=utf8ToBuffer(e);else{if(!e.toArrayBuffer)throw'Invalid input, must be String or ArrayBuffer or Uint8Array';t=new Uint8Array(e.toArrayBuffer())}return t}static stringToBlob(e){return new Blob([e],{encoding:'UTF-8',type:'text/plain;charset=UTF-8'})}static binaryToBlob(e){const t=Utils$1.#e(e);return new Blob([t],{type:'application/octet-stream'})}static download(e,t){if(!t)return!1;const a=s.isString(t)?Utils$1.stringToBlob(t):Utils$1.binaryToBlob(t),n=URL.createObjectURL(a);try{const t=document.createElement('a');t.download=e,t.href=n,t.click()}finally{setTimeout((()=>URL.revokeObjectURL(n)),250)}return!0}static revokeObjectURL(e){0===e?.indexOf('blob:')&&URL.revokeObjectURL(e)}static openInNewTab(e,t,s='_blank'){const n=globalThis.open(e,s,t||null);return a.isFunction(n.focus)&&n.focus(),n.addEventListener('beforeunload',(()=>(Utils$1.revokeObjectURL(e),null))),n}}class WebAuthn{static#t=/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/;static#s=`${location.origin}/services/api?q=/wsauth`;static#a=`${location.origin}/services/rpc`;static#n={'x-type':'admin'};static{Object.freeze(WebAuthn)}static#r(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0)))}static#i(e){return btoa(String.fromCharCode.apply(null,new Uint8Array(e)))}static isAllowed(){return!WebAuthn.#t.test(location.hostname)&&'https:'===location.protocol||'localhost'===location.hostname}static get#o(){return{api:WebAuthn.#s,service:WebAuthn.#a,headers:WebAuthn.#n}}static async#c(){if(!io?.greenscreens?.WebAuthnController)return Engine.init(WebAuthn.#o)}static async#l(e,t=!1,s){return await WebAuthn.#c(),await io.greenscreens.WebAuthnController[e](s,t)}static async#d(e){const t=(await WebAuthn.#l('register',!1,e)).data,s=WebAuthn.#r(t.challenge),a=WebAuthn.#r(t.uid),n={publicKey:{rp:{name:t.rp,id:location.hostname},challenge:s,user:{id:a,name:t.name,displayName:t.displayName},pubKeyCredParams:[{type:'public-key',alg:-7},{type:'public-key',alg:-257},{type:'public-key',alg:-41}],attestation:'direct',timeout:6e4,excludeCredentials:[],extensions:{},authenticatorSelection:{requireResidentKey:!1,userVerification:'preferred'}}},r=await navigator.credentials.create(n);if(null==r)throw new Error('Credential not found!');const i={uid:t.uid,id:r.id,rawId:WebAuthn.#i(r.rawId),attestationObject:WebAuthn.#i(r.response.attestationObject),clientDataJSON:WebAuthn.#i(r.response.clientDataJSON)};return await WebAuthn.#l('register',!0,i)}static async#u(e,t){const s=(await WebAuthn.#l(e,!1,t)).data,a=WebAuthn.#r(s.challenge),n=[];if('test'===e&&0===s.uid.length)throw new Error('Invalid credentials!');s.uid.every((e=>{const t={type:'public-key',id:WebAuthn.#r(e)};return n.push(t),!0}));const r={challenge:a,rpId:location.hostname,userVerification:'preferred',timeout:6e4,allowCredentials:n,extensions:{uvm:!0,loc:!1,txAuthSimple:'Could you please verify yourself?'}},i=await navigator.credentials.get({publicKey:r});if(null==i)throw new Error('Credential not found!');const o={id:i.id,rawId:WebAuthn.#i(i.rawId),authenticatorData:WebAuthn.#i(i.response.authenticatorData),clientDataJSON:WebAuthn.#i(i.response.clientDataJSON),signature:WebAuthn.#i(i.response.signature),userHandle:WebAuthn.#i(i.response.userHandle)};return await WebAuthn.#l(e,!0,o)}static register(e){return WebAuthn.#d(e)}static authenticate(e){return WebAuthn.#u('authenticate',e)}static update(e){return WebAuthn.#u('update',e)}static unregister(e){return WebAuthn.#u('unregister',e)}static test(e){return WebAuthn.#u('test',e)}}class GSAdminDialog extends n{connectedCallback(){super.connectedCallback();this.cssHeader='p-3 dialog-title'}get dialogTemplate(){return''}get dialogTitle(){return''}async onReady(){super.onReady();const t=this;t.on('data',t.#g.bind(t)),t.on('action',t.#m.bind(t)),t.on('error',t.#p.bind(t));const s=await r.getTemplate(t.dialogTemplate);requestAnimationFrame((()=>{e.setHTML(t,s),t.title=t.dialogTitle,t.auto&&t.open()}))}get auto(){return i.getAsBool(this,'auto',!0)}get waiter(){return t.get('modal-waiter')}get notify(){return t.get('notification')}get form(){return e.query(this,'form')}async onOpen(e){return e}async onData(e){return!0}async open(e){const t=this;t.form?.reset(),!1!==(e=await t.onOpen(e))&&(super.open(),requestAnimationFrame((async()=>{await GSUtil.timeout(200),t.#h(e)})))}#p(e){Utils$1.inform(!1,'Some fields are invalid!')}#h(t){'object'==typeof t&&e.queryAll(this,'form').forEach((s=>e.fromObject(s,t)))}async#g(e){o.prevent(e);const t=this;try{await t.onData(e.detail.data)&&t.close()}catch(e){Utils$1.handleError(e)}}async#m(e){const t=this;if(e.detail.action)try{const s=GSUtil.capitalizeAttr(e.detail.action),n=t[s];a.isFunction(n)&&(a.isFunctionAsync(n)?await t[s](e):t[s](e))}catch(e){Utils$1.handleError(e)}}}globalThis.Tn5250={version:'6.0.0.300',build:'15.10.2022.',release:20221015};class Login extends GSAdminDialog{static{customElements.define('gs-admin-shell-login',Login),Object.seal(Login)}static#n={'x-type':'admin'};static#y={uuid:'ADMIN',host:'ADMIN',user:'ADMIN'};static#f=`${location.origin}/services/api?q=/rpc`;static#w=`${location.origin}/services/rpc`;static#b=`${location.origin}/services/api?q=/wsadmin`;static#v=`${location.origin}/services/wsadmin`.replace('http','ws');static#S=`${location.origin}/services/auth`;#c=null;connectedCallback(){super.connectedCallback();const e=this;e.cancelable=!1,e.align='center',e.cssTitle='d-flex justify-content-center w-100'}get dialogTemplate(){return'//shell/login.html'}get dialogTitle(){return`<img src="${globalThis.GSC?.logoUrl||'../assets/img/logo.png'}" alt="..." height="30" width="180">`}get#O(){return this.query('input[name="otp"]')}get#E(){return this.query('input[name="password"]')}async onOpen(){const e=this;return e.#D(),Utils$1.unsetUI('gs-admin-shell'),DEMO?e.#U(!1):(await s.timeout(5),await e.#A(),e.#c=await e.#G(),e.#M(),!0)}async onData(e){const t=this;if(globalThis.DEMO)return t.#T(),!0;try{t.#U(!0);const s=Object.assign(e,Login.#y);await io.greenscreens.AdminController.login(s)}catch(e){throw t.onOpen(),e}t.#I()}async#M(){const e=this;if(!e.#$)return;const t={appID:0,ipAddress:Tn5250.opt.ip},s=Object.assign(t,Login.#y);try{const t=await WebAuthn.authenticate(s);t.success&&(document.cookie='X-Authorization='+t.srl+'; path=/services/wsadmin'),e.#I()}catch(t){Utils$1.handleError(t),e.#C&&location.reload()}}async#I(){const e=this;return e.#c?.stop(),e.#c=await e.#R(),e.#c.SocketChannel.on('offline',(t=>{Utils$1.handleError(t),e.#c?.stop(),location.reload()})),e.#T(),!0}get#$(){return Tn5250?.opt?.fido}get#x(){return Tn5250?.opt?.otp}get#C(){return this.#$&&!this.#x}#D(){'DEMO'in globalThis||(globalThis.DEMO='function'!=typeof Engine)}#U(t=!1){e.queryAll(this,'input, button').forEach((e=>i.toggle(e,'disabled',t))),e.query(this,'input').focus()}async#A(){delete globalThis.io;const t=await fetch(Login.#S);if(!t.ok)return!1;const s=globalThis.Tn5250.opt=await t.json();globalThis.Tn5250.opt=s;const a=this;i.toggle(a.#O,'disabled',!s.otp),i.toggle(a.#E,'disabled',!s.otp),e.toggleClass(a.#O,'d-none',!s.otp),a.#C&&(a.closable=!1,a.body.parentElement.innerHTML='<div class="m-3 text-center fs-5">Use security key to access Web Admin console.</div>')}async#G(){return this.#k(Login.#f,Login.#w)}async#R(){return this.#k(Login.#b,Login.#v)}async#k(e,t){return delete globalThis.io,this.#c=null,Engine.init({api:e,service:t,headers:Login.#n})}#T(){this.#F(),Utils$1.setUI('gs-admin-shell')}#F(){Utils$1.unsetUI('gs-admin-shell-login'),Utils$1.unsetUI('gs-admin-shell')}}class SidebarUI extends c{static{customElements.define('gs-admin-shell-sidebar',SidebarUI),Object.seal(SidebarUI)}async getTemplate(){return super.getTemplate('//shell/sidebar.html')}onReady(){super.onReady()}}class HeaderUI extends c{static{customElements.define('gs-admin-shell-header',HeaderUI),Object.seal(HeaderUI)}async getTemplate(){return super.getTemplate('//shell/header.html')}onReady(){super.onReady();const e=this;e.on('action',e.#m.bind(e)),e.queryAll('gs-dropdown').forEach((t=>e.attachEvent(t,'action',e.#m.bind(e))))}async#m(e){const t=this;try{const n=e?.detail?.action||e?.detail?.source?.target?.dataset?.action,r=s.capitalizeAttr(n),i=t[r];a.isFunction(i)&&(a.isFunctionAsync(i)?await t[r](e):t[r](e))}catch(e){Utils$1.handleError(e)}}get notify(){return t.get('notification')}async logout(){try{Utils$1.unsetUI('gs-admin-shell-login'),Utils$1.unsetUI('gs-admin-shell');return(DEMO||await io.greenscreens.Session.closeSession()).success}finally{location.reload()}}async restart(){const e=DEMO||await io.greenscreens.Server.restart();Utils$1.inform(e.success,'Server is restarting! <br>Wait about 1min. then refresh browser.')}async certClientVerify(){const e=(DEMO||await io.greenscreens.Certificate.verifySSLClient(2)).msg||'Client SSL verification changed.';Utils$1.inform(!0,e+'<br>Restart server to apply changes.')}async certGenTerm(){'RSA'===(DEMO||await io.greenscreens.Server.regenerate()).code&&Utils$1.inform(!0,'New encryption keys generated')}async certGenReq(){const e=DEMO||await io.greenscreens.Certificate.request(!0);Utils$1.download('server_request.txt',e.data.requestPem),Utils$1.download('server_private.txt',e.data.privatePem)}async certGenSvr(){confirm('Are you sure? Action will overwrite existnig certificate.')&&(DEMO||await io.greenscreens.Certificate.generate(!0),Utils$1.inform(!0,'New server certificate generated! <br> Please, restart server for changes to apply.'))}certExport(){Utils$1.openInNewTab(`${location.origin}/services/certificate`)}explorer(){Utils$1.openInNewTab(`${location.origin}/admin/explorer`,'toolbar=no,scrollbars=yes,resizable=yes')}downloadSavf(){Utils$1.openInNewTab(`${location.origin}/services/admintransfer?type=savf`)}downloadConfig(){Utils$1.openInNewTab(`${location.origin}/services/admintransfer?type=conf`)}downloadLogs(){Utils$1.openInNewTab(`${location.origin}/services/admintransfer?type=log`)}}class ShellUI extends c{static{customElements.define('gs-admin-shell',ShellUI),Object.seal(ShellUI)}async getTemplate(){return super.getTemplate('//shell.html')}onReady(){super.onReady();const e=this;e.GSC?.company&&e.company&&(e.company.innerHTML=e.GSC.company)}get company(){return this.getByID('company')}get GSC(){return globalThis.GSC}}class GSSearch extends c{static{customElements.define('gs-search',GSSearch),Object.seal(GSSearch)}async getTemplate(){const e=this;return`\n        <div class="input-group ${e.css}">\n            <i class="input-group-text ${e.iconCSS}"></i>\n            <input type="search"  incremental="true" class="form-control ${e.inputCSS}" placeholder="${e.placeholder}" name="${e.name}">\n        </div>        \n        `}onReady(){const e=this;l.isWebkit?e.attachEvent(e.#j,'search',e.#L.bind(e)):e.attachEvent(e.#j,'keydown',e.#L.bind(e)),super.onReady()}#L(e){if(!l.isWebkit&&13!=e.which)return;o.prevent(e);const t={type:'search',action:'search',value:this.#j.value};o.send(this,'action',t,!0,!0,!0)}get#j(){return this.query('input')}get css(){return i.get(this,'css','')}set css(e=''){return i.set(this,'css',e)}get iconCSS(){return i.get(this,'css-icon','bg-white bi bi-search')}set iconCSS(e=''){return i.set(this,'css-icon',e)}get inputCSS(){return i.get(this,'css-input','border-start-0')}set inputCSS(e=''){return i.set(this,'css-input',e)}get placeholder(){return i.get(this,'placeholder','search')}set placeholder(e=''){return i.set(this,'placeholder',e)}get name(){return i.get(this,'name','search')}set name(e=''){return i.set(this,'name',e)}}class BaseViewUI extends c{constructor(){super(),this.className='d-flex flex-fill'}onReady(){const e=this;super.onReady(),e.attachEvent(e,'action',e.#m.bind(e)),e.attachEvent(e.#B,'filter',(t=>e.refresh())),requestAnimationFrame((()=>e.refresh()))}get recID(){return'id'}get filter(){const e=this.#B?.store.filter||[],t={};return e.forEach((e=>t[e.name]=e.value)),t}get store(){return this.#B?.store}get#B(){return this.query('#table-main')}get form(){return e.query(this.modal,'#form-main')}get waiter(){return t.get('modal-waiter')}get modal(){return this.query('#modal-main')}async#m(e){const t=this;if(e.detail.action)try{const n=s.capitalizeAttr(e.detail.action),r=t[n];a.isFunction(r)&&(a.isFunctionAsync(r)?await t[n](e):t[n](e))}catch(e){Utils$1.handleError(e)}}async export(){const e=this.tagName.toLowerCase(),t=this.store.data;s.export([JSON.stringify(t)],`${e}.json`)}async clone(e){const t=this,s=e.detail.data[0];if(!s)return;const a=Object.assign({},s);try{if(!await t.onClone(a))throw new Error('Record not cloned!');t.store.setData(a,!0),Utils$1.notify.secondary('','Record cloned!'),t.refresh()}catch(e){Utils$1.handleError(e)}}async remove(e){const t=this,s=e.detail.data[0];if(s)try{if(!await t.onRemove(s))throw new Error('Record not removed!');const e=t.store.data.filter((e=>!e.hasOwnProperty(t.recID)||e[t.recID]!==s[t.recID]));t.store.setData(e),Utils$1.notify.danger('','Record removed!')}catch(e){Utils$1.handleError(e)}}async details(t){const s=this,a=await s.onDetails(t.detail.data[0]);if(!a)return;s.form?.reset(),e.fromObject(s.form,a),s.modal.open(a);const n=await s.modal.waitEvent('data');try{if(!await s.onUpdate(n.data))throw new Error('Record not updated!');Object.assign(a,n.data),s.store.reload(),Utils$1.notify.warn('','Record updated!')}catch(t){Utils$1.handleError(t)}}async create(e){const t=this;t.form?.reset(),t.modal.open();const s=await t.modal.waitEvent('data');try{if(!await t.onCreate(s.data))throw new Error('Record not created!');Utils$1.notify.primary('','Record created!'),t.refresh()}catch(e){Utils$1.handleError(e)}}async refresh(e){const t=this,s=await t.onLoad(e);t.store&&requestAnimationFrame((()=>{try{Array.isArray(s)&&s.length>0?t.store.setData(s):t.store.reload()}catch(e){}}))}search(e){this.store.filter=e.detail.value}async onDetails(e){return e}async onCreate(e){return!0}async onClone(e){return!0}async onUpdate(e){return!0}async onRemove(e){return!0}async onLoad(e){return!1}}class GSConfiguration extends BaseViewUI{static{customElements.define('gs-admin-view-configuration',GSConfiguration),Object.seal(GSConfiguration)}onReady(){super.onReady();const e=this;requestAnimationFrame((async()=>{await s.timeout(1e3),e.#h()}))}#h(){const e=this.query('gs-context');this.#P?(e?.self?.querySelector('[data-action="license"]')?.remove(),e?.self?.querySelector('[data-action="install"]')?.remove()):e?.self?.querySelector('[data-action="activate"]')?.remove()}get#P(){return 1==Tn5250?.opt?.lic}async getTemplate(){return super.getTemplate('//views/configurations.html')}get activateDialog(){return t.get('modal-activate')}get installDialog(){return t.get('modal-install')}get licenseDialog(){return t.get('modal-license')}get printerReset(){return t.get('modal-reset')}get printerSetup(){return t.get('modal-setup')}get validate(){return t.get('modal-validate')}async onLoad(e){return(DEMO||await io.greenscreens.Hosts.list(!1)).data}async onCreate(e){return(DEMO||await io.greenscreens.Hosts.setHost(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Hosts.setHost(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Hosts.unsetHost(e)).success}async onClone(e){return(DEMO||await io.greenscreens.Hosts.cloneConfig(e)).success}resetPrinter(e){const t=e.detail.data[0];this.printerReset.open(t)}setupPrinter(e){const t=e.detail.data[0];this.printerSetup.open(t)}activate(e){const t=e.detail.data[0];this.activateDialog.open(t)}install(e){const t=e.detail.data[0];this.installDialog.open(t)}license(e){const t=e.detail.data[0];this.licenseDialog.open(t)}async validateServer(e){const t=this;t.waiter.open();try{const s=e.detail.data[0],a=`<pre>${(DEMO||await io.greenscreens.Hosts.validate(s)).msg}</pre>`;t.validate.confirm('Validate',a)}finally{t.waiter.close()}}}class GSTunnel extends BaseViewUI{static{customElements.define('gs-admin-view-tunnel',GSTunnel),Object.seal(GSTunnel)}async getTemplate(){return super.getTemplate('//views/tunnel.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Proxy.list(e.store.page,e.store.limit,t)).data}async onCreate(e){return(DEMO||await io.greenscreens.Proxy.save(e)).success}async onClone(e){delete e.id,e.name=`${e.name} - ${Date.now()}`;return(DEMO||await io.greenscreens.Proxy.save(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Proxy.save(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Proxy.remove(e.id)).success}async start(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.Proxy.start(t.id);Utils$1.inform(s.success,'Tunnel started')}async stop(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.Proxy.stop(t.id);Utils$1.inform(s.success,'Tunnel stopped')}async restart(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.Proxy.restart(t.id);Utils$1.inform(s.success,'Tunnel restarted')}async download(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.Proxy.download(t.id),a=['auto: true','mode: cloud','cloud: '+location.origin,'token: '+s.code,'tls: 1','tlsVerify: true'];Utils$1.download(t.name+'.bin',Utils$1.fromHex(s.msg)),Utils$1.download('server.config',a.join('\n'))}}class GSCustomization extends BaseViewUI{static{customElements.define('gs-admin-view-customization',GSCustomization),Object.seal(GSCustomization)}async getTemplate(){return super.getTemplate('//views/customizations.html')}async onLoad(){const e=this,t=DEMO||await io.greenscreens.Scripts.getScripts();e.header.value=t.data?.header||'',e.footer.value=t.data?.footer||'',e.ui.value=t.data?.ui||''}async save(){const e=this;try{const t=DEMO||await io.greenscreens.Scripts.setScripts(e.header.value,e.footer.value,e.ui.value);Utils$1.inform(t.success,'Data saved!')}catch(e){Utils$1.handleError(e)}}get header(){return this.query('#header')}get footer(){return this.query('#footer')}get ui(){return this.query('#ui')}}class GSFilterFido extends BaseViewUI{static{customElements.define('gs-admin-view-filterfido',GSFilterFido),Object.seal(GSFilterFido)}async getTemplate(){return super.getTemplate('//views/filter-fido.html')}async onReady(){super.onReady();const e=this;e.modal.large();try{const t=DEMO||await io.greenscreens.Fido.isActive();e.switcher.selectedIndex=parseInt(t.code,10)}finally{e.attachEvent(e.switcher,'change',e.#W.bind(e))}}get switcher(){return this.query('select[name="filter"]')}async#W(e){try{const t=parseInt(e.target.value,10);DEMO||await io.greenscreens.Fido.activity(t)}catch(e){Utils$1.handleError(e)}}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Fido.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){return(DEMO||await io.greenscreens.Fido.set(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Fido.set(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Fido.remove(e.id)).success}}class GSFilterIP extends BaseViewUI{static{customElements.define('gs-admin-view-filterip',GSFilterIP),Object.seal(GSFilterIP)}async onReady(){super.onReady();const e=this;e.modal.large();try{const t=DEMO||await io.greenscreens.Filter.isActive();e.switcher.selectedIndex=parseInt(t.code,10)}finally{e.attachEvent(e.switcher,'change',e.#W.bind(e))}}get switcher(){return this.query('select[name="filter"]')}async#W(e){try{const t=parseInt(e.target.value,10);DEMO||await io.greenscreens.Filter.activity(t)}catch(e){Utils$1.handleError(e)}}async getTemplate(){return super.getTemplate('//views/filter-ip.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Filter.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){return(DEMO||await io.greenscreens.Filter.set(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Filter.set(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Filter.remove(e.id)).success}}class GSFilterMobile extends BaseViewUI{static{customElements.define('gs-admin-view-filtermobile',GSFilterMobile),Object.seal(GSFilterMobile)}async onReady(){super.onReady();const e=this;e.modal.large();try{const t=DEMO||await io.greenscreens.Mobile.isActive();e.switcher.selectedIndex=parseInt(t.code,10)}finally{e.attachEvent(e.switcher,'change',e.#W.bind(e))}}get switcher(){return this.query('select[name="filter"]')}async#W(e){try{const t=parseInt(e.target.value,10);DEMO||await io.greenscreens.Mobile.activity(t)}catch(e){Utils$1.handleError(e)}}async getTemplate(){return super.getTemplate('//views/filter-mobile.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Mobile.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){return(DEMO||await io.greenscreens.Mobile.set(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Mobile.set(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Mobile.remove(e.id)).success}}class GSApiKeys extends BaseViewUI{static{customElements.define('gs-admin-view-apikeys',GSApiKeys),Object.seal(GSApiKeys)}onReady(){super.onReady(),this.modal.large()}async getTemplate(){return super.getTemplate('//views/keys-api.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.ApiKeys.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){return(DEMO||await io.greenscreens.ApiKeys.add(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.ApiKeys.update(e.id,e)).success}async onRemove(e){return(DEMO||await io.greenscreens.ApiKeys.remove(e.id)).success}toggle(e){const t=e.detail.data[0];if(!t)return Utils.inform(!1,'Record not selected!');t.active=!t.active;this.onUpdate(t),this.refresh()}}class GSOtp extends BaseViewUI{static{customElements.define('gs-admin-view-otp',GSOtp),Object.seal(GSOtp)}onReady(){super.onReady(),this.modal.large()}async getTemplate(){return super.getTemplate('//views/keys-otp.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.OAuth.list(e.store.page-1,e.store.limit,t)).data}async onUpdate(e){return(DEMO||await io.greenscreens.OAuth.update(e.id,e.active)).success}async onRemove(e){return(DEMO||await io.greenscreens.OAuth.remove(e.id)).success}toggle(e){const t=e.detail.data[0];if(!t)return Utils$1.inform(!1,'Record not selected!');t.active=!t.active;this.onUpdate(t),this.refresh()}}class GSBiometrics extends BaseViewUI{static{customElements.define('gs-admin-view-biometrics',GSBiometrics),Object.seal(GSBiometrics)}async getTemplate(){return super.getTemplate('//views/keys-bio.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.WebAuth.list(e.store.page-1,e.store.limit,t)).data}async onRemove(e){return(DEMO||await io.greenscreens.WebAuth.remove(e)).success}}class GSPrinting extends BaseViewUI{static{customElements.define('gs-admin-view-printing',GSPrinting),Object.seal(GSPrinting)}async getTemplate(){return super.getTemplate('//views/printing.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Printers.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){this.#q(e);return(DEMO||await io.greenscreens.Printers.set(e)).success}async onUpdate(e){this.#q(e);return(DEMO||await io.greenscreens.Printers.set(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Printers.remove(e.id)).success}#q(e){e.uuid=e.uuid.toUpperCase(),e.host=e.host.toUpperCase(),e.outq=(e.outq||'').toUpperCase(),e.library=(e.library||'').toUpperCase(),e.userName=(e.userName||'').toUpperCase(),e.spoolName=(e.spoolName||'').toUpperCase()}}class GSScheduler extends BaseViewUI{#N={'':0,true:1,false:2};static{customElements.define('gs-admin-view-scheduler',GSScheduler),Object.seal(GSScheduler)}async getTemplate(){return super.getTemplate('//views/schedulers.html')}async onLoad(){const e=this,t=e.filter,s=t.type?parseInt(t.type,10):null,a=e.#N[t.status]||0;return(DEMO||await io.greenscreens.Scheduler.list(e.store.page-1,e.store.limit,s,a)).data}async onCreate(e){return(DEMO||await io.greenscreens.Scheduler.save(e)).success}async onUpdate(e){return(DEMO||await io.greenscreens.Scheduler.save(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Scheduler.remove(e.id)).success}async run(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.Scheduler.runNow(t.id);Utils$1.inform(s.success,'Task started!'),this.refresh()}}class GSUsers extends BaseViewUI{static{customElements.define('gs-admin-view-users',GSUsers),Object.seal(GSUsers)}async getTemplate(){return super.getTemplate('//views/users.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Users.list(e.store.page-1,e.store.limit,t)).data}async onCreate(e){this.#q(e);return(DEMO||await io.greenscreens.Users.save(e)).success}async onUpdate(e){this.#q(e);return(DEMO||await io.greenscreens.Users.save(e)).success}async onClone(e){delete e.id;return(DEMO||await io.greenscreens.Users.save(e)).success}async onRemove(e){return(DEMO||await io.greenscreens.Users.remove(e.id)).success}async commit(e){const t=this;t.waiter.open();try{const e=DEMO||await io.greenscreens.Users.commit();Utils$1.inform(e.success,'Sync with database ok!')}finally{t.waiter.close()}}async resync(e){const t=this;t.waiter.open();try{const e=DEMO||await io.greenscreens.Users.resync();Utils$1.inform(e.success,'Sync from storage started!')}finally{t.waiter.close()}}#q(e){e.confid=parseInt(e.confid||0),e.devtype=parseInt(e.devtype||0),e.driver=parseInt(e.driver||0),e.drawer1=parseInt(e.drawer1||-1),e.drawer2=parseInt(e.drawer2||-1),e.enhanced=parseInt(e.enhanced||0),e.uuid=(e.uuid||'').toUpperCase(),e.host=(e.host||'').toUpperCase(),e.user=(e.user||'').toUpperCase(),e.display=(e.display||'').toUpperCase(),e.outq=(e.outq||'').toUpperCase(),e.program=(e.program||'').toUpperCase(),e.printer=e.printer||'Default'}}class GSWorkstations$1 extends BaseViewUI{static{customElements.define('gs-admin-view-services',GSWorkstations$1),Object.seal(GSWorkstations$1)}async getTemplate(){return super.getTemplate('//views/services.html')}async onLoad(){return(DEMO||await io.greenscreens.Tweaks.list()).data}}class GSWorkstations extends BaseViewUI{static{customElements.define('gs-admin-view-workstations',GSWorkstations),Object.seal(GSWorkstations)}#H={};async getTemplate(){return super.getTemplate('//views/workstations.html')}async onLoad(){const e=this,t=e.filter;return(DEMO||await io.greenscreens.Manage.listSessions(e.store.page-1,e.store.limit,t)).data}async message(e){const t=prompt('Enter message to send');if(t?.trim().length>0)try{const s=e.detail.data[0];s.message=t;DEMO||await io.greenscreens.Manage.sendMessage(s.sessionID,s.deviceID,s.message);Utils$1.inform(!0,'Message sent!')}catch(e){Utils$1.handleError(e)}}async logging(e){try{const t=e.detail.data[0],s=DEMO||await io.greenscreens.Manage.loging(t);if('false'===s.msg){const e=location.origin+'/services/logs?id='+s.code;Utils$1.download('server.log',e)}}catch(e){Utils$1.handleError(e)}}async kill(e){try{const t=e.detail.data[0];DEMO||await io.greenscreens.Manage.killDevice(t);Utils$1.inform(!0,'Kill signal sent!')}catch(e){Utils$1.handleError(e)}}async messageFilter(e){const t=prompt('Enter message to send');if(!(t?.trim().length>0))return;const s=this;try{Object.assign(s.filter).message=t;DEMO||await io.greenscreens.Manage.sendMessages(s.filter);Utils$1.inform(!0,'Message sent!')}catch(e){Utils$1.handleError(e)}}async killFilter(e){const t=this;try{DEMO||await io.greenscreens.Manage.killSessions(t.filter);Utils$1.inform(!0,'Kill signal sent!')}catch(e){Utils$1.handleError(e)}}async export(e){const t=this;try{const e=DEMO||await io.greenscreens.Manage.export(0,0,t.filter),s=JSON.stringify(e.data);Utils$1.download('workstations.json',s)}catch(e){Utils$1.handleError(e)}}disconnectedCallback(){super.disconnectedCallback();Object.values(this.#H).filter((e=>a.isFunction(e.close))).forEach((e=>e.close())),this.#H={}}viewSession(e){if(DEMO)return Utils$1.inform(!1,'Not available in DEMO mode.');const t=this,s=e.detail.data[0];let n=t.#H[s.deviceID];if(n&&!n.closed)return;const r=`${location.origin}/terminal/?d=0&k=0`;n=Utils$1.openInNewTab(r,'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes'),n.onclose=()=>delete t.#H[s.deviceID],a.isFunction(n.focus)&&n.focus();const i=setInterval((()=>{n.Tn5250&&(clearInterval(i),t.#H[s.deviceID]=n,n.document.title=`Terminal - ${s.uuid} - ${s.host} - ${s.display}`,t.#V(n,s),n.Tn5250.Keyboard.listen('command',((e,a,r,i)=>{'PF5'===i&&t.#V(n,s)})))}),1e3)}async#V(e,t){if(e?.Tn5250)try{const s=await io.greenscreens.Manage.getScreen(t.sessionID,t.deviceID);e.Tn5250.Application.test(e.Tn5250.Binary.fromHex(s.msg))}catch(e){}}}class GSWebmodules extends BaseViewUI{static{customElements.define('gs-admin-view-webmodules',GSWebmodules),Object.seal(GSWebmodules)}async getTemplate(){return super.getTemplate('//views/modules.html')}async onLoad(){return(DEMO||await io.greenscreens.WebModules.list()).data}async start(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.WebModules.start(t.name);Utils$1.inform(s.success,'Module started!'),this.refresh()}async stop(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.WebModules.stop(t.name);Utils$1.inform(s.success,'Module stopped!'),this.refresh()}async restart(e){const t=e.detail.data[0],s=DEMO||await io.greenscreens.WebModules.restart(t.name);Utils$1.inform(s.success,'Module restarted!'),this.refresh()}}class GSAbout extends d{static#K='6.0.0.';static#z='20.10.2022. 15:00:00';static{customElements.define('gs-admin-dialog-about',GSAbout),Object.seal(GSAbout)}constructor(){super(),this.align='center'}onReady(){super.onReady();this.confirm(void 0,this.#_)}get version(){return globalThis.Tn5250?.opt?.version||GSAbout.#K}get build(){return globalThis.Tn5250?.opt?.build||GSAbout.#z}get#_(){return`\n        <div slot="body" class="text-center">\n            <div>Version : <span>${this.version}</span></div>\n            <div>Build : <span>${this.build}</span></div>\n        </div>\n        `}}class GSCertBlocked extends GSAdminDialog{static{customElements.define('gs-admin-dialog-certblocked',GSCertBlocked),Object.seal(GSCertBlocked)}get dialogTemplate(){return'//dialogs/certificates-blocked.html'}get dialogTitle(){return'Blocked Certificates'}async onOpen(){return{list:(DEMO||await io.greenscreens.Server.getBlocked()).msg}}async onData(e){return(DEMO||await io.greenscreens.Server.setBlocked(e.list)).success}}class GSCertClient extends GSAdminDialog{static{customElements.define('gs-admin-dialog-certclient',GSCertClient),Object.seal(GSCertClient)}get dialogTemplate(){return'//dialogs/certificates-client.html'}get dialogTitle(){return'Generate Client Certificates'}async onData(e){const t=DEMO||await io.greenscreens.Certificate.generateClient(e),s=Utils.fromHex(t.msg),a=new Uint8Array(s);return Utils.download(t.code,a),t.success}}class GSCertImport$1 extends GSAdminDialog{static{customElements.define('gs-admin-dialog-certimport',GSCertImport$1),Object.seal(GSCertImport$1)}onReady(){super.onReady(),this.large&&this.large()}get dialogTemplate(){return'//dialogs/certificates-import.html'}get dialogTitle(){return'Import Certificates'}async onData(e){return(DEMO||await io.greenscreens.Certificate.setFromPEM(e.rootCAPub,e.rootCAPriv,e.serverPub,e.serverPriv,e.rootPass,e.serverPass)).success}}class GSCertImport extends GSAdminDialog{static{customElements.define('gs-admin-dialog-certimportpfx',GSCertImport),Object.seal(GSCertImport)}onReady(){super.onReady(),this.large&&this.large()}get dialogTemplate(){return'//dialogs/certificates-importpfx.html'}get dialogTitle(){return'Import Binary Certificate'}get input(){return GSDOM.query(this,'gs-filebox')?.query('input')}get file(){const e=this.input;return!(!e?.files?.length>0)&&e.files[0]}async pfx(){const e=await(this.file?.arrayBuffer());return btoa(new Uint8Array(e))}async onData(e){e.pfx=await this.pfx();return(DEMO||await io.greenscreens.Certificate.setFromPFX(e.pfx,e.password)).success}}class GSCertOpt extends GSAdminDialog{static{customElements.define('gs-admin-dialog-certopt',GSCertOpt),Object.seal(GSCertOpt)}onReady(){super.onReady(),this.large&&this.large()}get dialogTemplate(){return'//dialogs/certificates-options.html'}get dialogTitle(){return'Certificate Options'}async onOpen(){return(DEMO||await io.greenscreens.Certificate.loadConfig()).data}async onData(e){return(DEMO||await io.greenscreens.Certificate.saveConfig(e)).success}}class GSLoginAdmin extends GSAdminDialog{static{customElements.define('gs-admin-dialog-loginadm',GSLoginAdmin),Object.seal(GSLoginAdmin)}get dialogTemplate(){return'//dialogs/login-admin.html'}get dialogTitle(){return'Admin Login'}async onOpen(){const e=DEMO||await io.greenscreens.Server.getConfig();return delete e.data.password,e.data}async onData(e){return(DEMO||await io.greenscreens.Session.newAuth(e)).success}}class GSLoginDefaults extends GSAdminDialog{static{customElements.define('gs-admin-dialog-logindefs',GSLoginDefaults),Object.seal(GSLoginDefaults)}get dialogTemplate(){return'//dialogs/login-defaults.html'}get dialogTitle(){return'Login Defaults'}async onOpen(){const e=DEMO||await io.greenscreens.Server.getDefaults();return delete e.data.password,e.data}async onData(e){return(DEMO||await io.greenscreens.Server.saveDefaults(e)).success}}class GSOtpOptions extends GSAdminDialog{static{customElements.define('gs-admin-dialog-otpopt',GSOtpOptions),Object.seal(GSOtpOptions)}get dialogTemplate(){return'//dialogs/otp-options.html'}get dialogTitle(){return'OTP Options'}async onOpen(){return(DEMO||await io.greenscreens.Server.getOtp()).data}async onData(e){return(DEMO||await io.greenscreens.Server.saveOTP(e)).success}}class GSRegisterBiometrics extends GSAdminDialog{static{customElements.define('gs-admin-dialog-bioreg',GSRegisterBiometrics),Object.seal(GSRegisterBiometrics)}connectedCallback(){super.connectedCallback();this.align='center',this.cancelable=!1}get dialogTemplate(){return'//dialogs/register-bio.html'}get dialogTitle(){return'Register Biometric'}async onOpen(){const e=this;if(DEMO)return Utils$1.inform(!1,'Not supported in DEMO mode!');if(!WebAuthn.isAllowed()){const t='FIDO2 allowed only on secured url <br>and valid domain name!';return e.body=t,Utils$1.inform(!1,t),!0}const t={uuid:'ADMIN',host:'ADMIN',user:'ADMIN',appID:0};t.ipAddress=Tn5250.opt.ip;try{await WebAuthn.register(t);e.body='Biometric Web Admin login activated!'}catch(t){e.body=Utils$1.handleError(t)||'Biometric Web Admin login not activated!'}return!0}async onData(e){return!0}}class GSRegisterOtp extends GSAdminDialog{static#J='/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=-1&attGS1=0&attQR1=&attQR2=3&b64=';static{customElements.define('gs-admin-dialog-otpreg',GSRegisterOtp),Object.seal(GSRegisterOtp)}constructor(){super();this.cancelable=!1,this.align='center'}get dialogTemplate(){return'//dialogs/register-otp.html'}get dialogTitle(){return'Register OTP'}get scratch(){return e.query(this,'#scratch')}get qrcode(){return e.query(this,'#qrcode')}get token(){return e.query(this,'#token')}getUrl(e){const t=self.btoa(e);return`${location.origin}${GSRegisterOtp.#J}${t}`}async onOpen(){if(DEMO)return Utils$1.inform(!1,'Nota available in DEMO!');const e=await io.greenscreens.OAuth.register();return this.#X(e.data),this.#h(e.data),e.data}async onData(){return!0}#h(e){const t=this,s=t.getUrl(e.url);t.qrcode.parentElement.href=s,t.qrcode.src=s,t.qrcode.title=e.url,t.token.innerHTML=e.key.replaceAll('=',''),t.scratch.innerHTML=e.scratchCodes.join('&nbsp;')}#X(e){const t=e.scratchCodes,s=['Green Screens Admin OTP Codes','\n\n','User : ',e.userName,'\n\n','Key : ',e.key.replaceAll('=',''),'\n\n','Recovery Keys : '];t.every((e=>(s.push(e),s.push(' '),!0))),Utils$1.download('Green_Screens_Admin_OTP.txt',s.join(''))}}class GSNetwork extends GSAdminDialog{static{customElements.define('gs-admin-dialog-network',GSNetwork),Object.seal(GSNetwork)}get dialogTemplate(){return'//dialogs/network.html'}get dialogTitle(){return'Netowrk Options'}async onOpen(){const e=DEMO||await io.greenscreens.Server.getInterface();return e.data.restart=e.data.restart?'1':'0',e.data}async onData(e){e.restart=1===parseInt(e.restart),e.redirect=1===parseInt(e.redirect),e.nodes=1===parseInt(e.nodes);return(DEMO||await io.greenscreens.Server.setInterface(e)).success}}class GSSystem extends GSAdminDialog{static{customElements.define('gs-admin-dialog-system',GSSystem),Object.seal(GSSystem)}onReady(){super.onReady(),this.large&&this.large()}get dialogTemplate(){return'//dialogs/system.html'}get dialogTitle(){return'System Options'}async onOpen(){return(DEMO||await io.greenscreens.Server.getConfig()).data}async onData(e){return(DEMO||await io.greenscreens.Server.setConfig(e)).success}async reloadKerberos(){return(DEMO||await io.greenscreens.Server.reloadKerberors()).success}}class GSWorkstation extends GSAdminDialog{static{customElements.define('gs-admin-dialog-workstation',GSWorkstation),Object.seal(GSWorkstation)}#Q=null;connectedCallback(){this.cssBody='NA',super.connectedCallback()}get dialogTemplate(){return null}get dialogTitle(){return'Workstation Info'}async onReady(){super.onReady(),this.#Q=await r.loadSafe('data/wks.json','GET',null,!0)}open(e){const t=this,s=['<div class="container p-2"><div class="row"><div class="col-xs-12"><table class="table border"><tbody>'],a=t.#Q.order.filter((e=>t.#Q.data[e])).map((s=>`<tr><td class="fw-bold w-25 text-bg-secondary">${t.#Q.data[s]}</td><td>${e[s]||''}</td></td>`)).join('');s.push(a),s.push('</tbody></table></div></div></div>'),t.body=s.join(''),super.open()}}class GSFilter extends GSAdminDialog{static#Y='((([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\*)\\.){3}(([0-9]{1,2})|(1[0-9]{2,2})|(2[0-4][0-9])|(25[0-5])|\\*)';static#Z=[`^${GSFilter.#Y}$`,`^${GSFilter.#Y}/[0-9]{1,2}$`,`^${GSFilter.#Y}-${GSFilter.#Y}$`];static{customElements.define('gs-admin-dialog-filter',GSFilter),Object.seal(GSFilter)}onReady(){super.onReady();const e=this;e.large(),e.attachEvent(e,'change',e.#ee.bind(e))}get dialogTemplate(){return'//forms/filter-ip.html'}get dialogTitle(){return'IP Filter'}get typeField(){return this.query('select[name=type]')}get valueField(){return this.query('input[name=value]')}#ee(e){this.valueField.pattern=GSFilter.#Z[this.typeField.value]}async onOpen(e){return this.valueField.pattern=GSFilter.#Z[e.type],e}}class GSService extends GSAdminDialog{static{customElements.define('gs-admin-dialog-service',GSService),Object.seal(GSService)}onReady(){super.onReady(),this.large()}get dialogTemplate(){return'//dialogs/service.html'}get dialogTitle(){return'Service Module Property'}get valueField(){return this.query('input[name=value]')}async onOpen(e){const t=this;return t.valueField.type='text',t.valueField.classList.value='form-control',t.valueField.parentElement.classList.value='',s.isNumber(e.value)&&(t.valueField.type='number'),s.isBool(e.value)&&(t.valueField.type='checkbox',t.valueField.classList.value='form-check-input',t.valueField.parentElement.classList.value='form-check form-switch fs-5'),e}async onData(e){const t=this,s=i.get(t.valueField,'type');'checkbox'===s&&(e.value=!0===t.valueField.checked),'number'===s&&(e.value=parseInt(e.value||0)||0);return(DEMO||await io.greenscreens.Tweaks.set(e.module,e.property,e.value)).success}}class GSPrinterReset extends GSAdminDialog{static{customElements.define('gs-admin-dialog-printer-reset',GSPrinterReset),Object.seal(GSPrinterReset)}#te=null;get dialogTemplate(){return'//dialogs/printer-reset.html'}get dialogTitle(){return'Printer Reset'}open(e){const t=this;t.#te=Object.assign({},e),t.#te.host=t.#te.name,super.open()}async onOpen(){return this.#te}async onData(e){const t=this;t.waiter.open();let s=!1;try{t.visible=!1;s=(DEMO||await io.greenscreens.Printer.reset(e)).success}catch(e){throw t.visible=!0,e}finally{t.waiter.close()}return s}}class GSPrinterSetup extends GSAdminDialog{static{customElements.define('gs-admin-dialog-printer-setup',GSPrinterSetup),Object.seal(GSPrinterSetup)}#te=null;get dialogTemplate(){return'//dialogs/printer-setup.html'}get dialogTitle(){return'Printer Setup'}get hpt(){return e.query(this,'select[name="hostTransform"]')}onReady(){super.onReady();const e=this;requestAnimationFrame((async()=>{await s.timeout(250),e.attachEvent(e.hpt,'change',e.#se.bind(e))}))}open(e){const t=this;t.#te=Object.assign({},e),t.#te.host=t.#te.name,delete t.#te.drawer1,delete t.#te.drawer2,t.form.reset(),t.#h(!0),super.open()}async onOpen(){return this.#te}async onData(e){const t=this;t.waiter.open();let s=!1;try{t.visible=!1,e.hostTransform=1===parseInt(e.hostTransform);s=(DEMO||await io.greenscreens.Printer.setup(e)).success}catch(e){throw t.visible=!0,e}finally{t.waiter.close()}return s}#se(e){this.#h('1'!==e.target.value)}#h(e){this.queryAll('[data-group="true"] input, [data-group="true"] select').forEach((t=>i.toggle(t,'disabled',e)))}}class GSActivate extends GSAdminDialog{static{customElements.define('gs-admin-dialog-activate',GSActivate),Object.seal(GSActivate)}get dialogTemplate(){return'//dialogs/activate.html'}get dialogTitle(){return'Add license key to the IBM i server'}async onOpen(e){return{ipAddress:e?.ipAddress||''}}async onData(e){return(DEMO||await io.greenscreens.Activator.activate(e)).success}}class GSInstall extends GSAdminDialog{static{customElements.define('gs-admin-dialog-install',GSInstall),Object.seal(GSInstall)}get dialogTemplate(){return'//dialogs/install.html'}get dialogTitle(){return'Install product to the IBM i server'}async onOpen(e){return{ipAddress:e?.ipAddress||''}}async onData(e){return(DEMO||await io.greenscreens.Installer.installProduct(e)).success}}class GSLicense extends GSAdminDialog{static{customElements.define('gs-admin-dialog-license',GSLicense),Object.seal(GSLicense)}get dialogTemplate(){return'//dialogs/license.html'}get dialogTitle(){return'Add license key to the IBM i server'}async onOpen(e){return{ipAddress:e?.ipAddress||''}}async onData(e){return(DEMO||await io.greenscreens.Installer.addProductLicense(e)).success}}
//# sourceMappingURL=io.greenscreens.admin.min.js.map
