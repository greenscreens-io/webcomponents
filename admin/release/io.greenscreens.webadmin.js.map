{"version":3,"file":"io.greenscreens.webadmin.js","mappings":"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","sources":["webpack:///../modules/base/GSLog.mjs","webpack:///../modules/base/GSUtil.mjs","webpack:///../modules/base/GSDOM.mjs","webpack:///../modules/base/GSID.mjs","webpack:///../modules/base/GSAttr.mjs","webpack:///../modules/base/GSFunction.mjs","webpack:///../modules/base/GSLoader.mjs","webpack:///../modules/base/GSEvent.mjs","webpack:///../modules/head/GSBase.mjs","webpack:///../modules/head/GSCacheStyles.mjs","webpack:///../modules/base/GSComponents.mjs","webpack:///../modules/base/GSData.mjs","webpack:///../modules/base/GSEnvironment.mjs","webpack:///../modules/base/GSDOMObserver.mjs","webpack:///../modules/base/GSElement.mjs","webpack:///./scripts/shell/Sidebar.mjs","webpack:///./scripts/util.mjs","webpack:///./scripts/shell/Header.mjs","webpack:///./scripts/shell/Shell.mjs","webpack:///../modules/components/GSModal.mjs","webpack:///./scripts/forms/Tunnel.mjs","webpack:///./scripts/forms/Service.mjs","webpack:///../modules/head/GSLinkExt.mjs","webpack:///../modules/head/GSStyleExt.mjs","webpack:///../modules/head/GSCSS.mjs","webpack:///../modules/head/GSScript.mjs","webpack:///../modules/head/GSLink.mjs","webpack:///../modules/templating/GSCacheTemplate.mjs","webpack:///../modules/templating/GSTemplate.mjs","webpack:///../modules/components/ext/GSDataListExt.mjs","webpack:///../modules/components/ext/GSComboExt.mjs","webpack:///../modules/components/ext/GSFormExt.mjs","webpack:///../modules/components/ext/GSInputExt.mjs","webpack:///../modules/components/ext/GSNavLinkExt.mjs","webpack:///../modules/components/ext/GSDataAttr.mjs","webpack:///../modules/components/intl/GSTimeFormat.mjs","webpack:///../modules/base/GSDate.mjs","webpack:///../modules/components/intl/GSDateFormat.mjs","webpack:///../modules/components/intl/GSYearFormat.mjs","webpack:///../modules/components/intl/GSCurrencyFormat.mjs","webpack:///../modules/base/GSItem.mjs","webpack:///../modules/components/GSAccordion.mjs","webpack:///../modules/components/GSAlert.mjs","webpack:///../modules/components/GSButton.mjs","webpack:///../modules/components/GSCenter.mjs","webpack:///../modules/components/GSContext.mjs","webpack:///../modules/components/GSDropdown.mjs","webpack:///../modules/components/GSLayout.mjs","webpack:///../modules/components/GSList.mjs","webpack:///../modules/components/GSNav.mjs","webpack:///../modules/components/GSOffcanvas.mjs","webpack:///../modules/base/GSPopper.mjs","webpack:///../modules/components/GSPopover.mjs","webpack:///../modules/components/GSPopup.mjs","webpack:///../modules/components/GSProgress.mjs","webpack:///../modules/components/GSSplitter.mjs","webpack:///../modules/components/GSTab.mjs","webpack:///../modules/components/GSTooltip.mjs","webpack:///../modules/components/filebox/GSAttachment.mjs","webpack:///../modules/components/filebox/GSFileBox.mjs","webpack:///../modules/components/table/GSStore.mjs","webpack:///../modules/components/table/GSColumn.mjs","webpack:///../modules/components/table/GSHeader.mjs","webpack:///../modules/components/table/GSTBody.mjs","webpack:///../modules/components/table/GSTable.mjs","webpack:///../modules/components/table/GSTableSort.mjs","webpack:///../modules/components/table/GSTableFilter.mjs","webpack:///../modules/components/table/GSPagination.mjs","webpack:///../modules/components/toast/GSNotification.mjs","webpack:///../modules/components/toast/GSToast.mjs","webpack:///./scripts/views/GSSearch.mjs","webpack:///./scripts/views/BaseViewUI.mjs","webpack:///./scripts/views/configs/GSConfiguration.mjs","webpack:///./scripts/views/configs/GSTunnel.mjs","webpack:///./scripts/views/configs/GSCustomization.mjs","webpack:///./scripts/views/filters/GSFilterFido.mjs","webpack:///./scripts/views/filters/GSFilterIP.mjs","webpack:///./scripts/views/filters/GSFilterMobile.mjs","webpack:///./scripts/views/keys/GSApiKeys.mjs","webpack:///./scripts/views/keys/GSOtp.mjs","webpack:///./scripts/views/keys/GSBiometrics.mjs","webpack:///./scripts/views/others/GSPrinting.mjs","webpack:///./scripts/views/others/GSSchedulers.mjs","webpack:///./scripts/views/others/GSUsers.mjs","webpack:///./scripts/views/system/GSServices.mjs","webpack:///./scripts/views/system/GSWorkstations.mjs","webpack:///./scripts/views/system/GSWebmodules.mjs","webpack:///./scripts/dialogs/GSDialog.mjs","webpack:///./scripts/dialogs/GSAbout.mjs","webpack:///./scripts/dialogs/GSCertBlocked.mjs","webpack:///./scripts/dialogs/GSCertClient.mjs","webpack:///./scripts/dialogs/GSCertImport.mjs","webpack:///./scripts/dialogs/GSCertOpt.mjs","webpack:///./scripts/dialogs/GSLoginAdmin.mjs","webpack:///./scripts/dialogs/GSLoginDefaults.mjs","webpack:///./scripts/dialogs/GSOtpOptions.mjs","webpack:///./scripts/dialogs/GSRegisterOtp.mjs","webpack:///./scripts/dialogs/GSNetwork.mjs","webpack:///./scripts/dialogs/GSSystem.mjs","webpack:///./scripts/dialogs/GSPrinterReset.mjs","webpack:///./scripts/dialogs/GSPrinterSetup.mjs"],"sourcesContent":["/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLog class\r\n * @module base/GSLog\r\n */\r\n\r\n/** \r\n * Internal logging mechanism\r\n * @Class\r\n */\r\nexport default class GSLog {\r\n\r\n\t/**\r\n\t * static flag is loging enabled or disabled\r\n\t */\r\n\tstatic logging = true;\r\n\r\n\t/**\r\n\t * Log info message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic info(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'info');\r\n\t}\r\n\r\n\t/**\r\n\t * Log warn message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic warn(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'warn');\r\n\t}\r\n\r\n\t/**\r\n\t * Log error message\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} msg \r\n\t */\r\n\tstatic error(el, msg) {\r\n\t\tthis.#print(el, msg, true, 'error');\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generif logging function\r\n\t * @param {HTMLElement} el Element to log (optional)\r\n\t * @param {string} msg Message to log\r\n\t * @param {boolean} forced - when logging disable globaly, use this to forse logging\r\n\t */\r\n\tstatic log(el, msg, forced) {\r\n\t\tthis.#print(el, msg, forced);\r\n\t}\r\n\r\n\tstatic #print(el, msg, forced, type) {\r\n\t\tif (!(forced || this.logging)) return;\r\n\t\tlet fn = console[type || 'log'];\r\n\t\tfn = typeof fn === 'function' ? fn : console.log;\r\n\t\tif (el) return fn(`${el.nodeName} -> ${el.id}: ${msg}`);\r\n\t\tfn(msg);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSLog);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSUtil class\r\n * @module base/GSUtil\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * @class\r\n */\r\nexport default class GSUtil {\r\n\r\n\tstatic #animating = 0;\r\n\tstatic FLAT = globalThis.GS_FLAT == true;\r\n\tstatic ALPHANUM = /^[a-zA-Z0-9-_]+$/;\r\n\r\n\tstatic isNumber = (n) => { return !isNaN(parseFloat(n)) && isFinite(n); };\r\n\r\n\tstatic isString = value => typeof value === 'string';\r\n\r\n\tstatic isNull = value => value === null || value === undefined;\r\n\r\n\tstatic toBinary = (value = 0) => value.toString(2);\r\n\r\n\tstatic asNum = (val = 0) => GSUtil.isNumber(val) ? parseFloat(val) : 0;\r\n\r\n\tstatic asBool = (val = false) => val.toString().trim().toLowerCase() === 'true';\r\n\r\n\tstatic fromLiteral = (str, obj) => str.replace(/\\${(.*?)}/g, (x, g) => obj[g]);\r\n\r\n\tstatic capitalize = (word) => word[0].toUpperCase() + word.slice(1).toLowerCase();\r\n\r\n\tstatic capitalizeAttr = (word) => word.split('-').map((v, i) => i ? GSUtil.capitalize(v) : v).join('');\r\n\r\n\tstatic initerror = () => { throw new Error('This class cannot be instantiated') };\r\n\r\n\t/**\r\n\t * Validate string for url format\r\n\t * @param {string} url \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURL = (url = '') => /^(https?:\\/\\/|\\/{1,2}|\\.\\/{1})(\\S*\\/*){1,}/i.test(url.trim());\r\n\r\n\tstatic isHTML = (val = '') => val.includes('<') && val.includes('>');\r\n\r\n\t/**\r\n\t * Get browser efautl locale\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get locale() {\r\n\t\treturn navigator.language ? navigator.language : navigator.languages[0];\r\n\t}\r\n\r\n\tstatic isJsonString(val = '') {\r\n\t\treturn typeof val == 'string' && (val.startsWith('{') || val.startsWith('['));\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is of JSON type\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJsonType(val = '') {\r\n\t\treturn Array.isArray(val) || typeof val == \"object\";\r\n\t}\r\n\r\n\t/**\r\n\t * Check if provided paramter is JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isJson(val = '') {\r\n\t\treturn GSUtil.isJsonString(val) || GSUtil.isJsonType(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert provided paramter to JSON\r\n\t * @param {string|object} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toJson(val = '') {\r\n\t\tif (GSUtil.isJsonString(val)) return JSON.parse(val);\r\n\t\tif (GSUtil.isJsonType(val)) return val;\r\n\t\tGSLog.warn(null, `Invalid data to convert into JSON: ${val}`);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Makes string value safe, always return value\r\n\t * @param {string|object} val \r\n\t * @returns {string}\r\n\t */\r\n\tstatic normalize(val, def = '') {\r\n\t\treturn (val ?? def).toString().trim();\r\n\t}\r\n\r\n\t/**\r\n\t * Convert parameterized string literal as template to string \r\n\t * \r\n\t * \t const template = 'Example text: ${text}';\r\n\t *   const result = interpolate(template, {text: 'Foo Boo'});\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @param {Object} params \r\n\t * @returns {function}\r\n\t */\r\n\tstatic fromTemplateLiteral(tpl, params) {\r\n\t\tconst names = Object.keys(params);\r\n\t\tconst vals = Object.values(params);\r\n\t\treturn new Function(...names, `return \\`${tpl}\\`;`)(...vals);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert string pointer to object\r\n\t * @param {string} value \r\n\t * @returns  {*}\r\n\t */\r\n\tstatic parseValue(value) {\r\n\t\tif (!GSUtil.isStringNonEmpty(value)) return;\r\n\t\tconst me = this;\r\n\t\tlet o = window;\r\n\t\tlet fn = null;\r\n\t\tvalue.trim().split('.').forEach((v, i, a) => {\r\n\t\t\tif (!o) return;\r\n\t\t\tif (i < a.length - 1) {\r\n\t\t\t\treturn o = o[v];\r\n\t\t\t}\r\n\t\t\tfn = o[v];\r\n\t\t});\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings has data\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringNonEmpty(val = '') {\r\n\t\treturn !GSUtil.isStringEmpty(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if strings is empty\r\n\t * \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringEmpty(val = '') {\r\n\t\tif (GSUtil.isString(val)) return val.trim().length === 0;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * match two strings, or first is not set\r\n\t * \r\n\t * @param {string} left \r\n\t * @param {string} right \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isStringMatch(left, right) {\r\n\t\tconst lmatch = GSUtil.isStringNonEmpty(left);\r\n\t\tconst rmatch = GSUtil.isStringNonEmpty(right);\r\n\t\tif (lmatch && rmatch) {\r\n\t\t\treturn left.trim().toLowerCase() == right.trim().toLowerCase();\r\n\t\t}\r\n\t\treturn lmatch === rmatch;\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of timeout\r\n\t * \r\n\t * @async\r\n\t * @param {number} time \r\n\t * @returns {Promise<void>}\r\n\t */\r\n\tstatic async timeout(time = 0) {\r\n\t\treturn new Promise((r) => {\r\n\t\t\tsetTimeout(r.bind(null, true), time);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Modified animationFrame to prevent consequtive chained calls.\r\n\t * \r\n\t * @param {function} callback \r\n\t * @returns {void}\r\n\t */\r\n\tstatic requestAnimationFrame(callback) {\r\n\t\tif (typeof callback !== 'function') return;\r\n\t\tif (GSUtil.#animating > 0) return callback();\r\n\t\tGSUtil.#animating++;\r\n\t\treturn globalThis.requestAnimationFrame(() => {\r\n\t\t\ttry {\r\n\t\t\t\tcallback();\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t} finally {\r\n\t\t\t\tGSUtil.#animating--;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Download provided data\r\n\t * \r\n\t * @async\r\n\t * @param {Array} data \r\n\t * @param {string} name File name\r\n\t * @param {string} type Mime type, default octet/stream\r\n\t */\r\n\tstatic async export(data, name, type = 'octet/stream') {\r\n\r\n\t\tconst blob = new Blob(data, { type: type });\r\n\t\tconst url = URL.createObjectURL(blob);\r\n\t\ttry {\r\n\t\t\tconst a = document.createElement(\"a\");\r\n\t\t\ta.href = url;\r\n\t\t\ta.download = name;\r\n\t\t\ta.click();\r\n\t\r\n\t\t\tawait GSUtil.timeout(2000);\r\n\r\n\t\t} finally {\r\n\t\t\tURL.revokeObjectURL(url);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Registration helper function, replacement for class static initializers\r\n\t * Mostly to support Safari browser.\r\n\t * \r\n\t * GSUtil.register(null, GSUtil, null, true, false, true);\r\n\t * \r\n\t * @param {string} name Custom element name\r\n\t * @param {HTMLElement} clazz Class extensing at leas HTMLElement\r\n\t * @param {string} ext If existing tag extended, this is tagName\r\n\t * @param {boolean} seal Should class be sealed\r\n\t * @param {boolean} freeze Should class be freezed\r\n\t * @param {boolean} expose Should class be exposed to \"self\"\r\n\t * \r\n\t * @returns {void}\r\n\t */\r\n\tstatic register(name, clazz, ext, seal = true, freeze = false, expose = false) {\r\n\t\tif (!HTMLElement.isPrototypeOf(clazz)) return;\r\n\t\tif (customElements.get(name)) return;\r\n\t\tcustomElements.define(name, clazz, { extends: ext?.toLowerCase() });\r\n\t\tif (seal && !Object.isSealed(clazz)) Object.seal(clazz);\r\n\t\tif (freeze && !Object.isFrozen(clazz)) Object.freeze(clazz);\r\n\t\tif (expose) self[clazz.name] = clazz;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSUtil);\r\n\t\tglobalThis.GSUtil = GSUtil;\r\n\t}\r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOM class\r\n * @module base/GSDOM\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A generic set of static functions to handle DOM tree and DOM elements\r\n * @class\r\n */\r\nexport default class GSDOM {\r\n\r\n\t// Timeout for removing element\r\n\tstatic SPEED = 300;\r\n\r\n\t/**\r\n\t* Parse string into html DOM\r\n\t*\r\n\t* @param {string} html Source to parse\r\n\t* @param {boolean} single Return first element or all\r\n\t* @param {string} mime Src mime type\r\n\t* @return {HTMLElement}\r\n\t*/\r\n\tstatic parse(html = '', single = false, mime = 'text/html') {\r\n\t\ttry {\r\n\t\t\tconst parser = new DOMParser();\r\n\t\t\tconst doc = parser.parseFromString(html, mime);\r\n\t\t\treturn single ? doc?.body?.firstElementChild : doc;\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(null, e);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Parse source and auto wrap if required\r\n\t * @param {GSElement} own \r\n\t * @param {string} src \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parseWrapped(own, src = '', forceWrap = false) {\r\n\r\n\t\tconst doc = GSDOM.parse(src);\r\n\t\tconst nodes = GSDOM.#fromNode(doc.head.children).concat(GSDOM.#fromNode(doc.body.children));\r\n\t\tconst wrap = forceWrap || nodes.length !== 1;\r\n\r\n\t\tconst tpl = GSDOM.wrap(own, wrap ? null : nodes.shift());\r\n\r\n\t\twhile (nodes.length > 0) tpl.appendChild(nodes.shift());\r\n\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * The same as lin function, with default wrapper element\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic wrap(own, target) {\r\n\t\treturn GSDOM.link(own, target || document.createElement('gs-block'));\r\n\t}\r\n\r\n\t/**\r\n\t * Create reference between two HTMLElements\r\n\t * \r\n\t * @param {HTMLElement} own Owner element to which target is linked\r\n\t * @param {HTMLElement} target Target elemetn to link to owner\r\n\t * @returns {HTMLElement} Return target\r\n\t */\r\n\tstatic link(own, target) {\r\n\t\ttarget.setAttribute('proxy', `#${own.id}`);\r\n\t\tif (own.slot) target.setAttribute('slot', own.slot);\r\n\t\treturn target;\r\n\t}\r\n\r\n\tstatic #fromNode(nodes) {\r\n\t\treturn Array.from(nodes || []).filter(el => !GSDOM.isText(el));\r\n\t}\r\n\r\n\t/**\r\n\t  * Check if given element is of given type \r\n\t  * \r\n\t  * @param {HTMLElement} el\r\n\t  * @param {string|class} type Tag Name, class name or Class\r\n\t  * @returns {boolean}\r\n\t  */\r\n\tstatic isElement(el, type) {\r\n\t\t\r\n\t\tconst isArgs = type && el;\r\n\t\tif (!isArgs) return false;\r\n\r\n\t\tconst isStr =  GSUtil.isString(type);\r\n\t\t\r\n\t\tif (!isStr) return el instanceof type;\r\n\r\n\t\tconst ownClazz = customElements.get(type.toLowerCase());\r\n\t\tif (ownClazz && el instanceof ownClazz) return el;\r\n\r\n\t\tconst it = GSDOM.inheritance(el);\r\n\t\tfor (let pel of it) {\r\n\t\t\tif (pel?.constructor?.name === type) return el;\r\n\t\t}\r\n\r\n\t\tif (type.toUpperCase() === el.tagName) return el;\t\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isTemplateElement(el) {\r\n\t\treturn el instanceof HTMLTemplateElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type SVGElement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isSVGElement(el) {\r\n\t\treturn el instanceof SVGElement;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Text\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isText(el) {\r\n\t\treturn el instanceof Text;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if given element is of type Comment\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isComment(el) {\r\n\t\treturn el instanceof Comment;\r\n\t}\r\n\r\n\t/*\r\n\t * Check if given element is of type GSElement\r\n\t */\r\n\tstatic isGSElement(el) {\r\n\t\tif (!el?.clazzName) return false;\r\n\t\t//if (el?.tagName?.indexOf('GS-') === 0) return true;\r\n\t\tconst it = GSDOM.inheritance(el);\r\n        for (let v of it) {\r\n\t\t\tif (!v) break;\r\n            if (v?.clazzName === 'GSElement') return true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if standard element extended with GS\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isGSExtra(el) {\r\n\t\treturn el?.getAttribute('is')?.indexOf('GS-') === 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get all child GSElement\t\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic getChilds(el) {\r\n\t\treturn Array.from(el?.childNodes || []).filter(e => GSDOM.isGSElement(e));\r\n\t}\r\n\r\n\t/**\r\n\t * Hide html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hide(el, orientation = false) {\r\n\t\treturn el?.classList?.add(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Show html element\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} orientation \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic show(el, orientation = false) {\r\n\t\treturn el?.classList?.remove(orientation ? 'gs-hide-orientation' : 'gs-hide');\r\n\t}\r\n\r\n\t/**\r\n\t * Add node as next in list of nodes\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic addSibling(target, newEl) {\r\n\t\tconst injectable = GSDOM.isHTMLElement(newEl) || GSDOM.isSVGElement(newEl);\r\n\t\tconst isOK = GSDOM.isHTMLElement(target) && injectable;\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl || target.nextElementSibling === newEl;\r\n\t\treturn isOK && !invalid ? target.parentNode.insertBefore(newEl, target.nextElementSibling) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add child node to a target\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic appendChild(target, newEl) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\treturn isok && target !== newEl ? target.appendChild(newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Add node to a target at specified place\r\n\t * @param {HTMLElement} target \r\n\t * @param {HTMLElement} newEl \r\n\t * @param {string} placement\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic insertAdjacent(target, newEl, placement) {\r\n\t\tconst isok = GSDOM.isHTMLElement(target) && GSDOM.isHTMLElement(newEl);\r\n\t\tconst invalid = target === newEl && target.parentNode === newEl\r\n\t\treturn isok && !invalid ? target.insertAdjacentElement(placement, newEl) : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove genarated componnt from parent\r\n\t * @param {HTMLElement} el \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic removeElement(el) {\r\n\t\treturn el?.parentNode?.removeChild(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Walk node tree\r\n\t * \r\n\t * @param {HTMLLegendElement} node Start node to walk from \r\n\t * @param {boolean} closest Direction down (false) or up (true)\r\n\t * @param {boolean} all  Filter HTMLElements (false) only or text also (true) (only down)\r\n\t * @param {boolean} shadow Traverse shadow DOM also (only down)\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic walk(node, closest = false, all = false, shadow = true) {\r\n\t\treturn closest ? GSDOM.parentAll(node) : GSDOM.childAll(node, all, shadow);\r\n\t}\r\n\r\n\t/**\r\n\t * Traverse DOM tree top-to-bottom\r\n\t * \r\n\t * @param {*} node Start node\r\n\t * @param {*} all  Include all elements (Text,Comment, HTMLElements)\r\n\t * @param {*} shadow Include traversing aacross shadow tree\r\n\t * @param {*} child Inernal, do not use\r\n\t * @returns {Iterable}\r\n\t */\r\n\tstatic *childAll(node, all = false, shadow = true, child = false) {\r\n\t\tif (!node) return;\r\n\t\tif (child) yield node;\r\n\t\tif (shadow) yield* GSDOM.childAll(node.shadowRoot, all, shadow, true);\r\n\t\tconst list = all ? node.childNodes : node.children;\r\n\t\tif (!list) return;\r\n\t\tfor (let child of list) {\r\n\t\t\tyield* GSDOM.childAll(child, all, shadow, true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get parent element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tstatic parent(el) {\r\n\t\treturn el ? (el.parentElement || el.parentNode || el.host) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Parent element iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *parentAll(el) {\r\n\t\tlet e = GSDOM.parent(el);\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = GSDOM.parent(e);\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Element prototype iterator\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement}\r\n\t * @iterator\r\n\t */\r\n\tstatic *inheritance(el) {\r\n\t\tlet e = el.__proto__;\r\n\t\twhile (e) {\r\n\t\t\tyield e;\r\n\t\t\te = e.__proto__;\r\n\t\t}\r\n\t\tif (e) return yield e;\r\n\t}\r\n\r\n\t/**\r\n\t * Get root element whch might be shadow root, GSElement, any parent element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {HTMLElement|ShadowRoot}\r\n\t */\r\n\tstatic getRoot(el) {\r\n\t\tif (!el) return null;\r\n\r\n\t\tconst it = GSDOM.parentAll(el);\r\n\t\tfor (let v of it) {\r\n\t\t\tif (v instanceof ShadowRoot) return v;\r\n\t\t\tif (v instanceof HTMLBodyElement) return v;\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by ID within DOM Tree across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} id Element id\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic getByID(el, id) {\r\n\t\tif (typeof el === 'string') return GSDOM.getByID(document.body, id);\r\n\t\tif (!(el && id)) return null;\r\n\t\tconst it = GSDOM.walk(el, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (o.id === id) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM Tree up to find closest element across Shadow DOM\r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic closest(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.closest(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tconst it = GSDOM.walk(el, true);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tstatic query(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.query(document.body, qry);\r\n\t\tif (!(el && qry)) return null;\r\n\t\tif (GSDOM.matches(el, qry)) return el;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) return o;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Match element against CSS query\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} qry \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic matches(el, qry) {\r\n\t\t// return el && qry && typeof el.matches === 'function' && el.matches(qry);\r\n\t\treturn el && typeof el.matches === 'function' && el.matches(qry);\r\n\t}\r\n\r\n\t/**\r\n\t * Query DOM tree with support for Shadow DOM\r\n\t * \r\n\t * @param {HTMLElement} el Root node to start from\r\n\t * @param {string} qry CSS query\r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tstatic queryAll(el, qry) {\r\n\t\tif (typeof el === 'string') return GSDOM.queryAll(document.body, qry);\r\n\t\tconst res = [];\r\n\t\tif (!(el && qry)) return res;\r\n\t\tconst it = GSDOM.walk(el, false, false);\r\n\t\tfor (let o of it) {\r\n\t\t\tif (GSDOM.matches(o, qry)) res.push(o);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\t/**\r\n\t * Set html text to provided element.\r\n\t * NOTE: Done intentionaly like this to prevent source validation warning.\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setHTML(el, val = '') {\r\n\t\t// TODO - use sanitizer when not any more experimental feature; watch for default Sanitizer.getDefaultConfiguration()\r\n\t\t//if (el?.setHTML) return el.setHTML(val);\r\n\t\tconst isValid = el instanceof ShadowRoot || el instanceof HTMLElement || el instanceof HTMLTemplateElement;\r\n\t\tif (isValid) el.innerHTML = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Set text to provided element\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {void}\r\n\t */\r\n\tstatic setText(el, val = '') {\r\n\t\tif (el) el.textContent = val;\r\n\t}\r\n\r\n\t/**\r\n\t * Safe way to toggle CSS class on element, multipel classes are supported in space separated string list\r\n\t * @param {HTMLElement} el \r\n\t * @param {boolean} sts True to add, false to remove\r\n\t * @param {*} val list of css classes in spaec separated string\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic toggleClass(el, sts = true, val = 'd-none') {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return false;\r\n\t\tif (!val || val.trim().length == 0) return false;\r\n\t\tval = val.split(' ').filter(v => v && v.trim().length > 0);\r\n\t\tif (sts === null) return val.forEach(v => el.classList.toggle(v));\r\n\t\tsts ? el.classList.add.apply(el.classList, val) : el.classList.remove.apply(el.classList, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if element contains a css class\r\n\t * @param {HTMLElement} el \r\n\t * @param {string} val \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic hasClass(el, val = '') {\r\n\t\treturn el?.classList?.contains(val);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative way to clear fields instead of form.reset()\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t */\r\n\tstatic clearInputs(owner, qry = 'input, textarea') {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\troot.querySelectorAll(qry).forEach((el) => el.value = '');\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get value from form element\r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic toValue(el) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return undefined;\r\n\t\tif ('checkbox' === el.type) return el.checked;\r\n\t\tlet value = el.value;\r\n\t\tif ('text' === el.type) {\r\n\t\t\tconst map = GSDOM.styleValue(el, 'text-transform');\r\n\t\t\tif (map) {\r\n\t\t\t\tif ('lowercase' == map.value) value = el.value.toLowerCase();\r\n\t\t\t\tif ('uppercase' == map.value) value = el.value.toUpperCase();\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * Set element value, taking chekbox into consideration\r\n\t * @param {HTMLElement} el \r\n\t * @param {string|boolean|number} val \r\n\t * @returns \r\n\t */\r\n\tstatic fromValue(el, val) {\r\n\t\tif (!GSDOM.isHTMLElement(el)) return;\r\n\t\tif (el.type === 'checkbox') {\r\n\t\t\tel.checked = val == true;\r\n\t\t} else {\r\n\t\t\tel.value = val;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap item\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic styleValue(el, name) {\r\n\t\tconst map = GSDOM.getComputedStyledMap(el);\r\n\t\tif (typeof map.get === 'function') return map.get(name);\r\n\t\treturn map[name];\r\n\t}\r\n\r\n\t/**\r\n\t * Support for Firefox/Gecko to get element computedStyledMap\r\n\t * @param {HTMLElement} el \r\n\t * @returns {}\r\n\t */\r\n\tstatic getComputedStyledMap(el) {\r\n\t\tif (el.computedStyleMap) return el.computedStyleMap();\r\n\t\tif (window.getComputedStyle) return window.getComputedStyle(el);\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert form elements into JSON object\r\n\t * @param {HTMLElement} owner \r\n\t * @param {string} qry \r\n\t * @param {boolean} invalid Should include invalid fields\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toObject(owner, qry = 'input, textarea, select', invalid = true) {\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst params = {};\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name)\r\n\t\t\t.filter(el => el.dataset.ignore !== 'true')\r\n\t\t\t.filter(el => invalid ? true : el.checkValidity())\r\n\t\t\t.forEach(el => {\r\n\t\t\t\tparams[el.name] = GSDOM.toValue(el);\r\n\t\t\t});\r\n\t\treturn params;\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON Object into HTMLElements (input)\r\n\t * @param {*} owner \r\n\t * @param {*} qry \r\n\t * @param {*} obj \r\n\t * @returns \r\n\t */\r\n\tstatic fromObject(owner, obj, qry = 'input, textarea, select') {\r\n\t\tif (!obj) return;\r\n\t\tconst root = GSDOM.unwrap(owner);\r\n\t\tconst list = GSDOM.queryAll(root, qry); // root.querySelectorAll(qry);\r\n\t\tArray.from(list)\r\n\t\t\t.filter(el => el.name && Object.hasOwn(obj, el.name))\r\n\t\t\t.forEach(el => GSDOM.fromValue(el, obj[el.name]));\r\n\t}\r\n\r\n\t/**\r\n\t * Convert URL hash key/value to form elements\r\n\t * @param {HTMLElement} owner \r\n\t */\r\n\tstatic fromURLHashToForm(owner) {\r\n\t\tlocation.hash.slice(1).split('&').every((v) => {\r\n\t\t\tif (v.length < 2) return true;\r\n\t\t\tconst d = v.split('=');\r\n\t\t\tGSDOM.setValue(`input[name=${d[0]}]`, d[1], owner);\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Return element shadowRoot or self\r\n\t * @param {HTMLElement} owner \r\n\t * @returns {HTMLElement|shadowRoot}\r\n\t */\r\n\tstatic unwrap(owner) {\r\n\t\treturn owner ? owner.self || owner : document;\r\n\t}\r\n\r\n\t/**\r\n\t * Enable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic enableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(own, qry).forEach(el => el.removeAttribute('disabled'));\r\n\t}\r\n\r\n\t/**\r\n\t * Disable input on all input elements under provided owner\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} qry Default to form\r\n\t */\r\n\tstatic disableInput(own, qry = 'input, select, .btn') {\r\n\t\tGSDOM.queryAll(el, qry).forEach(el => el.setAttribute('disabled', true));\r\n\t}\r\n\r\n\t/**\r\n\t * Set value to a element by css selector\r\n\t * @param {string} qry \r\n\t * @param {string} val \r\n\t * @param {HTMLElement} own \r\n\t */\r\n\tstatic setValue(qry, val, own) {\r\n\t\tconst el = GSDOM.query(own, qry);\r\n\t\tGSDOM.fromValue(el, val);\r\n\t}\r\n\r\n\t/**\r\n\t * Find text nodes\r\n\t * @param {HTMLElement} el \r\n\t * @returns {Array<string>}\r\n\t */\r\n\tstatic textNodesUnder(el) {\r\n\t\tconst walk = document.createTreeWalker(el || document, NodeFilter.SHOW_TEXT, null, false);\r\n\t\tconst a = [];\r\n\t\tlet n;\r\n\t\twhile (n = walk.nextNode()) a.push(n);\r\n\t\treturn a;\r\n\t}\r\n\r\n\t/**\r\n\t * Remove invalid text characters from html element nodes\r\n\t * @param {HTMLElement} root \r\n\t */\r\n\tstatic cleanHTML(root) {\r\n\t\tconst ts = GSDOM.textNodesUnder(root || document).filter(t => t.wholeText.trim().length === 0);\r\n\t\tts.filter(el => el.nextSibling instanceof Text).forEach(el => el.remove());\r\n\t\tts.forEach(t => t.nodeValue = t.wholeText.replaceAll(/\\u0020{4}/g, '\\t').replaceAll(/(\\n*\\t*)*(?=\\n\\t*)/g, ''));\r\n\t}\r\n\r\n\t/**\r\n\t * Validate against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement} el Element which slild list to validate\r\n\t * @param {string} tagName Expected owner element tag name\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child\r\n\t * @param {boolean} asState return state as bool or throw an error (default)\r\n\t * @returns {boolean} return true if validation is ok.\r\n\t * @throws {Error}\r\n\t */\r\n\tstatic validate(own, tagName, whiteList, asState = false) {\r\n\t\tif (own.tagName !== tagName) {\r\n\t\t\tif (asState) return false;\r\n\t\t\tthrow new Error(`Owner element : ${own.tagName}, id:${own.id} is not of excpected type: ${tagName}`);\r\n\t\t}\r\n\t\t//const ok = Array.from(own.childNodes).filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\tconst ok = GSDOM.isAllowed(Array.from(own.childNodes), whiteList);\r\n\t\tif (ok) return true;\r\n\t\tif (asState) return false;\r\n\t\tconst msg = GSDOM.toValidationError(own, whiteList);\r\n\t\tthrow new Error(msg);\r\n\t}\r\n\r\n\t/**\r\n\t * Check against provided list, if child elements allowed inside provided element\r\n\t * @param {HTMLElement|Array<HTMLElement>} el Element which childs to validate against provided list\r\n\t * @param {string} whiteList Uppercase list of tag names allowed as child nodes\r\n\t * @returns {boolean} return tr ue if validation is ok.\r\n\t */\r\n\tstatic isAllowed(el, whiteList) {\r\n\t\tif (Array.isArray(el)) return el.filter(el => GSDOM.isAllowed(el, whiteList)).length === 0;\r\n\t\treturn !(el instanceof Text || el instanceof Comment) && (!whiteList.includes(el.tagName));\r\n\t}\r\n\r\n\tstatic toValidationError(own, whiteList) {\r\n\t\tconst list = `<${whiteList.join('>, <')}>`;\r\n\t\treturn `${own.tagName} ID: ${own.id} allows as a child nodes only : ${list}!`;\r\n\t}\r\n\r\n\t/**\r\n\t * Inject css directly into a shadowRoot of an element\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} own \r\n\t * @param {string} url \r\n\t * @returns {Promise<boolean>}\r\n\t */\r\n\tstatic async injectCSS(own, url) {\r\n\t\tif (!own?.shadowRoot instanceof ShadowRoot) return false;\r\n\t\tlet sts = true;\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\town.shadowRoot.adoptedStyleSheets = [sheet];\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsts = false;\r\n\t\t}\r\n\t\treturn sts;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSDOM);\r\n\t\twindow.GSDOM = GSDOM;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSID class\r\n * @module base/GSID\r\n */\r\n\r\n/**\r\n * Generic unique ID generator for element\r\n * @class\r\n */\r\nexport default class GSID {\r\n\r\n\tstatic #id = 0;\r\n\r\n\t/**\r\n\t * Reset ID counter to 0\r\n\t */\r\n\tstatic reset() {\r\n\t\tthis.#id = 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique generated ID\r\n\t * @param {*} prefx Value to prepend to ID counter\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic next(prefx = 'GSId-') {\r\n\t\treturn `${prefx}${this.#id++}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Auto generate next ID\r\n\t * @returns {string} A generated ID\r\n\t */\r\n\tstatic get id() {\r\n\t\treturn this.next();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate hashcode from string (Java compatible)\r\n\t * @param {*} s A text fro mwhich hashcode is calculated \r\n\t * @returns {Number} Generated numeric hashcode\r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tconst l = (s || '').length;\r\n\t\tlet h = 0, i = 0;\r\n\t\tif (l === 0) return h;\r\n\t\twhile (i < l) {\r\n\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t}\r\n\t\treturn h;\r\n\t};\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSID);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading GSAttr class\r\n * @module base/GSDOM\r\n */\r\n\r\n/**\r\n * A generic set of static functions to handle DOM Attributes\r\n * @class\r\n */\r\nexport default class GSAttr {\r\n\r\n\t/**\r\n\t * Check if given element is of type HTMLElement\r\n\t * NOTE: GSDOM.isHTMLElement duplicate- p revent circualr import\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLElement(el) {\r\n\t\treturn el instanceof HTMLElement;\r\n\t}\r\n\r\n\t/**\r\n \t* Generic function to change elment node attribute\r\n \t* \r\n \t* @param {HTMLElement} el Target to receive attribute value\r\n \t* @param {string} name Attribite name\r\n \t* @param {boolean} val Attribute value\r\n \t*/\r\n\tstatic toggle(el, name, val = false) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (val) {\r\n\t\t\tel.setAttribute(name, '');\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to change elment node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Target to receive attribute value\r\n\t * @param {string} name Attribite name\r\n\t * @param {string} val Attribute value\r\n\t */\r\n\tstatic set(el, name, val) {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return;\r\n\t\tif (GSUtil.normalize(val)) {\r\n\t\t\tel.setAttribute(name, val);\r\n\t\t} else {\r\n\t\t\tel.removeAttribute(name);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Generic function to get element node attribute\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get(el, name = '', val = '') {\r\n\t\tif (!GSAttr.isHTMLElement(el)) return val;\r\n\t\tconst v = el.getAttribute(name) || val;\r\n\t\treturn GSUtil.normalize(v);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as boolean type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getAsBool(el, name = '', val = 'false') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asBool(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as numberic type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {number}\r\n\t */\r\n\tstatic getAsNum(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val);\r\n\t\treturn GSUtil.asNum(attr);\r\n\t}\r\n\r\n\t/**\r\n\t * Get attribute as JSON object type\r\n\t * \r\n\t * @param {HTMLElement} el Element containing attribute\r\n\t * @param {string} name Attribute name\r\n\t * @param {string} val Default value\r\n\t * @returns {JSON}\r\n\t */\r\n\tstatic getAsJson(el, name = '', val = '0') {\r\n\t\tconst attr = GSAttr.get(el, name, val, {});\r\n\t\treturn JSON.parse(attr);\r\n\t}\r\n\r\n\tstatic setAsBool(el, name = '', val = 'false') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asBool(val), false);\r\n\t}\r\n\r\n\tstatic setAsNum(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, GSUtil.asNum(val), NaN);\r\n\t}\r\n\r\n\tstatic setAsJson(el, name = '', val = '0') {\r\n\t\treturn GSAttr.set(el, name, JSON.stringify(val), '{}');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert list of data attributes into a string list\r\n\t * @param {HTMLElement} el \r\n\t  @returns {string}\r\n\t */\r\n\tstatic dataToString(el) {\r\n\t\treturn Array.from(el.attributes)\r\n\t\t\t.filter(v => v.name.startsWith('data-'))\r\n\t\t\t.map(v => `${v.name}=\"${v.value}\"`)\r\n\t\t\t.join(' ');\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSAttr);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFunction class\r\n * @module base/GSFunction\r\n */\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for processing functions\r\n * @class\r\n */\r\nexport default class GSFunction {\r\n\r\n    /**\r\n     * Check if object is of type function\r\n     * \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static isFunction = (fn) => typeof fn === 'function';\r\n\r\n    /**\r\n     * Check if object has function\r\n     * \r\n     * @param {object} o \r\n     * @param {function} fn \r\n     * @returns {boolean}\r\n     */\r\n    static hasFunction(o, fn) {\r\n        return o && GSFunction.isFunction(o[fn]);\r\n    }\r\n\r\n    /**\r\n     * Check if object is of type async function\r\n     * \r\n     * @param {function} fn \r\n     * @returns  {boolean}\r\n     */\r\n    static isFunctionAsync(fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const AsyncFunction = GSFunction.callFunctionAsync.constructor\r\n        let isValid = fn instanceof AsyncFunction;\r\n        if (!isValid) isValid = fn[Symbol.toStringTag] == \"AsyncFunction\";\r\n        return isValid;\r\n    }\r\n\r\n    /**\r\n     * Generic asynchronous function caller\r\n     * \r\n     * @async\r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns  {Promise}\r\n     * @throws {Error} \r\n     */\r\n    static async callFunctionAsync(fn, owner) {\r\n        try {\r\n            return await fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic synchronous function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     * @throws {Error}\r\n     */\r\n    static callFunctionSync(fn, owner) {\r\n        try {\r\n            return fn(owner);\r\n        } catch (e) {\r\n            return e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generic function caller\r\n     * \r\n     * @param {function} fn \r\n     * @param {object} owner \r\n     * @returns {object}\r\n     */\r\n    static callFunction(fn, owner) {\r\n        if (!GSFunction.isFunction(fn)) return;\r\n        if (GSFunction.isFunctionAsync(fn)) {\r\n            return GSFunction.callFunctionAsync(fn, owner);\r\n        }\r\n        return GSFunction.callFunctionSync(fn, owner);\r\n    }\r\n\r\n    /**\r\n     * Convert string pointer to function call\r\n     * \r\n     * @param {string} value \r\n     * @returns  {function}\r\n     */\r\n    static parseFunction(value) {\r\n        const fn = GSUtil.parseValue(value);\r\n        return GSFunction.isFunction(fn) ? fn : null;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSFunction);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLoader class\r\n * @module base/GSLoader\r\n */\r\n\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSLoader {\r\n\r\n    static TEMPLATE_URL = globalThis.GS_TEMPLATE_URL || location.origin;\r\n    static NO_CACHE = false;\r\n\r\n    static {\r\n        if (!globalThis.GS_TEMPLATE_URL) {\r\n            const url = location.href.split('?').pop();\r\n            let seg = url.split('/');\r\n            GSLoader.TEMPLATE_URL = url.endsWith('/') ? url : seg.slice(0, -1).join('/');\r\n            globalThis.GS_TEMPLATE_URL = GSLoader.TEMPLATE_URL;\r\n        }\r\n\r\n        const hasKey = Object.hasOwn(self, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            GSLoader.NO_CACHE = globalThis.GS_NO_CACHE === true;\r\n            if (localStorage) localStorage.setItem('GS_NO_CACHE', GSLoader.NO_CACHE);\r\n        }\r\n        GSLoader.NO_CACHE = localStorage ? localStorage.getItem('GS_NO_CACHE') == 'true' : false;\r\n\r\n    }\r\n    /**\r\n     * Convert partial URL to a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static normalizeURL(url = '', base = false) {\r\n\r\n        url = url || '';\r\n        let path = null;\r\n        const isFile = location.pathname.split('/').pop(-1).includes('\\.');\r\n        const isExt = url.includes('extension://');\r\n        const isUrl = url.startsWith('http');\r\n\r\n        if (isUrl || isExt) {\r\n            path = url;\r\n        } else if (url.startsWith('/')) {\r\n            path = `${location.origin}/${url}`;\r\n        } else if (isFile) {\r\n            path = `${location.origin}${location.pathname}/../${url}`;\r\n        } else {\r\n            path = `${location.origin}${location.pathname}/${url}`;\r\n        }\r\n\r\n        path = path.split('://').map(v => v.replaceAll(/\\/{2,}/g, '/')).join('://');\r\n        const uri = new URL(path);\r\n\r\n        // to handle caching\r\n        if (!base && GSLoader.NO_CACHE) uri.searchParams.append('_dc', Date.now());\r\n\r\n        return uri.href;\r\n    }\r\n\r\n    /**\r\n     * Extrach aprent path from provided URL string\r\n     * @param {string} url \r\n     * @param {number} level How many levels to go up the chain\r\n     * @returns {string}\r\n     */\r\n    static parentPath(url = '', level = 1) {\r\n        return (url || '').split('/').slice(0, -1 * level).join('/');\r\n    }\r\n\r\n    /**\r\n     * Used for override to get predefined template\r\n     * Can be html source or url, checks if load or not\r\n     * \r\n     * @async\r\n     * @param {string} def\r\n     * @return {Promise<string>}\r\n     */\r\n    static async getTemplate(def = '') {\r\n\r\n        if (!def) return def;\r\n        \r\n        const isRef = def.startsWith('#');\r\n        if (isRef) {\r\n            const el = GSDOM.query(document.documentElement, def);\r\n            return el ? el.innerHTML : def;\r\n        }\r\n\r\n        const isHTML = GSUtil.isHTML(def);\r\n        if (isHTML) return def;\r\n\r\n        def = GSLoader.#getTemplateURL(def);\r\n        return GSLoader.loadSafe(def);\r\n    }\r\n\r\n    /**\r\n     * Decode template URL into a real URL\r\n     * @param {string} url \r\n     * @return {string}\r\n     */\r\n    static #getTemplateURL(url = '') {\r\n        /*\r\n        const isDirect =  /^(https?:\\/\\/)/i.test(url);\r\n        url = isDirect ? url : GSLoader.#templateURL + '/' + url;\r\n        */\r\n        url = url.startsWith('//') ? GSLoader.#templateURL + '/' + url : url;\r\n        return GSLoader.normalizeURL(url);\r\n    }\r\n\r\n    /**\r\n     * Retrieve default template url\r\n     * @return {string}\r\n     */\r\n    static get #templateURL() {\r\n        return GSLoader.normalizeURL(GSLoader.#templatePath, true);\r\n    }\r\n\r\n    /**\r\n     * Retrieve defult template path\r\n     * @return {string}\r\n     */\r\n    static get #templatePath() {\r\n        return GSLoader.TEMPLATE_URL ? GSLoader.TEMPLATE_URL.replace('//', '/') : '';\r\n    }\r\n\r\n    /**\r\n     * Load html template (used for template cache)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @returns {Promise<string>}\r\n     * @throws {Error}\r\n     */\r\n    static async loadTemplate(val = '', method = 'GET') {\r\n        const url = GSLoader.#getTemplateURL(val);\r\n        return await GSLoader.load(url, method);\r\n    }\r\n\r\n    /**\r\n     * Load remote data as text (for loading templates)\r\n     * \r\n     * @async\r\n     * @param {string} val Full or partial url path\r\n     * @param {string} method HTTP methog get|put|post\r\n     * @param {boolean} asjson Parse returned data as JSON\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async load(val = '', method = 'GET', headers, asjson = false) {\r\n        let data = null;\r\n        const ct = 'Content-Type';\r\n        headers = headers || {};\r\n        headers[ct] = asjson ? 'application/json' : headers[ct] || 'text/plain';\r\n        const url = GSLoader.normalizeURL(val, true);\r\n        const res = await fetch(url, { method: method, headers: headers });\r\n        if (res.ok) data = asjson ? await res.json() : await res.text();\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Load remote data without throwing an exception\r\n     * \r\n     * @async\r\n     * @param {string} url Full or partial url path\r\n     * @param {string} method http method GET|POST|PUT\r\n     * @param {boolean} asjson return json or string\r\n     * @param {object} dft default value\r\n     * @returns {Promise<object|string>}\r\n     */\r\n    static async loadSafe(url = '', method = 'GET', headers, asjson = false, dft) {\r\n        try {\r\n            if (url) return GSLoader.load(url, method, headers, asjson);\r\n        } catch (e) {\r\n            GSLog.error(this, e);\r\n        }\r\n        if (dft) return dft;\r\n        return asjson ? {} : '';\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    static async loadData(val = '') {\r\n\r\n        const isJson = GSUtil.isJson(val);\r\n        const func = !isJson && GSFunction.parseFunction(val);\r\n        const isFunc = GSFunction.isFunction(func);\r\n        const isData = !isFunc && GSUtil.parseValue(val);\r\n\r\n        if (isData || isJson) val = GSUtil.toJson(val);\r\n\r\n        if (isFunc) {\r\n            const isAsync = GSFunction.isFunctionAsync(func);\r\n            if (isAsync) {\r\n                val = await GSFunction.callFunctionAsync(func, this);\r\n            } else {\r\n                val = GSFunction.callFunction(func);\r\n            }\r\n        }\r\n\r\n        if (!GSUtil.isJsonType(val)) return;\r\n\r\n        return val;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSLoader);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEvent class\r\n * @module base/GSEvent\r\n */\r\n\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n\r\n/**\r\n * Class for handling events, also a registry of all GS-* element listeners\r\n * @Class\r\n */\r\nexport default class GSEvent {\r\n\r\n\tstatic #cache = new Map();\r\n\r\n\tstatic #loaded = false;\r\n\r\n\t/**\r\n\t * Disable browser console and default context menu\r\n\t */\r\n\tstatic protect() {\r\n\t\twindow.addEventListener('contextmenu', (e) => {\r\n\t\t\tGSEvent.prevent(e);\r\n\t\t});\r\n\r\n\t\tdocument.addEventListener('keydown', (event) => {\r\n\t\t\tconst code = event.code;\r\n\t\t\tif (code == 'F12') { // Prevent F12\r\n\t\t\t\treturn false;\r\n\t\t\t} else if (event.ctrlKey && event.shiftKey && code == 'KeyI') { // Prevent Ctrl+Shift+I\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Wai for web page to competely load\r\n\t * \r\n\t * @async\r\n\t * @param {HTMLElement} target \r\n\t * @param {string} name \r\n\t * @param {function} callback \r\n\t * @param {Promise<number>} timeout \r\n\t */\r\n\tstatic async waitPageLoad(target, name = 'loaded', callback, timeout = 100) {\r\n\t\tif (!GSEvent.#loaded) await GSEvent.wait(window, 'load'); // DOMContentLoaded\r\n\t\tGSEvent.#loaded = true;\r\n\t\tawait GSUtil.timeout(timeout);\r\n\t\tGSFunction.callFunction(callback);\r\n\t\tGSEvent.sendSuspended(target, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of animation frame\r\n\t * \r\n\t * @async\r\n\t * @param {function} callback \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic async waitAnimationFrame(callback) {\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\trequestAnimationFrame(() => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tr();\r\n\t\t\t\t\tif (typeof callback === 'function') callback();\r\n\t\t\t\t} catch (er) {\r\n\t\t\t\t\tconsole.log(er);\r\n\t\t\t\t\te(er);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @param {*} opt \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic listen(own, qry, event, callback, opt = false) {\r\n\t\tif (!qry && own) return own.addEventListener(event, callback, opt);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.addEventListener(event, callback, opt));\r\n\t}\r\n\r\n\t/**\r\n\t * Unlisten for an event on a given element or query\r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean|Array<boolean>} \r\n\t */\r\n\tstatic unlisten(own, qry, event, callback) {\r\n\t\tif (!qry && own) return own.removeEventListener(event, callback);\r\n\t\treturn GSDOM.queryAll(own, qry).map(el => el.removeEventListener(event, callback));\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {*} own \r\n\t * @param {*} qry \r\n\t * @param {*} event \r\n\t * @param {*} callback \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic once(own, qry, event, callback) {\r\n\t\treturn GSEvent.listen(own, qry, event, callback, { once: true });\r\n\t}\r\n\r\n\t/**\r\n\t * Async version of event listener\r\n\t * \r\n\t * @async\r\n\t * @param {*} own \r\n\t * @param {*} name \r\n\t * @returns {Promise}\r\n\t */\r\n\tstatic wait(own, name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(own, null, name, (e) => r(e.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Generic prevent event bubling\r\n\t * \r\n\t * @param {Event} e \r\n\t */\r\n\tstatic prevent(e) {\r\n\t\tif (GSFunction.hasFunction(e, 'preventDefault')) e.preventDefault();\r\n\t\tif (GSFunction.hasFunction(e, 'stopPropagation')) e.stopPropagation();\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic send(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/** \r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {void} \r\n\t */\r\n\tstatic sendSuspended(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tif (!name) return;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSEvent.send(sender, name, obj, bubbles, composed, cancelable);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t * @param {boolean} once Monitor event only once\r\n\t * @param {boolean} capture Allow event capture\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic attach(own, el, name = '', fn, once = false, capture = false) {\r\n\t\tif (!el) return false;\r\n\t\tif (el.offline) return false;\r\n\t\tif (!GSFunction.isFunction(fn)) return false;\r\n\t\tif (!GSFunction.hasFunction(el, 'addEventListener')) return false;\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tmap.set(obj.fnkey, obj);\r\n\t\tobj.capture = capture;\r\n\t\tif (once) {\r\n\t\t\tobj.once = (e) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tobj.fn(e);\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tme.remove(obj.own, obj.el, obj.name, obj.once);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tObject.defineProperty(obj.once, 'gsid', { value: fn.gsid, writable: false });\r\n\t\t}\r\n\t\tel.addEventListener(name, once ? obj.once : obj.fn, { once: once, capture: capture });\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remover\r\n\t * @param {HTMLElement} own Event owner\r\n\t * @param {HTMLElement} el Owner elelemt to monitor\r\n\t * @param {string} name Event name to moinitor\r\n\t * @param {Function} fn Callback to trigger on event\r\n\t */\r\n\tstatic remove(own, el, name = '', fn) {\r\n\t\tconst me = this;\r\n\t\tconst obj = me.#eventKey(own, el, name, fn);\r\n\t\tconst elmap = me.#getElementMap(own);\r\n\t\tconst map = me.#eventMap(elmap, obj.key);\r\n\t\tconst cfg = map.get(obj.fnkey);\r\n\t\tif (cfg) {\r\n\t\t\tmap.delete(cfg.fnkey);\r\n\t\t\tme.#removeListener(cfg);\r\n\t\t} else if (obj.fnkey === obj.key) {\r\n\t\t\tfor (let m of map.values()) {\r\n\t\t\t\tmap.delete(m.fnkey);\r\n\t\t\t\tme.#removeListener(m);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (map.size === 0) elmap.delete(obj.key);\r\n\t\tif (elmap.size === 0) me.#cache.delete(own);\r\n\t}\r\n\r\n\t/**\r\n\t * Release internal engine event listeners\r\n\t * @param {HTMLElement} own Event owner\r\n\t */\r\n\tstatic deattachListeners(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#removeElementMap(own);\r\n\t\tif (!map) return;\r\n\r\n\t\tconst it = map.values();\r\n\t\tfor (let m of it) {\r\n\t\t\tfor (let o of m.values()) {\r\n\t\t\t\tme.#removeListener(o);\r\n\t\t\t}\r\n\t\t\tm.clear();\r\n\t\t}\r\n\t\tmap.clear();\r\n\t}\r\n\r\n\t/**\r\n\t * Generate an event key object\r\n\t * @param {*} el \r\n\t * @param {*} name \r\n\t * @param {*} fn \r\n\t * @returns {object}\r\n\t */\r\n\tstatic #eventKey(own, el, name = '', fn = '') {\r\n\t\tif (!el) return false;\r\n\t\tconst me = this;\r\n\t\tconst elid = me.#getElementID(el);\r\n\t\tconst fnid = me.#getCallbackID(fn);\r\n\t\tconst key = GSID.hashCode(`${elid}${name}`);\r\n\t\tconst fnkey = GSID.hashCode(`${elid}${name}${fnid || ''}`);\r\n\t\treturn { own: own, fn: fn, el: el, name: name, key: key, fnkey: fnkey };\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {Map<HTMLElement, Object>} elmap\r\n\t * @param {HTMLElement} key\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #eventMap(elmap, key) {\r\n\t\tconst me = this;\r\n\t\tlet map = elmap.get(key);\r\n\t\tif (!map) {\r\n\t\t\tmap = new Map();\r\n\t\t\telmap.set(key, map);\r\n\t\t}\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #getCallbackID(fn) {\r\n\t\tif (!GSFunction.isFunction(fn)) return null;\r\n\t\tif (!fn.gsid) Object.defineProperty(fn, 'gsid', { value: GSID.next(), writable: false });\r\n\t\treturn fn.gsid;\r\n\t}\r\n\r\n\tstatic #getElementID(el) {\r\n\t\tlet elid = GSAttr.get(el, 'data-gselid');\r\n\t\tif (!elid) {\r\n\t\t\telid = GSID.next()\r\n\t\t\tGSAttr.set(el, 'data-gselid', elid);\r\n\t\t}\r\n\t\treturn elid;\r\n\t}\r\n\r\n\t/**\r\n\t * Get or create a map holding an event map\r\n\t * @param {HTMLElement} own\r\n\t * @returns {Map<HTMLElement, Object>}\r\n\t */\r\n\tstatic #getElementMap(own) {\r\n\t\tconst me = this;\r\n\t\treturn me.#eventMap(me.#cache, own);\r\n\t}\r\n\r\n\tstatic #removeElementMap(own) {\r\n\t\tconst me = this;\r\n\t\tconst map = me.#cache.get(own);\r\n\t\tif (!map) return;\r\n\t\tme.#cache.delete(own);\r\n\t\treturn map;\r\n\t}\r\n\r\n\tstatic #removeListener(o) {\r\n\t\to.el.removeEventListener(o.name, o.once ? o.once : o.fn, { capture: o.capture });\r\n\t\to.el = null;\r\n\t\to.fn = null;\r\n\t\to.once = null;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSEvent);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSBase class\r\n * @module head/GSBase\r\n */\r\n\r\n/**\r\n * Base head element to load src based on environment\r\n * @class\r\n * @abstract\r\n */\r\nexport default class GSBase extends HTMLElement {\r\n\r\n\tstatic #id = 0\r\n\r\n\t#refid = '';\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Get next unique element ID\r\n\t * @returns {string} A unnique value for element id\r\n\t */\r\n\tstatic nextID() {\r\n\t\tGSBase.#id++;\r\n\t\treturn `GSHID_${GSBase.#id}`;\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate string hash code\r\n\t * @param {string} A string to calculate hash from\r\n\t * @returns {number} A value calculated from provided string \r\n\t */\r\n\tstatic hashCode(s) {\r\n\t\tlet h = 0,\r\n\t\t\tl = s.length,\r\n\t\t\ti = 0;\r\n\r\n\t\tif (l > 0) {\r\n\r\n\t\t\twhile (i < l) {\r\n\t\t\t\th = (h << 5) - h + s.charCodeAt(i++) | 0;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn h;\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher\r\n\t * \r\n\t * @param {HTMLElement} sender element that send event\r\n\t * @param {string} name  Event name oto trigger\r\n\t * @param {object} obj Data object to send \r\n\t * @param {boolean} bubbles Send event to parent\r\n\t * @param {boolean} composed Send event across shadowDom\r\n\t * @param {boolean} cancelable Event is cancelable\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic sendEvent(sender = document, name, obj = '', bubbles = false, composed = false, cancelable = false) {\r\n\t\tconst event = new CustomEvent(name, { detail: obj, bubbles: bubbles, composed: composed, cancelable: cancelable });\r\n\t\treturn sender.dispatchEvent(event);\r\n\t}\r\n\r\n\t/**\r\n\t * Generic event disaptcher in suspended rendering\r\n\t * \r\n\t * @param {HTMLElement} sender An element that dispatch the event\r\n\t * @param {string} name Event name \r\n\t * @param {object} obj Event data \r\n\t */\r\n\tstatic sendSuspendedEvent(sender = document, name, obj = '') {\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tGSBase.sendEvent(sender, name, obj);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\tconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.url && me.isRenderable()) {\r\n\r\n\t\t\tconst hash = GSBase.hashCode(me.url);\r\n\r\n\t\t\tconst tmp = document.querySelector(`[data-hash=\"${hash}\"]`);\r\n\t\t\tif (tmp) {\r\n\t\t\t\t// console.log(`URL already exists: ${me.url}`);\r\n\t\t\t\tme.remove();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst el = me.render();\r\n\t\t\tconst isPromise = el instanceof Promise;\r\n\r\n\t\t\tif (el && !isPromise) {\r\n\r\n\t\t\t\tel.dataset.hash = hash;\r\n\r\n\t\t\t\tif (me.isHead) {\r\n\t\t\t\t\tdocument.head.appendChild(el);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//me.parentElement.appendChild(el);\r\n\t\t\t\t\tme.insertAdjacentElement('afterend', el);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (me.isAuto) {\r\n\t\t\t\t\tel.id = el.id ? el.id : GSBase.nextID();\r\n\t\t\t\t\tme.#refid = el.id;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!me.isAuto) {\r\n\t\t\tme.remove();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when node is removed from DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\r\n\t\tconst me = this;\r\n\t\tif (me.isAuto && me.#refid) {\r\n\t\t\tconst el = document.querySelector(`#${me.#refid}`);\r\n\t\t\tif (el) el.remove();\r\n\t\t}\r\n\t\tme.dispose();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\trequestAnimationFrame(() => {\r\n\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attached to a page and ready to render\r\n\t */\r\n\trender() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calle when element removed from a page.\r\n\t */\r\n\tdispose() {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Check if env is mobile\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isMobile() {\r\n\t\tif (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n\t\treturn /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if matching schema\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isSchema() {\r\n\t\tconst schema = this.schema;\r\n\t\tif (!schema) return true;\r\n\t\tconst protocol = location.protocol.replace(':', '');\r\n\t\tif ('http' === schema && protocol === schema) return true;\r\n\t\tif ('https' === schema && protocol === schema) return true;\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if running in mobile app\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAsset() {\r\n\t\treturn this.isTarget('GreenScreens');\r\n\t}\r\n\r\n\t/**\r\n\t * Check browser target by value\r\n\t *\r\n\t * @param {String} matching value\r\n\t * @returns {boolean}\r\n\t */\r\n\tisTarget(value = '') {\r\n\r\n\t\tif (!value) return true;\r\n\t\tconst strVal = value.toLowerCase();\r\n\t\tif (navigator.userAgentData) {\r\n\t\t\tlet sts = false;\r\n\t\t\tnavigator.userAgentData.brands.forEach((v) => {\r\n\t\t\t\tif (v.brand.toLowerCase().includes(strVal)) {\r\n\t\t\t\t\tsts = true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn sts;\r\n\t\t}\r\n\r\n\t\tconst regex = new RegExp(`${value}`, 'i');\r\n\t\tconst sts = navigator.userAgent.match(regex);\r\n\t\treturn sts ? true : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Return state based on matching rules set through element attributes\r\n\t * @returns {boolean}\r\n\t */\r\n\tisRenderable() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tconst isMobile = me.isMobile;\r\n\t\tconst isAsset = me.isAsset;\r\n\t\tconst isSchema = me.isSchema;\r\n\t\tconst target = me.target;\r\n\t\tconst env = me.env;\r\n\r\n\t\tif (!isSchema) return false;\r\n\r\n\t\tif (env === 'assets' && isAsset === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'browser' && isAsset === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'mobile' && isMobile === false) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (env === 'desktop' && isMobile === true) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!me.isTarget(target)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve environment under which resource is used\r\n\t * @returns {string} assets|browser|mobile|desktop\r\n\t */\r\n\tget env() {\r\n\t\treturn this.getAttribute('env') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve browser target under which resource is used\r\n\t * @returns {string} chrome|edge|firefox etc...\r\n\t */\r\n\tget target() {\r\n\t\treturn this.getAttribute('target') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve resource url\r\n\t * @returns {string}\r\n\t */\r\n\tget url() {\r\n\r\n\t\tconst me = this;\r\n\t\tlet url = me.getAttribute('url') || '';\r\n\r\n\t\tif (me.env === 'assets') {\r\n\t\t\treturn '**' + url;\r\n\t\t}\r\n\r\n\r\n\t\t// prevent caching in dev mode\r\n\t\tif (me.#nocache) {\r\n\t\t\ttry {\r\n\t\t\t\tlet base = `${location.origin}${location.pathname}`;\r\n\t\t\t\tif (url.startsWith('/')) base = location.origin;\r\n\t\t\t\tif (url.startsWith('http')) base = undefined;\r\n\t\t\t\tconst uri = new URL(url, base);\r\n\t\t\t\turi.searchParams.append('_dc', Date.now());\r\n\t\t\t\turl = uri.href;\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve mime resource type\r\n\t * @returns {string}\r\n\t */\r\n\tget type() {\r\n\t\tconst me = this;\r\n\t\tlet type = me.getAttribute('type') || ''\r\n\t\tif (!type) {\r\n\t\t\tif (me.url.indexOf('.js') > 0) {\r\n\t\t\t\ttype = 'text/javascript';\r\n\t\t\t} else if (me.url.indexOf('.css') > 0) {\r\n\t\t\t\ttype = 'text/css';\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn type;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is asynchronous \r\n\t * @returns {boolean}\r\n\t */\r\n\tget async() {\r\n\t\treturn this.getAttributeBool('async', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve if resource loading is defered\r\n\t * @returns {boolean}\r\n\t */\r\n\tget defer() {\r\n\t\treturn this.getAttributeBool('defer', 'false');\r\n\t}\r\n\r\n\t/**\r\n\t * Determine if loaded resource will be rendered inside html head\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isHead() {\r\n\t\treturn this.getAttributeBool('head');\r\n\t}\r\n\r\n\t/**\r\n\t * If automatic, element is not self removed after resource is loaded.\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isAuto() {\r\n\t\treturn this.getAttributeBool('auto');\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve https or https schema. \r\n\t * Used to filter under which schema loader element is applied\r\n\t * @returns {string}\r\n\t */\r\n\tget schema() {\r\n\t\treturn this.getAttribute('schema') || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Resource nonce value for content check\r\n\t * @returns {string}\r\n\t */\r\n\tget nonce() {\r\n\t\treturn this.getAttribute('nonce') || '';\r\n\t}\r\n\r\n\tget crossorigin() {\r\n\t\treturn this.getAttribute('crossorigin');\r\n\t}\r\n\r\n\tget fetchpriority() {\r\n\t\treturn this.getAttribute('fetchpriority') || 'auto';\r\n\t}\r\n\r\n\tget integrity() {\r\n\t\treturn this.getAttribute('integrity');\r\n\t}\r\n\r\n\tget referrerpolicy() {\r\n\t\treturn this.getAttribute('referrerpolicy');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if attribute is true or just available\r\n\t * @param {string} name Attribute name\r\n\t * @returns {boolean}\r\n\t */\r\n\tgetAttributeBool(name = '', dft = 'true') {\r\n\t\tconst val = this.getAttribute(name) || dft;\r\n\t\treturn val === 'true';\r\n\t}\r\n\r\n\tget #nocache() {\r\n\t\tconst hasKey = Object.hasOwn(globalThis, 'GS_NO_CACHE');\r\n        if (hasKey) {\r\n            return globalThis.GS_NO_CACHE;\r\n        }\r\n        return localStorage ?  localStorage.getItem('GS_NO_CACHE') == 'true' : false;\t\t\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSBase);\r\n\t}\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheStyles class\r\n * @module head/GSCacheStyles\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Cache for dyamically laoded styles.\r\n * Used to sharestyles among GS-* WebComponents\r\n * @class\r\n */\r\nexport default class GSCacheStyles {\r\n\r\n\tstatic #store = new Map();\r\n\r\n\t/**\r\n\t * Store initialized stylesheet under the unique ID\r\n\t * @param {string} id \r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {CSSStyleSheet} Stored stylesheet\r\n\t */\r\n\tstatic set(id, style) {\r\n\t\tconst me = this;\r\n\t\tif (style instanceof CSSStyleSheet) {\r\n\t\t\tme.#store.set(id, style);\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(style);\r\n\t\t\tme.#store.set(id, sheet);\r\n\t\t}\r\n\r\n\t\treturn me.get(id);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Remove stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(id) {\r\n\t\treturn this.#store.delete(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve stylesheet by unique ID\r\n\t * @param {string} id \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic get(id) {\r\n\t\treturn this.#store.get(id);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve CSSStyleSheet by ID, and automatically store in cache if does not exist\r\n\t * @param {string} id Unique stylesheed id\r\n\t * @param {CSSStyleSheet} style \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic getOrSet(id, style) {\r\n\t\tif (style && style.cssRules.length === 0) return;\r\n\t\tconst me = GSCacheStyles;\r\n\t\tconst el = me.get(id);\r\n\t\tif (el) return el;\r\n\t\treturn me.set(id, style);\r\n\t}\r\n\r\n\t/**\r\n\t * Return lsit of registered style sheets\r\n\t * @returns {Array<CSSStyleSheet>}\r\n\t */\r\n\tstatic get styles() {\r\n\t\treturn Array.from(new Map([...GSCacheStyles.#store].sort((a, b) => String(a[0]).localeCompare(b[0]))).values());\r\n\t}\r\n\r\n\t/*\r\n\t* Inject CSS used by framework\r\n\t*/\r\n\tstatic injectStyle(css = '', hash = 0) {\r\n\t\tif (!css) return;\r\n\t\ttry {\r\n\t\t\thash = hash || GSBase.hashCode(css);\r\n\t\t\tconst sheet = new CSSStyleSheet();\r\n\t\t\tsheet.replaceSync(css);\r\n\t\t\tGSCacheStyles.getOrSet(hash, sheet);\r\n\t\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCacheStyles);\r\n\t\twindow.GSCacheStyles = GSCacheStyles;\r\n\t\tconst style = '.gs-hide{display:none;}.gs-hide-orientation,.gs-render{display:none !important;}gs-item{display:none !important;}';\r\n\t\tGSCacheStyles.injectStyle(style);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * A module loading GSComponent class\r\n * @module base/GSComponents\r\n */\r\n\r\n/**\r\n * Registry cache of all instantiated GS-* elements\r\n * @class\r\n */\r\nexport default class GSComponents {\r\n\r\n    /**\r\n     * Store GS-* elements\r\n     */\r\n    static #cache = new Set();\r\n\r\n    /**\r\n     * Store component in component registry cache\r\n     * @param {GSElement} el - GSElement instance to store in component registry cache\r\n     * @returns {void}\r\n     */\r\n    static store(el) {\r\n        GSComponents.#cache.add(el);\r\n    }\r\n\r\n    /**\r\n     * Remove component from component registry cache by id or GSElement instance\r\n     * @param {GSElement|string} el \r\n     * @returns {void}\r\n     */\r\n    static remove(el) {\r\n        GSComponents.#cache.delete(el);\r\n    }\r\n\r\n    /**\r\n     * Get component from component cache by component id\r\n     * @param {string} id \r\n     * @returns {GSElement}\r\n     */\r\n    static get(id = '') {\r\n        if (!id) return null;\r\n        const els = Array.from(this.#cache).filter(el => el.id === id);\r\n        return els.length === 0 ? null : els[0];\r\n    }\r\n\r\n    static #waitForInternal(name = '', timeout = 0, r) {\r\n        const fn = (e) => {\r\n            const el = e.detail;\r\n            const isComp = name.startsWith('gs-') && el.tagName === name.toUpperCase();\r\n            if (isComp || el.id === name) {\r\n                GSEvent.unlisten(document.body, null, 'componentready', fn);\r\n                return r(el);\r\n            }\r\n        };\r\n        const opt = { once: false, capture: false };\r\n        if (timeout > 0) opt.signal = AbortSignal.timeout(timeout);\r\n        GSEvent.listen(document.body, null, 'componentready', fn, opt);\r\n    }\r\n\r\n    /**\r\n     * Wait for GSElement to become registered (initialized)\r\n     * @param {string} name A name of GSComponent type (gs-ext-form, etc...)\r\n     * @returns {GSElement}\r\n     */\r\n    static waitFor(name = '', timeout = 0) {\r\n        return new Promise((r, e) => {\r\n            let el = GSComponents.find(name) || GSComponents.get(name);\r\n            return el ? r(el) : GSComponents.#waitForInternal(name, timeout, r);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Notify when GSElement is registered, \r\n     * @param {*} name Element id or GS-* tagName\r\n     * @param {*} fn Callback function\r\n     */\r\n    static notifyFor(name = '', fn) {\r\n        if (!GSFunction.isFunction(fn)) return false;\r\n        const callback = (e) => {\r\n            const el = e.composedPath().shift();\r\n            const ok = el.id === name || el.tagName === name;\r\n            return ok ? fn(el, e) : undefined;\r\n        };\r\n        const el = GSComponents.find(name) || GSComponents.get(name);\r\n        if (el) return fn(el);\r\n        GSEvent.listen(document.body, null, 'componentready', callback);\r\n        return callback;\r\n    }\r\n\r\n    /**\r\n     * Get all components of a specific type\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - return only flat components\r\n     * @param {boolean} shadow  - return only shadowed components\r\n     * @returns {Array<GSElement>}\r\n     */\r\n    static findAll(name = '', flat = true, shadow = true) {\r\n        \r\n        let result = Array.from(GSComponents.#cache);\r\n        if (name) result = result.filter(el => el && GSDOM.matches(el, name));       \r\n        if (!flat) result = result.filter(el => el.shadowRoot);\r\n        if (!shadow) result = result.filter(el => !el.shadowRoot);\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Find first GS component\r\n     * @param {string} name - component name GS-*\r\n     * @param {boolean} flat - only flat components\r\n     * @param {boolean} shadow  - only shadowed components\r\n     * @returns {GSElement}\r\n     */\r\n    static find(name = '', flat = true, shadow = true) {\r\n        return GSComponents.findAll(name, flat, shadow).shift();\r\n    }\r\n\r\n    /**\r\n    * Returns owner of this shadowRoot element\r\n    * @param {HTMLElement} el An instance of HTMLElement\r\n    * @param {string} type A tag name of searched element\r\n    * @returns {HTMLElement} A parent of provided element\r\n    */\r\n    static getOwner(el, type) {\r\n        const isEl = GSDOM.isGSElement(el) || GSDOM.isHTMLElement(el);\r\n        if (!isEl) return null;\r\n\r\n        const it = GSDOM.parentAll(el);\r\n        for (let v of it) {\r\n            if (!v) break;\r\n            if (v instanceof ShadowRoot) {\r\n                const parent = GSDOM.parent(v);\r\n                if (!type) return parent;\r\n                if (GSDOM.isElement(parent, type)) return parent;\r\n                return GSComponents.getOwner(parent, type);\r\n            }\r\n            if (GSDOM.isElement(v, type)) return v;\r\n        }\r\n\r\n        return type ? null : GSDOM.parent(el);\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property getter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasGetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'get');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined property setter \r\n     * @param {object} own Class instance\r\n     * @param {string} name Getter name to check\r\n     * @returns {boolean} Returns true if setter exist\r\n     */\r\n    static hasSetter(own, name) {\r\n        return GSComponents.hasFunc(own, name, 'set');\r\n    }\r\n\r\n    /**\r\n     * Check if class instance has defined function\r\n     * @param {object} own Class instance\r\n     * @param {string} name Function name to check\r\n     * @param {string} fn Function name to check\r\n     * @returns {boolean} Returns true if getter exist\r\n     */\r\n    static hasFunc(own, name, fn) {\r\n        const desc = Reflect.getOwnPropertyDescriptor(own.__proto__, name);\r\n        return desc && typeof desc[fn] === 'function';\r\n    }\r\n\r\n    /**\r\n     * Listen for global WebComponent css style changes to reapply to active componentes\r\n     * @returns {void}\r\n     */\r\n    static listenStyles() {\r\n        if (GSComponents.#listener) return;\r\n        document.addEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = true;\r\n    }\r\n\r\n    /**\r\n     * Remove global WebComponent css style changes listner \r\n     * @returns {void}\r\n     */\r\n    static unlistenStyles() {\r\n        document.removeEventListener('gs-style', GSComponents.#onStyles);\r\n        GSComponents.#listener = false;\r\n    }\r\n\r\n    static #listener = false;\r\n    static #onStyles() {\r\n        requestAnimationFrame(() => {\r\n            GSComponents.findAll(null, false, true).filter(el => el.shadowRoot).forEach(el => el.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles);\r\n        });\r\n    }\r\n\r\n    static {\r\n        Object.freeze(GSComponents);\r\n        GSComponents.listenStyles();\r\n        window.GSComponents = GSComponents;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSData class\r\n * @module base/GSData\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\n\r\n/**\r\n * A set of static functions used for loading resources\r\n * @class\r\n */\r\nexport default class GSData {\r\n\r\n    /**\r\n     * Removes duplicates from list\r\n     * @param {Array} data \r\n     * @returns {Array}\r\n     */\r\n    static uniqe(data) {\r\n        return Array.from(new Set(data));\r\n    }\r\n\r\n    /**\r\n     * Check if two arrays are equal\r\n     * \r\n     * @param {*} a \r\n     * @param {*} b \r\n     * @returns {boolean}\r\n     */\r\n    static arraysEqual(a, b) {\r\n\r\n        if (a === b) return true;\r\n        if (!Array.isArray(a)) return false;\r\n        if (!Array.isArray(b)) return false;\r\n\r\n        a.sort();\r\n        b.sort();\r\n\r\n        for (var i = 0; i < a.length; ++i) {\r\n            if (a[i] !== b[i]) return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Simple array merge, without duplicates. Used by observableAttributes\r\n     * @param {Array} first \r\n     * @param {Array} second \r\n     * @returns {Array}\r\n     */\r\n    static mergeArrays(first = [], second = []) {\r\n        return first.concat(second).filter((value, index, arr) => arr.indexOf(value) === index);\r\n    }\r\n\r\n    static filterData(filter, data, fields) {\r\n        const me = this;\r\n        return filter.length === 0 ? data : data.filter(rec => GSData.filterRecord(rec, filter, fields));\r\n    }\r\n\r\n    static filterRecord(rec, filter, fields) {\r\n        const me = this;\r\n        const isSimple = typeof filter === 'string';\r\n        return isSimple ? GSData.filterSimple(rec, filter, fields) : GSData.filterComplex(rec, filter);\r\n    }\r\n\r\n    static filterSimple(rec, filter = '', fields) {\r\n        filter = filter.toLowerCase();\r\n        fields = fields || Object.keys(rec);\r\n        let value = null;\r\n        for (let key of fields) {\r\n            value = rec[key];\r\n            if (('' + value).toString().toLowerCase().includes(filter)) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    static filterComplex(rec, filter) {\r\n        let found = true;\r\n        let match = null;\r\n\r\n        for (let flt of filter) {\r\n            \r\n            match = flt?.value?.toLowerCase();\r\n            found = found && ('' + rec[flt.name]).toLocaleLowerCase().includes(match);\r\n            if (!found) break;\r\n        }\r\n\r\n        return found;\r\n    }\r\n\r\n    static sortData(sort, data) {\r\n        if (sort.length === 0) return data;\r\n        return data.sort((a, b) => GSData.sortPair(a, b, sort));\r\n    }\r\n\r\n    static sortPair(a, b, sort) {\r\n        const me = this;\r\n        const isArray = Array.isArray(a);\r\n        let sts = 0;\r\n\r\n        sort.forEach((o, i) => {\r\n            if (!o) return;\r\n            const idx = o.col || i;\r\n            const key = isArray ? idx : o.name;\r\n            const v1 = a[key];\r\n            const v2 = b[key];\r\n\r\n            sts = GSData.compare(v1, v2, o.ord, sts);\r\n        });\r\n\r\n        return sts;\r\n    }\r\n\r\n    static compare(v1, v2, order, sts) {\r\n        const me = this;\r\n        if (GSUtil.isNumber(v1) && GSUtil.isNumber(v2)) {\r\n            return sts || GSData.compareNum(v1, v2, order);\r\n        } else if (GSUtil.isString(v1) || GSUtil.isString(v2)) {\r\n            return sts || GSData.compareString(v1, v2, order);\r\n        }\r\n        return sts;\r\n    }\r\n\r\n    /**\r\n     * Compare two string values \r\n     * @param {string} v1 \r\n     * @param {string} v2 \r\n     * @param {number} ord \r\n     * @returns {number} -1, 1, 0\r\n     */\r\n    static compareString(v1, v2, ord) {\r\n        const s1 = (v1 || '').toString();\r\n        const s2 = (v2 || '').toString();\r\n        return ord < 0 ? s2.localeCompare(s1) : s1.localeCompare(s2);\r\n    }\r\n\r\n    /**\r\n     * Compare two numeric values\r\n     * @param {number} v1 \r\n     * @param {number} v2 \r\n     * @param {number} ord positive = ascending, negative - descending \r\n     * @returns {number} -1 or 1 or 0\r\n     */\r\n    static compareNum(v1, v2, ord) {\r\n        return ord < 0 ? v2 - v1 : v1 - v2;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSData);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSEnvironment class\r\n * @module base/GSEnvironment\r\n */\r\n\r\n/**\r\n * A set of static functions used for detecting browser encironment\r\n * such as OS, orientation, browser type etc.\r\n * @class\r\n */\r\nexport default class GSEnvironment {\r\n\r\n    /**\r\n     * Check if page is inside mobile device\r\n     * @returns {boolean}\r\n     */\r\n    static get isMobile() {\r\n        if (navigator.userAgentData) return navigator.userAgentData.mobile;\r\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    }\r\n\r\n    /** \r\n     * Check if page is inside desktop\r\n     * @returns {boolean}\r\n     */\r\n    static get isDesktop() {\r\n        return !GSEnvironment.isMobile;\r\n    }\r\n\r\n    static get isWebkit() {\r\n        return /webkit/.test( navigator.userAgent.toLowerCase() );\r\n    } \r\n\r\n    /**\r\n     * Check if value match current browser type\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isValidBrowser(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n        if (navigator.userAgentData) {\r\n            let sts = false;\r\n            navigator.userAgentData.brands.forEach((v) => {\r\n                if (v.brand.toLowerCase().includes(strVal)) {\r\n                    sts = true;\r\n                }\r\n            });\r\n            return sts;\r\n        }\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        const isEdge = strAgt.indexOf('edg') > 0;\r\n        if (isEdge && strVal.startsWith('edg')) return true;\r\n        return !isEdge && strAgt.indexOf(strVal) > 0;\r\n    }\r\n\r\n    /**\r\n     * Returns if environment matched\r\n     * dektop, mobile, tablet, android, linux, winwdows, macos\r\n     * @returns {boolean}\r\n     */\r\n    static isValidEnvironment(val = '') {\r\n\r\n        if (!val) return true\r\n\r\n        if (val === 'desktop') {\r\n            return GSEnvironment.isDesktop;\r\n        }\r\n\r\n        if (val === 'mobile') {\r\n            return GSEnvironment.isMobile;\r\n        }\r\n\r\n        return GSEnvironment.isDevice(val);\r\n    }\r\n\r\n    /**\r\n     * Returns true if device /os is valid\r\n     * @param {string} val \r\n     * @returns {boolean}\r\n     */\r\n    static isDevice(val = '') {\r\n        if (!val) return true;\r\n        const strVal = val.toLowerCase();\r\n\r\n        if (navigator.userAgentData && navigator.userAgentData.platform) {\r\n            const platform = navigator.userAgentData.platform.toLowerCase();\r\n            return platform === strVal;\r\n        }\r\n\r\n        const strAgt = navigator.userAgent.toLocaleLowerCase();\r\n        return strAgt.indexOf(strVal) > 1;\r\n    }\r\n\r\n    /**\r\n     * Returns if orientation matched\r\n     * horizontal, vertical, portrait, landscape\r\n     * retuns true if value not set\r\n     * \r\n     * @param {string} val\r\n     * @returns {boolean}\r\n     */\r\n    static isValidOrientation(val = '') {\r\n\r\n        if (!val) return true;\r\n\r\n        if (!screen.orientation) return true;\r\n\r\n        const otype = screen.orientation.type;\r\n\r\n        if (otype.includes('portrait')) {\r\n            return val === 'portrait' || val === 'vertical';\r\n        }\r\n\r\n        if (otype.includes('landscape')) {\r\n            return val === 'landscape' || val === 'horizontal';\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    static {\r\n        Object.seal(GSEnvironment);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDOMObserver class\r\n * @module base/GSDOMObserver\r\n */\r\n\r\n/**\r\n * Generic HTMLElement node add/remove from DOM tree.\r\n * This Class accepts filter/callback function registration\r\n * as creation of independent observers for each Shadow DOM.\r\n * NOTE: Shadow dom must have independent observers!!!\r\n * Mostly used for dynamic attaching events to the elements not extended with is=\"gs-*\"\r\n * @class\r\n * @extends MutationObserver\r\n */\r\nexport default class GSDOMObserver extends MutationObserver {\r\n\r\n    static #filtersAdd = new Map();\r\n    static #filtersDel = new Map();\r\n\r\n    /**\r\n     * Observe element for insertion / deletion\r\n     * @param {HTMLElement} el A HTMLElement instance to observe for child changes\r\n     * @param {object} opt A JSON configuration object\r\n     * @returns {boolean} A satus of successfull observer registration\r\n     */\r\n    observe(el, opt) {\r\n        const cfg = opt || { childList: true, subtree: true };\r\n        return super.observe(el, cfg);\r\n    }\r\n\r\n    /**\r\n     * Create a new observer instance for given root element\r\n     * @param {HTMLElement} el An element to monitor for changes \r\n     * @returns {GSDOMObserver}\r\n     */\r\n    static create(el) {\r\n        const observer = new GSDOMObserver(GSDOMObserver.#onObserve);\r\n        observer.observe(el);\r\n        return observer;\r\n    }\r\n\r\n    /**\r\n     * Get add or remove filter\r\n     * @param {boolean} forRemove If \"true\", return injection filter functions, elseremoval functions\r\n     * @returns {Map<Function, Function>} Returns map of filter functions\r\n     */\r\n    static #getFilter(forRemove = false) {\r\n        return forRemove ? GSDOMObserver.#filtersDel : GSDOMObserver.#filtersAdd;\r\n    }\r\n\r\n    /**\r\n     * Is there any filter registered\r\n     */\r\n    static get #hasFilters() {\r\n        return GSDOMObserver.#hasFiltersAdd || GSDOMObserver.#hasFiltersDel;\r\n    }\r\n\r\n    static get #hasFiltersAdd() {\r\n        return GSDOMObserver.#filtersAdd.size > 0;\r\n    }\r\n\r\n    static get #hasFiltersDel() {\r\n        return GSDOMObserver.#filtersDel.size > 0;\r\n    }\r\n\r\n    /**\r\n     * Observer callback to filter elements\r\n     * @param {*} mutations \r\n     */\r\n    static #onObserve(mutations) {\r\n        if (!GSDOMObserver.#hasFilters) return;\r\n        mutations.forEach((mutation) => {\r\n            if (GSDOMObserver.#hasFiltersAdd) mutation.addedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersAdd));\r\n            if (GSDOMObserver.#hasFiltersDel) mutation.removedNodes.forEach(el => GSDOMObserver.#walk(el, GSDOMObserver.#filtersDel));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Walk node tree\r\n     * @param {HTMLElement} rootEL node root\r\n     * @param {Map} filters\r\n     * @returns {boolean} \r\n     */\r\n    static #walk(rootEL, filters) {\r\n        if (filters.size === 0) return false;\r\n        GSDOMObserver.#parse(rootEL, filters);\r\n        rootEL.childNodes.forEach(el => GSDOMObserver.#walk(el, filters));\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Call filter and callback function if node accepted\r\n     * @param {HTMLElement} el node root\r\n     * @param {Map} filters\r\n     * @returns {void}\r\n     */\r\n    static #parse(el, filters) {\r\n        filters.forEach((v, k) => {\r\n            try {\r\n                if (k(el)) v(el);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Execute observer logic \r\n     * \r\n     * @param {HTMLElement} el node root\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * \r\n     * @returns {boolean}\r\n     */\r\n    static #exec(el, filter, callback) {\r\n        if (el instanceof HTMLElement == false) return false;\r\n        const tmp = new Map();\r\n        tmp.set(filter, callback);\r\n        return GSDOMObserver.#walk(el, tmp);\r\n    }\r\n\r\n    /**\r\n     * Check if parameter is function\r\n     * @param {function} fn \r\n     * @returns {boolean} true if parameter is function type\r\n     */\r\n    static #isFunction(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n\r\n    /**\r\n     * Check if registration functions are valid\r\n     * @param {Function} filter function to filter nodes\r\n     * @param {Function} callback function to be called on selected node\r\n     * @returns {boolean}\r\n     */\r\n    static #isFunctions(filter, callback) {\r\n        return GSDOMObserver.#isFunction(filter) && GSDOMObserver.#isFunction(callback);\r\n    }\r\n\r\n    /**\r\n     * Register element filter\r\n     * \r\n     * @param {Function} filter - filter function returns true\r\n     * @param {Function} callback - result function\r\n     * @param {boolean} forRemove - call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if filter registered\r\n     */\r\n    static registerFilter(filter, callback, forRemove = false) {\r\n\r\n        if (!GSDOMObserver.#isFunctions(filter, callback)) return false;\r\n        \r\n        GSDOMObserver.#getFilter(forRemove).set(filter, callback);\r\n\r\n        // initially loaded does not trigger \r\n        if (!forRemove) GSDOMObserver.#exec(document.body, filter, callback);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Unregister element filter\r\n     * \r\n     * @param {Function} fn Filter function\r\n     * @param {boolean} forRemove Call on node remove or add\r\n     * \r\n     * @returns {boolean} Returns true if unregistered\r\n     */\r\n    static unregisterFilter(fn, forRemove = false) {\r\n        return GSDOMObserver.#isFunction(fn) ? GSDOMObserver.#getFilter(forRemove).delete(fn) : false;\r\n    }\r\n\r\n    /**\r\n     * Static constructor with default body monitoring\r\n     */\r\n    static {\r\n        Object.freeze(GSDOMObserver);\r\n        window.GSDOMObserver = GSDOMObserver;\r\n        const observer = GSDOMObserver.create(document.documentElement);\r\n        window.addEventListener('unload', () => { observer.disconnect() });\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nGSDOMObserver.registerFilter((el)=>{ return el.tagName ==='DIV'}, (el) => {\r\n    console.log(el);\r\n});\r\n*/\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSElement class\r\n * @module base/GSElement\r\n */\r\n\r\nimport GSID from \"./GSID.mjs\";\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSLoader from \"./GSLoader.mjs\";\r\nimport GSEvent from \"./GSEvent.mjs\";\r\nimport GSComponents from \"./GSComponents.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSLog from \"./GSLog.mjs\";\r\nimport GSFunction from \"./GSFunction.mjs\";\r\nimport GSData from \"./GSData.mjs\";\r\nimport GSEnvironment from \"./GSEnvironment.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\nimport GSDOMObserver from './GSDOMObserver.mjs';\r\n\r\n/**\r\n * Base element inherited by all other registered GS-Elements\r\n * Contains main rendering logic\r\n * @class\r\n * @extends HTMLElement\r\n */\r\nexport default class GSElement extends HTMLElement {\r\n\r\n\t#ready = false;\r\n\t#removed = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t#proxied = false;\r\n\t#opts = null;\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-element', GSElement);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tstatic observeAttributes(attributes) {\r\n\t\treturn GSData.mergeArrays(attributes, GSElement.observedAttributes);\r\n\t}\r\n\r\n\t/**\r\n\t * List of observable element attributes\r\n\t * @returns {Array<string>} Monitored attributes orientation|id\r\n\t */\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['orientation', 'id'];\r\n\t}\r\n\r\n\t/**\r\n\t * Get this class name\r\n\t */\r\n\tget clazzName() {\r\n\t\treturn this.constructor.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Template used to render component. Might be various types\r\n\t * 1. URL to load template from\r\n\t * 2. function to be called to receive template\r\n\t * 3. id of a template tag containing a template\r\n\t * 4. template source stating with \"<\" and ending with \">\"\r\n\t * \r\n\t * @returns {string} \r\n\t */\r\n\tget template() {\r\n\t\treturn GSAttr.get(this, 'template', '');\r\n\t}\r\n\r\n\tset template(val) {\r\n\t\tGSAttr.set(this, 'template', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if this component uses shadow DOM or flat - directly injected into a page\r\n\t * If set to true, use anchor attribute to determine where to inject\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is proxied to another target\r\n\t */\r\n\tget isProxy() {\r\n\t\treturn this.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if element is referenced by proxy element\r\n\t * @returns {string|boolean} Return proxy component id or false if not referenced\r\n\t */\r\n\tget proxy() {\r\n\t\treturn GSAttr.get(this, 'proxy', false);\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t * @returns {string} \r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t * @returns {string} \r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t * @returns {string} \r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Orientation where to render component\r\n\t *  - blank - always render\r\n\t *  - vertical | portrait\r\n\t *  - horizontal | landscape\r\n\t * @returns {string} \r\n\t */\r\n\tget orientation() {\r\n\t\treturn GSAttr.get(this, 'orientation', '');\r\n\t}\r\n\r\n\tset orientation(val) {\r\n\t\tGSAttr.set(this, 'orientation', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Function to be called when component is ready.\r\n\t * NOTE: namespace is supported also\r\n\t * @returns {string}  Functio name\r\n\t */\r\n\tget onready() {\r\n\t\treturn GSAttr.get(this, 'onready', '');\r\n\t}\r\n\r\n\tset onready(val) {\r\n\t\tGSAttr.set(this, 'onready', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Return true if element can be rendered bysed on OS matching\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if orientation matched for element rendering\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidOrientation() {\r\n\t\treturn GSEnvironment.isValidOrientation(this.orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @returns {boolean} \r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns owner of this shadowRoot element\r\n\t * @returns {HTMLElement|ShadowRoot} \r\n\t */\r\n\tget owner() {\r\n\t\treturn GSComponents.getOwner(this);\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is removed from DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget offline() {\r\n\t\treturn this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * Return if element is attached to a DOM tree\r\n\t * @returns {boolean} \r\n\t */\r\n\tget online() {\r\n\t\treturn !this.#removed;\r\n\t}\r\n\r\n\t/**\r\n\t * If component rendered\r\n\t */\r\n\tget ready() {\r\n\t\treturn this.#ready;\r\n\t}\r\n\r\n\t/**\r\n\t * Where to position flat element\r\n\t * HTML insertAdjacent value or *(gs-block) or self(within)\r\n\t * Format position | position@target (self)\r\n\t * @returns {string}  Values parent|self|unwrap|[html insertion position]\r\n\t */\r\n\tget anchor() {\r\n\t\tconst me = this;\r\n\t\tconst dft = 'beforeend@self';\r\n\t\treturn me.proxy ? dft : GSAttr.get(this, 'anchor', dft);\r\n\t}\r\n\r\n\t/**\r\n\t * Avaialble only after render, after template is applied\r\n\t * @returns {ShadowRoot|HTMLElement} \r\n\t */\r\n\tget self() {\r\n\t\tconst me = this;\r\n\t\treturn me.isProxy && me.#content instanceof GSElement ? me.#content.self : me.#content;\r\n\t}\r\n\r\n\t/**\r\n\t * Update shareable stylesheet on change\r\n\t */\r\n\tupdateUI() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) return;\r\n\t\tme.shadowRoot.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\tGSEvent.send(document.body, 'i18n', me.shadowRoot);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve custom style for rendered items, does not apply to this element.\r\n\t * @returns {string}\r\n\t */\r\n\tgetStyle() {\r\n\t\treturn GSAttr.get(this, 'style', '');\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by its ID\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tgetByID(query = '') {\r\n\t\treturn GSDOM.getByID(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find closest top element by CSS selector\r\n\t * @param {string} query \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tclosest(query = '') {\r\n\t\treturn GSDOM.closest(this, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find element by CSS selector (top level is this element)\r\n\t * @param {string} name \r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(query = '') {\r\n\t\treturn GSDOM.query(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Find multiple elements by CSS selector (top level is this element)\r\n\t * @param {string} query \r\n\t * @returns {Array<HTMLElement>}\r\n\t */\r\n\tqueryAll(query = '') {\r\n\t\treturn GSDOM.queryAll(this.self, query);\r\n\t}\r\n\r\n\t/**\r\n\t * Used for override to get predefined template\r\n\t * Can be html source or url, checks if load or not\r\n\t * @async\r\n\t * @returns {Promisa<string>}\r\n\t */\r\n\tasync getTemplate(def = '') {\r\n\t\treturn GSLoader.getTemplate(def);\r\n\t}\r\n\r\n\t/**\r\n\t * Hide current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\thide(orientation = false) {\r\n\t\tGSDOM.hide(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Show current component\r\n\t * @param {boolean} orientation \r\n\t */\r\n\tshow(orientation = false) {\r\n\t\tGSDOM.show(this, orientation);\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for event to happen\r\n\t * @async\r\n\t * @param {string} name \r\n\t * @returns {Promisa}\r\n\t */\r\n\tasync waitEvent(name = '') {\r\n\t\tif (!name) throw new Error('Event undefined!');\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tme.once(name, (evt) => r(evt.detail));\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Listen once for triggered event\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t */\r\n\tonce(name, func) {\r\n\t\treturn this.listen(name, func, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event listen\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\ton(name, func, once = false) {\r\n\t\treturn this.listen(name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Alternative function for event unlisten\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\toff(name, func) {\r\n\t\treturn this.unlisten(name, func);\r\n\t}\r\n\r\n\t/**\r\n\t * Attach event to this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * * @returns {boolean}\r\n\t */\r\n\tlisten(name, func, once = false) {\r\n\t\treturn this.attachEvent(this, name, func, once);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove event from this element\r\n\t * @param {string} name  A name of the event\r\n\t * @param {Function} func A callback function on event trigger\r\n\t * @returns {boolean}\r\n\t */\r\n\tunlisten(name, func) {\r\n\t\treturn this.removeEvent(this, name, func);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener appender\r\n\t* \r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @param {boolean} once Listen only once\r\n\t* @returns {boolean} State if attachment was successful\r\n\t*/\r\n\tattachEvent(el, name = '', fn, once = false) {\r\n\t\treturn GSEvent.attach(this, el, name, fn, once);\r\n\t}\r\n\r\n\t/**\r\n\t* Generic event listener remove\r\n\t* @param {HTMLElement} el Element on which to monitor for named events\r\n\t* @param {string} name Event name to watch for\r\n\t* @param {Function} fn Event trigger callback\r\n\t* @returns {boolean} State if attachment was successful\t\r\n\t*/\r\n\tremoveEvent(el, name = '', fn) {\r\n\t\treturn GSEvent.remove(this, el, name, fn);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element injected to parent DOM node\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.#isConfig()) return;\r\n\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#opts = me.#injection();\r\n\t\tme.#proxied = me.#opts.ref;\r\n\t\tGSComponents.store(me);\r\n\t\tme.#render();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from parent DOM node\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#removed = true;\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSEvent.deattachListeners(me);\r\n\t\tme.#removeFlat();\r\n\t\tme.#observer = null;\r\n\t\tme.#content = null;\r\n\t\tme.#opts = null;\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t * \r\n\t * @param {string} name  Attribute name\r\n\t * @param {string} oldValue Old value before change\r\n\t * @param {string} newValue New value after change\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name === 'orientation') me.#onOrientation();\r\n\t\tif (name === 'id') {\r\n\t\t\tGSComponents.remove(oldValue);\r\n\t\t\tGSComponents.store(me);\r\n\t\t}\r\n\t\tif (me.#ready) {\r\n\t\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\t\tme.attributeCallback(name, oldValue, newValue);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Used on top classes to be called under animation frame to update UI\r\n\t * @param {*} name \r\n\t * @param {*} oldValue \r\n\t * @param {*} newValue \r\n\t */\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element fully rendered\r\n\t * @returns {void}\r\n\t */\r\n\t onReady() {\r\n\t\tconst me = this;\r\n\t\tif (me.offline) return;\r\n\t\tme.#ready = true;\r\n\t\tconst fn = GSFunction.parseFunction(me.onready);\r\n\t\tGSFunction.callFunction(fn);\r\n\t\tGSEvent.send(document.body, 'componentready', me);\r\n\t}\r\n\r\n\t/**\r\n\t * Update UI state if orientation changes\r\n\t */\r\n\t#onOrientation(e) {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tif (me.offline) return;\r\n\t\t\tme.isValidOrientation ? me.show(true) : me.hide(true)\r\n\t\t});\r\n\t}\r\n\r\n\t#isConfig() {\r\n\t\tconst me = this;\r\n\t\tconst pe = GSComponents.getOwner(me, GSElement);\r\n\t\treturn pe && pe.isProxy;\r\n\t}\r\n\r\n\t#styleChange() {\r\n\t\tconst me = this;\r\n\t\tGSUtil.requestAnimationFrame(() => {\r\n\t\t\tme.updateUI();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Get element shadowRoot, autocreate if does not exist\r\n\t * @returns {ShadowRoot} \r\n\t */\r\n\t get #shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.#shadow);\r\n\t\t\tme.updateUI();\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\tget #useTemplate() {\r\n\t\tconst me = this;\r\n\t\treturn (me.#proxied && me.isFlat) || !me.#proxied;\r\n\t}\r\n\r\n\t/**\r\n\t * Internal function to handle loaded template\r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #aplyTemplate() {\r\n\r\n\t\tconst me = this;\r\n\r\n\t\tif (me.offline) return;\r\n\r\n\t\tconst useTpl = me.#useTemplate;\r\n\t\tconst src = useTpl ? await me.getTemplate(me.template) : me.outerHTML;\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(() => {\r\n\r\n\t\t\tif (me.offline) return;\r\n\r\n\t\t\tconst inject = me.#opts;\r\n\r\n\t\t\tif (me.#proxied) {\r\n\t\t\t\tif (useTpl) {\r\n\t\t\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = GSDOM.parse(src, true);\r\n\t\t\t\t\tme.#content.id = me.id;\r\n\t\t\t\t\tme.id = GSID.id;\r\n\t\t\t\t}\r\n\t\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (inject.target === me) {\r\n\t\t\t\tif (me.isFlat) {\r\n\t\t\t\t\tif (src) {\r\n\t\t\t\t\t\tconst tpl = GSDOM.parseWrapped(me, src, false);\r\n\t\t\t\t\t\tme.#content = tpl;\r\n\t\t\t\t\t\tGSDOM.insertAdjacent(inject.target, tpl, inject.anchor);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tme.#content = me;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tme.#content = me.#shadow;\r\n\t\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\t}\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (inject.target === me.parentElement) {\r\n\t\t\t\tme.#content = me.isFlat ? me : me.#shadow;\r\n\t\t\t\tGSDOM.setHTML(me.#content, src);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tme.#content = GSDOM.parseWrapped(me, src, true);\r\n\t\t\tGSDOM.link(me, me.#content);\r\n\t\t\tGSDOM.insertAdjacent(inject.target, me.#content, inject.anchor);\r\n\t\t\t\r\n\t\t});\r\n\t\tme.updateUI();\r\n\t}\r\n\r\n\t#injection() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst tpl = me.anchor;\r\n\t\tconst idx = tpl.indexOf('@');\r\n\r\n\t\tlet anchor = idx > 0 ? tpl.slice(0, idx) : tpl;\r\n\t\tlet target = idx > 0 ? tpl.slice(idx + 1) : 'self';\r\n\r\n\t\tif (anchor === 'self' || anchor === 'parent') {\r\n\t\t\ttarget = target ? target : anchor;\r\n\t\t\tanchor = null;\r\n\t\t}\r\n\r\n\t\tanchor = GSUtil.normalize(anchor, 'beforeend');\r\n\t\ttarget = GSUtil.normalize(target, 'self');\r\n\r\n\t\tlet el = null;\r\n\t\tswitch (target) {\r\n\t\t\tcase 'self':\r\n\t\t\t\tel = me;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'parent':\r\n\t\t\t\tel = me.parentElement;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tel = GSDOM.query(document.documentElement, target);\r\n\t\t}\r\n\r\n\t\tif (!el) {\r\n\t\t\tconst msg = `Injection point not available!\\nElement: ${me.tagName}, Id:${me.id}, tgt:${target}`;\r\n\t\t\tGSLog.error(me, msg);\r\n\t\t\tthrow new Error(msg);\r\n\t\t}\r\n\r\n\t\tconst ref = !(el === me || el === me.parentElement);\r\n\r\n\t\treturn {\r\n\t\t\tanchor: anchor,\r\n\t\t\ttarget: el,\r\n\t\t\tref: ref\r\n\t\t};\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content && me.#content.remove) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Render component in DOM\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync #render() {\r\n\t\tconst me = this;\r\n\t\t// await GSFunction.waitPageLoad();\r\n\t\tawait me.#aplyTemplate();\r\n\t\tif (me.offline) return;\r\n\t\tif (!me.#useTemplate) return;\r\n\t\tif (!me.isFlat) me.attachEvent(document, 'gs-style', me.#styleChange.bind(me));\r\n\t\tme.attachEvent(screen.orientation, 'change', me.#onOrientation.bind(me));\r\n\t\tGSUtil.requestAnimationFrame(() => me.onReady());\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\nimport GSDOM from \"../../../modules/base/GSDOM.mjs\";\r\nimport GSElement from \"../../../modules/base/GSElement.mjs\";\r\n \r\n /**\r\n  * Class representing UI shell sidebar\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class SidebarUI extends GSElement {\r\n \r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-sidebar', SidebarUI);\r\n        Object.seal(SidebarUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/sidebar.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const isTunnel = Tn5250?.opt?.tunnel === true;\r\n        const el = this.query('[data-inject=\"gs-admin-view-tunnel\"]');\r\n        GSDOM.toggleClass(el, !isTunnel, 'd-none');\r\n    }\r\n\r\n}\r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../modules/base/GSUtil.mjs\";\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n\r\n\r\n/**\r\n * Class representing Utils\r\n * @class\r\n * @extends {Utils}\r\n */\r\nexport default class Utils {\r\n\r\n    static dataToBlob(data) {\r\n        const blob = new Blob([data], { type: 'text/html' });\r\n        return URL.createObjectURL(blob);\r\n    }\r\n\r\n    static releaseBlob(link) {\r\n        if ((link || '').indexOf('blob:') === 0) {\r\n            URL.revokeObjectURL(link);\r\n        }\r\n    }\r\n\r\n    static async download(name = '', data) {\r\n        const a = document.createElement(\"a\");\r\n        a.href = Utils.dataToBlob(data);\r\n        a.download = name;\r\n        a.click();\r\n        await GSUtil.timeout(1000);\r\n        Utils.releaseBlob(a.href);\r\n    }\r\n\r\n    static openInNewTab(url = '', data, params, target = '_blank') {\r\n        const link = (url || '').length > 0 ? url : Utils.dataToBlob(data);\r\n        const win = window.open(link, target, params || null);\r\n        const isWin = win && typeof win.focus === 'function';\r\n        if (!isWin) {\r\n            Utils.releaseBlob(link);\r\n            alert('Browser is blocking popup!');\r\n            return;\r\n        }\r\n        win.addEventListener('beforeuload', () => Utils.releaseBlob(link));\r\n    }\r\n\r\n    static toHex(data, flat, space) {\r\n        const tmp = [];\r\n        Utils.wrap(data).forEach(v => {\r\n            tmp.push(v.toString(16).padStart(2, 0));\r\n        });\r\n        return flat ? tmp.join(space || '') : tmp;\r\n    }\r\n\r\n    static fromHex(data, flat, space) {\r\n        const tmp = [];\r\n        Utils.wrap(data).forEach(v => {\r\n            tmp.push(parseInt(v, 16));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Chewck if string is hex string\r\n     * @param {String} data \r\n     */\r\n    static isHexString(data) {\r\n\r\n        if (GSUtil.isString(data)) {\r\n            return (/^[0-9A-Fa-f]+$/g).test(data);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Split hex string to char pairs array\r\n     */\r\n    static splitHexString(data) {\r\n        return data.match(/.{1,2}/g);\r\n    }\r\n\r\n    /**\r\n     * Convert binary data as Uint8Array\r\n     * \r\n     * @param {variant}\r\n     *            data\r\n     * @return {Uint8Array}\r\n     */\r\n    static wrap(data) {\r\n\r\n        if (GSUtil.isString(data)) {\r\n            if (Utils.isHexString(data)) {\r\n                return Utils.splitHexString(data);\r\n            } else {\r\n                data = Utils.base64ToBuffer(data);\r\n            }\r\n        }\r\n\r\n        if (!(data instanceof Uint8Array)) {\r\n            data = new Uint8Array(data);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Convert binary data as regular array\r\n     * \r\n     * @param {variant}\r\n     *            data\r\n     * @return {Array}\r\n     */\r\n    static unwrap(data) {\r\n\r\n        if (typeof data === 'string') {\r\n            if (Utils.isHexString(data)) {\r\n                return Utils.splitHexString(data);\r\n            } else {\r\n                data = Utils.base64ToBuffer(data);\r\n            }\r\n        }\r\n\r\n        if (data instanceof Uint8Array) {\r\n            data = Array.from(data);\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n\t/**\r\n\t * Convert base64 text to binary data\r\n\t * \r\n\t * @param {String}\r\n\t *            base64\r\n\t */\r\n     static base64ToBuffer(base64) {\r\n        const binary_string = globalThis.atob(base64);\r\n        const len = binary_string.length;\r\n        const bytes = new Uint8Array(len);\r\n        for (let i = 0; i < len; i++) {\r\n            bytes[i] = binary_string.charCodeAt(i);\r\n        }\r\n        return bytes.buffer;\r\n    }    \r\n}","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading Shell Sidebar class\r\n * @module shell\r\n */\r\n\r\nimport GSFunction from \"../../../modules/base/GSFunction.mjs\";\r\nimport GSElement from \"../../../modules/base/GSElement.mjs\";\r\n\r\nimport Utils from \"../util.mjs\";\r\n\r\n/**\r\n * Class representing UI shell sidebar\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class HeaderUI extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-admin-shell-header', HeaderUI);\r\n        Object.seal(HeaderUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell/header.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('action', me.#onAction.bind(me));\r\n        me.queryAll('gs-dropdown').forEach(el => me.attachEvent(el, 'action', me.#onAction.bind(me)));\r\n    }\r\n\r\n    #onAction(e) {\r\n        const me = this;\r\n        const action = e?.detail?.action || e?.detail?.source?.target?.dataset?.action;\r\n        const fnName = action.split('-').map((v, i) => i === 0 ? v : me.#capitalize(v)).join('');\r\n        if (GSFunction.isFunction(me[fnName])) me[fnName](e);\r\n    }\r\n\r\n    #capitalize(string) {\r\n        return string.charAt(0).toUpperCase() + string.slice(1);\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n     get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    async logout() {\r\n        await io.greenscreens.Session.closeSession();\r\n        document.body.innerHTML = '<gs-admin-login></gs-admin-login>'\r\n    }\r\n\r\n    explorer() {\r\n        const link = '/admin/explorer.jsp';\r\n        Utils.openInNewTab(link, null, \"toolbar=no,scrollbars=yes,resizable=yes\");\r\n    }\r\n\r\n    async restart() {\r\n        const me = this;\r\n        const sts  = globalThis.confirm('Are you sure you want to restart the server? All data will be lost.');\r\n        if (!sts) return;\r\n        me.notify.info('Info','Restart server requested');\r\n        const o = await io.greenscreens.Server.restart();\r\n        if (o.success) {\r\n            me.notify.info('Info','Server is restarting! <br>Wait about 1min. then refresh browser.');\r\n        } else {\r\n            me.notify.danger('Info', o.msg);\r\n        }\r\n    }\r\n\r\n    // toggle client verification\r\n    async certClientVerify() { \r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.verifySSLClient(2);\r\n        if (!o.success) return me.notify.danger('Error', o.msg);\r\n        const msg = o.msg || 'Client SSL verification changed.';\r\n        me.notify.info('Info',  msg + '<br>Restart server to apply changes.');\r\n    }\r\n\r\n    // regenerate session keys\r\n    async certGenTerm() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.regenerate();\r\n        if (o.success && o.code === 'RSA') return me.notify.info('Info', 'New encryption keys generated');\r\n        me.notify.danger('Error', o.msg);\r\n    }\r\n\r\n    // generate server cert request\r\n    async certGenReq() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.request(true);\r\n        if (!o.success) return me.notify.danger('Error', o.data.msg || 'Certificate not generated');\t\r\n        Utils.download(\"server_request.txt\", o.data.requestPem);\r\n        Utils.download(\"server_private.txt\", o.data.privatePem);\r\n        Utils.download(\"server_public.txt\", o.data.publicPem);\r\n    }\r\n\r\n    // generate server cert\r\n    async certGenSvr() {\r\n        const sts = confirm('Are you sure? Action will overwrite existnig certificate.');\r\n        if (!sts) return;\r\n        const o = await io.greenscreens.Certificate.generate(true);\r\n        if (o.success) {\r\n            this.notify.info('Info', 'New server certificate generated! <br> Please, restart server for changes to apply.');\r\n        } else {\r\n            this.notify.danger(res.msg);\r\n        }\r\n\r\n    }\r\n\r\n    async registerWebAuthn() {\r\n        // APIController biometric\r\n        console.log('==> Register WebAuthn');\r\n    }\r\n\r\n    certExport() {\r\n        Utils.openInNewTab('/services/certificate');\r\n    }\r\n\r\n    downloadSavf() {\r\n        Utils.openInNewTab('/services/admintransfer?type=savf');\r\n    }\r\n\r\n    downloadConfig() {\r\n        Utils.openInNewTab('/services/admintransfer?type=conf');\r\n    }\r\n\r\n    downloadLogs() {\r\n        Utils.openInNewTab('/services/admintransfer?type=log');\r\n    }\r\n    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module shell\r\n */\r\n import GSElement from \"../../../modules/base/GSElement.mjs\";\r\n  \r\n /**\r\n  * Class representing UI Shell\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class ShellUI extends GSElement {\r\n \r\n\r\n    static {\r\n        customElements.define('gs-admin-shell', ShellUI);\r\n        Object.seal(ShellUI);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//shell.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n\r\n    }\r\n\r\n}\r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSModal class\r\n * @module components/GSModal\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSModal extends GSElement {\r\n\r\n  static #actions = ['ok', 'cancel'];\r\n\r\n  static {\r\n    customElements.define('gs-modal', GSModal);\r\n    Object.seal(GSModal);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['cancelable', 'closable', 'title', 'visible'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update();\r\n    if (name === 'visible') {\r\n      if (me.visible) {\r\n        me.#showEL('.modal');\r\n        me.#showEL('.modal-backdrop');\r\n        me.focusable().focus();\r\n      } else {\r\n        me.#hideEL('.modal');\r\n        me.#hideEL('.modal-backdrop');\r\n        me.normal();\r\n      }\r\n      GSEvent.send(me, 'visible', { type: 'modal', ok: me.visible }, true, true);\r\n    }\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    me.attachEvent(me, 'click', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'action', me.#onClick.bind(me));\r\n    me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    me.attachEvent(document, 'keyup', me.#onEscape.bind(me));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  #onForm(e) {\r\n    const me = this;\r\n    GSEvent.prevent(e);\r\n    const sts = GSEvent.send(me, 'data', { type: 'modal', data: e.detail.data, evt: e }, true, true, true);\r\n    if (sts) me.close();\r\n  }\r\n\r\n  #onEscape(e) {\r\n    const me = this;\r\n    if (!me.cancelable) return;\r\n    if (e.key === 'Escape') me.close();\r\n  }\r\n\r\n  #onClick(e) {\r\n\r\n    const me = this;\r\n    const action = me.#isAcceptedAction(e);\r\n    if (!action) return;\r\n\r\n    const isOk = action === 'ok';\r\n    const forms = GSDOM.queryAll(me, 'form');\r\n    const processForms = isOk && forms.length > 0;\r\n\r\n    if (processForms) {\r\n      const invalid = forms.filter(form => form.checkValidity() == false);\r\n      invalid.forEach(form => me.#reportForm(form));\r\n      if (invalid.length === 0) forms.forEach(form => me.#submitForm(form) );\r\n      \r\n      const els = invalid.map(form => GSDOM.queryAll(form, 'textarea, input, select').filter(el => el.checkValidity() == false));\r\n      if (els.length > 0) GSEvent.send(me, 'error', { type: 'modal', data: els }, true, true, true);\r\n      return;\r\n    }\r\n\r\n    let sts = true;\r\n    try {\r\n      sts = GSEvent.send(me, 'action', { type: 'modal', ok: isOk, evt: e }, true, true, true);\r\n    } finally {\r\n      if (sts) me.close(null, isOk);\r\n    }\r\n  }\r\n\r\n  #submitForm(form) {\r\n    try {\r\n      GSEvent.send(form, 'action', { action: 'submit'});\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #reportForm(form) {\r\n    try {\r\n      form.reportValidity();\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  #getAction(e) {\r\n    const el = e.composedPath().shift();\r\n    return el?.dataset?.action || e.detail.action || el?.type;\r\n  }\r\n\r\n  #isAcceptedAction(e) {\r\n    const action = this.#getAction(e);\r\n    const isOk = GSModal.#actions.includes(action);\r\n    if (isOk) GSEvent.prevent(e);\r\n    return isOk ? action : null;\r\n  }\r\n\r\n  #setSize(size = '') {\r\n    const me = this;\r\n    const dlg = me.query('.modal-dialog');\r\n    if (!dlg) return;\r\n    requestAnimationFrame(() => {\r\n      dlg.classList.remove('modal-xl', 'modal-lg');\r\n      if (size) dlg.classList.add(size);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"large\"\r\n   */\r\n  large() {\r\n    this.#setSize('modal-lg');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"extra large\"\r\n   */\r\n  extra() {\r\n    this.#setSize('modal-xl');\r\n  }\r\n\r\n  /**\r\n   * Change size of modal window to \"default\"\r\n   */\r\n  normal() {\r\n    this.#setSize();\r\n  }\r\n\r\n  /**\r\n   * Generic modal popup function\r\n   * @param {string} title Modal title\r\n   * @param {string} message Modal message \r\n   * @param {boolean} closable Can user close it (close button)\r\n   * @param {boolean} cancelable Is cancel button available\r\n   * @returns {Promise}\r\n   */\r\n  info(title = '', message = '', closable = false, cancelable = false) {\r\n    const me = this;\r\n    me.title = title;\r\n    me.body = message;\r\n    me.cancelable = cancelable;\r\n    me.closable = closable;\r\n    me.open();\r\n    if (closable || cancelable) return me.waitEvent('action');\r\n  }\r\n\r\n  confirm(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, false);\r\n  }\r\n\r\n  prompt(title = '', message = '') {\r\n    const me = this;\r\n    return me.info(title, message, true, true);\r\n  }\r\n\r\n  /**\r\n   * Show modal panel\r\n   */\r\n  open(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'open', { type: 'modal' }, true, true, true);\r\n    if (sts) me.visible = true;\r\n  }\r\n\r\n  /**\r\n   * Hide modal panel\r\n   */\r\n  close(e, ok = false) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    const sts = GSEvent.send(me, 'close', { type: 'modal', isOk: ok }, true, true, true);\r\n    if (sts) me.visible = false;\r\n  }\r\n\r\n  /**\r\n   * Toggle modal panel\r\n   */\r\n  toggle() {\r\n    const me = this;\r\n    me.visible = !me.visible;\r\n  }\r\n\r\n  /**\r\n   * Return active button\r\n   * @returns {HTMLButtonElement|GSButton}\r\n   */\r\n  focusable() {\r\n    const me = this;\r\n    if (me.cancelable) return me.#buttonCancelEl;\r\n    if (me.closable) return me.#buttonOkEl;\r\n    return me;\r\n  }\r\n\r\n  get #buttonOkEl() {\r\n    return this.query('.modal-ok');\r\n  }\r\n\r\n  get #buttonCancelEl() {\r\n    return this.query('.modal-cancel');\r\n  }\r\n\r\n  #showEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.remove('d-none');\r\n    el.classList.add('show', 'd-block');\r\n  }\r\n\r\n  #hideEL(name) {\r\n    const el = this.query(name);\r\n    if (!el) return;\r\n    el.classList.add('d-none');\r\n    el.classList.remove('show', 'd-block');\r\n  }\r\n\r\n  #update() {\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#buttonOkEl, !me.closable);\r\n    GSDOM.toggleClass(me.#buttonCancelEl, !me.cancelable);\r\n    const css = `justify-content-${me.align}`;\r\n    const footer = me.query('.modal-footer');\r\n    GSDOM.toggleClass(footer, true, css);\r\n  }\r\n\r\n  /**\r\n   * Search for named slot tag or css selector \r\n   * @param {string} name Tagged slot  name\r\n   * @param {*} qry CSS selector\r\n   * @returns {HTMLElement|Array<HTMLElement>}\r\n   */\r\n  #findSlotOrEl(name = '', qry = '') {\r\n    const me = this;\r\n    let el = name ? me.self.querySelector(`[slot=\"${name}\"]`) : null;\r\n    if (!el) el = me.self.querySelector(qry);\r\n    return el;\r\n  }\r\n\r\n\r\n  get title() {\r\n    return this.#findSlotOrEl('title', '.modal-title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSDOM.setHTML(this.title, val);\r\n  }\r\n\r\n  get body() {\r\n    return this.#findSlotOrEl('body', '.modal-body');\r\n  }\r\n\r\n  set body(val = '') {\r\n    GSDOM.setHTML(this.body, val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get cancelable() {\r\n    return GSAttr.getAsBool(this, 'cancelable', true);\r\n  }\r\n\r\n  set cancelable(val = true) {\r\n    GSAttr.setAsBool(this, 'cancelable', val);\r\n    this.#update();\r\n  }\r\n\r\n  /**\r\n   * Align buttons start | end | center\r\n   */\r\n  get align() {\r\n    return GSAttr.get(this, 'align', 'end');\r\n  }\r\n\r\n  set align(val = 'end') {\r\n    GSAttr.set(this, 'align', val);\r\n    this.#update();\r\n  }\r\n\r\n  get buttonOk() {\r\n    return GSAttr.get(this, \"button-ok\", \"Ok\");\r\n  }\r\n\r\n  set buttonOk(val = 'Ok') {\r\n    GSAttr.set(this, \"button-ok\", val);\r\n  }\r\n\r\n  get buttonCancel() {\r\n    return GSAttr.get(this, \"button-cancel\", \"Cancel\");\r\n  }\r\n\r\n  set buttonCancel(val = 'Cancel') {\r\n    GSAttr.set(this, \"button-cancel\", val);\r\n  }\r\n\r\n  get cssButtonOk() {\r\n    return GSAttr.get(this, \"css-button-ok\", \"btn-primary\");\r\n  }\r\n\r\n  get cssButtonCancel() {\r\n    return GSAttr.get(this, \"css-button-cancel\", \"btn-secondary\");\r\n  }\r\n\r\n  get cssModal() {\r\n    return GSAttr.get(this, \"css-modal\", \"\");\r\n  }\r\n\r\n  get cssContent() {\r\n    return GSAttr.get(this, \"css-content\", \"\");\r\n  }\r\n\r\n  get cssHeader() {\r\n    return GSAttr.get(this, \"css-header\", \"\");\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, \"css-title\", \"\");\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, \"css-body\", \"\");\r\n  }\r\n\r\n  get cssFooter() {\r\n    return GSAttr.get(this, \"css-footer\", \"\");\r\n  }\r\n\r\n  set cssModal(val = '') {\r\n    return GSAttr.set(this, \"css-modal\", val);\r\n  }\r\n\r\n  set cssContent(val = '') {\r\n    return GSAttr.set(this, \"css-content\", val);\r\n  }\r\n\r\n  set cssHeader(val = '') {\r\n    return GSAttr.set(this, \"css-header\", val);\r\n  }\r\n\r\n  set cssTitle(val = '') {\r\n    return GSAttr.set(this, \"css-title\", val);\r\n  }\r\n\r\n  set cssBody(val = '') {\r\n    return GSAttr.set(this, \"css-body\", val);\r\n  }\r\n\r\n  set cssFooter(val = '') {\r\n    return GSAttr.set(this, \"css-footer\", val);\r\n  }\r\n\r\n  // css-modal, css-content css-header css-title css-body css-footer\r\n  async getTemplate(val = '') {\r\n    if (val) return super.getTemplate(val);\r\n    const me = this;\r\n    return `\r\n         <div class=\"modal d-none fade ${me.cssModal}\">\r\n         <div class=\"modal-dialog modal-dialog-centered\">\r\n           <div class=\"modal-content ${me.cssContent}\">\r\n             <div class=\"modal-header border-0 ${me.cssHeader}\">\r\n               <div class=\"modal-title ${me.cssTitle}\">\r\n                 <slot name=\"title\"></slot>\r\n               </div>\r\n             </div>\r\n             <div class=\"modal-body ${me.cssBody}\">\r\n               <slot name=\"body\"></slot>\r\n             </div>\r\n             <div class=\"modal-footer border-0 justify-content-${me.align} ${me.cssFooter}\">\r\n               <button class=\"btn ${me.cssButtonCancel} modal-cancel\" data-action=\"cancel\">${me.buttonCancel}</button>\r\n               <button class=\"btn ${me.cssButtonOk} modal-ok\" data-action=\"ok\">${me.buttonOk}</button>\r\n             </div>\r\n           </div>\r\n         </div>\r\n       </div>\r\n       <div class=\"modal-backdrop d-none fade \"></div>    \r\n     `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading FormTunnel class\r\n * @module dialogs/FormTunnel\r\n */\r\n \r\nimport GSAttr from '../../../modules/base/GSAttr.mjs';\r\nimport GSModal from '../../../modules/components/GSModal.mjs';\r\n\r\nexport default class FormTunnel extends GSModal {\r\n\r\n    static {\r\n        customElements.define('gs-admin-form-tunnel', FormTunnel);\r\n        Object.seal(FormTunnel);\r\n    }\r\n\r\n    get nameField() {\r\n        return GSDOM.query(this, 'input[name=\"name\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('visible', me.#onVisible.bind(me));\r\n    }\r\n\r\n    #onVisible(e) {\r\n        const me = this;\r\n        const sts = me.nameField?.value?.trim().length > 0;\r\n        GSAttr.toggle(me.nameField, 'readonly', sts);\r\n        GSAttr.toggle(me.nameField, 'disabled', sts);\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading FormService class\r\n * @module dialogs/FormService\r\n */\r\n \r\nimport GSAttr from '../../../modules/base/GSAttr.mjs';\r\nimport GSModal from '../../../modules/components/GSModal.mjs';\r\n\r\nexport default class FormService extends GSModal {\r\n\r\n    #type = null;\r\n\r\n    static {\r\n        customElements.define('gs-admin-form-service', FormService);\r\n        Object.seal(FormService);\r\n    }\r\n\r\n    get valueField() {\r\n        return GSDOM.query(this, 'input[name=\"value\"]');\r\n    }\r\n\r\n    convert(data) {\r\n        const me = this;\r\n        switch(me.#type) {\r\n            case 'checkbox':\r\n                data.value = data.value == 'true';\r\n                break;\r\n            case 'number':\r\n                data.value = parseInt(data.value, 10);\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateValue(value) {\r\n        const me = this;\r\n        me.#type = me.valueToType(value);\r\n        GSAttr.set(me.valueField, 'type', me.#type);\r\n        if (me.#type === 'checkbox') {\r\n            me.valueField.className = 'form-check-input';\r\n            me.valueField.parentElement.className = 'form-check form-switch fs-4';\r\n            me.valueField.checked = value;\r\n        } else {\r\n            me.valueField.className = 'form-control';\r\n            me.valueField.parentElement.className = '';\r\n        }\r\n    }\r\n\r\n    valueToType(val) {\r\n        const dtype = typeof val;\r\n        const isBool = dtype === \"boolean\";\r\n        const type = dtype === \"string\" ? \"text\" : \"number\";\r\n        return isBool ? 'checkbox' : type;\r\n    }\r\n}","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLLinkElement\r\n */\r\nexport default class GSLinkExt extends HTMLLinkElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tif (!me.isCSS) return;\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isCSS) return;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\t/**\r\n\t * Get this CSS source\r\n\t * @returns {string}\r\n\t */\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Get this element CSS instance\r\n\t * @returns {CSSStyleSheet}\r\n\t */\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\t/**\r\n\t * Check if this element is CSS\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isCSS() {\r\n\t\tconst me = this;\r\n\t\treturn me.rel === 'stylesheet' || me.href.includes('.css');\r\n\t}\r\n\r\n\t/**\r\n\t * Injection order inside lsit of loaded styles\r\n\t * @returns {number}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-ext-link', GSLinkExt, { extends: 'link' });\r\n\t\tObject.freeze(GSLinkExt);\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStyleExt class\r\n * @module head/GSStyleExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n * Does not support style disabling / theming\r\n * @class\r\n * @extends HTMLStyleElement\r\n */\r\nexport default class GSStyleExt extends HTMLStyleElement {\r\n\r\n\t#callback = null;\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\tme.#callback = setInterval(me.#onLoad.bind(me), 1);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = GSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t}\r\n\r\n\t#onLoad() {\r\n\t\tconst me = this;\r\n\t\tconst sheet = me.sheet;\r\n\t\tif (!sheet) return;\r\n\t\tclearInterval(me.#callback);\r\n\t\t//GSCacheStyles.getOrSet(me.order, sheet);\t\t\r\n\t\tGSCacheStyles.injectStyle(me.asText, me.order);\r\n\t\tconst proxy = GSCacheStyles.get(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', proxy);\r\n\t}\r\n\r\n\tget asText() {\r\n\t\treturn Object.values(this.sheet.cssRules).map(o => o.cssText).join('');\r\n\t}\r\n\r\n\tget sheet() {\r\n\t\tconst me = this;\r\n\t\treturn Object.values(document.styleSheets).filter(sh => sh.ownerNode === me).pop();\r\n\t}\r\n\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSStyleExt);\r\n\t\tcustomElements.define('gs-ext-style', GSStyleExt, { extends: 'style' });\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCSS class\r\n * @module head/GSCSS\r\n */\r\n\r\n/**\r\n * Adoptable CSS - css template for WebComponents\r\n */\r\nimport GSBase from \"./GSBase.mjs\";\r\nimport GSCacheStyles from \"./GSCacheStyles.mjs\";\r\n\r\n/**\r\n * WebComponents shared CSS\r\n * \r\n * To change theme use hashtag (auto=true retured and theme=THEME_NAME)\r\n * http://localhost:8080/demos/button.html#theme=bs\r\n * \r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/custom.css\" rel=\"stylesheet\"></gs-css>\r\n * <gs-css auto=\"true\" global=\"true\" src=\"/webcomponents/assets/css/bootstrap_5.2.0.css\" rel=\"stylesheet\" disabled=\"true\" theme=\"bs\"></gs-css>\r\n * \r\n * Use attribute disabled to disable theme programatically\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSCSS extends GSBase {\r\n\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['disabled'].concat(super.observedAttributes);\r\n\t}\r\n\r\n\tattributeCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (name !== 'disabled') return;\r\n\t\treturn me.isDisabled ? me.dispose() : me.render();\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tconst me = this;\r\n\t\tme.disabled = me.notheme == false && me.theme !== GSCSS.activeTheme;\r\n\t\t//me.disabled = !(me.theme === 'default' || me.theme === GSCSS.activeTheme);\r\n\t}\r\n\r\n\t/**\r\n\t * Load, initialize and cache stylesheet for sharing among WebComponents\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise}\r\n\t */\r\n\tasync render() {\r\n\t\tconst me = this;\r\n\t\tif (me.isDisabled) return;\r\n\t\tif (!me.order) me.order = GSBase.nextID();\r\n\t\t//const hash = GSBase.hashCode(me.url);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(me.url);\r\n\t\t\tif (!res.ok) return;\r\n\t\t\tconst css = await res.text();\r\n\t\t\tGSCacheStyles.injectStyle(css, me.order);\r\n\t\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\t\tif (sheet) GSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\t} catch (e) {\r\n\t\t\tGSCacheStyles.remove(me.order);\r\n\t\t\tconsole.log(e);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\t\tconst me = this;\r\n\t\tif (!me.isAuto) return;\r\n\t\tconst sheet = GSCacheStyles.get(me.order);\r\n\t\tGSCacheStyles.remove(me.order);\r\n\t\tGSBase.sendSuspendedEvent(document, 'gs-style', sheet);\r\n\t\tdocument.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t}\r\n\r\n\t/**\r\n\t * Sortable value, order in stylecache list\r\n\t * @returns {boolean}\r\n\t */\r\n\tget order() {\r\n\t\treturn this.getAttribute('order');\r\n\t}\r\n\r\n\tset order(val = '') {\r\n\t\treturn this.setAttribute('order', val);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to true, theme switcher will ignore this style (considered mandatory)\r\n\t * @returns {boolean} Default to false\r\n\t */\r\n\tget notheme() {\r\n\t\treturn this.getAttribute('notheme') === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Disable this style \r\n\t * @returns {boolean}\r\n\t */\r\n\tget disabled() {\r\n\t\treturn this.getAttribute('disabled');\r\n\t}\r\n\r\n\tset disabled(val = '') {\r\n\t\treturn this.setAttribute('disabled', '' + val == 'true');\r\n\t}\r\n\r\n\t/**\r\n\t * Check if style is disabled\r\n\t * @returns {boolean}\r\n\t */\r\n\tget isDisabled() {\r\n\t\treturn this.disabled === 'true';\r\n\t}\r\n\r\n\t/**\r\n\t * Theme name used for theme switcher\r\n\t * @returns {string}\r\n\t */\r\n\tget theme() {\r\n\t\treturn this.getAttribute('theme') || 'default';\r\n\t}\r\n\r\n\t/**\r\n\t * Extract currently used style theme\r\n\t * @returns {string}\r\n\t */\r\n\tstatic get activeTheme() {\r\n\t\tconst sp = new URLSearchParams(location.hash.slice(1));\r\n\t\treturn sp.get('theme') || 'default';\r\n\t}\r\n\r\n\tstatic #onTheme(e) {\r\n\t\tconst theme = GSCSS.activeTheme;\r\n\t\tArray.from(document.querySelectorAll('gs-css'))\r\n\t\t\t.filter(el => el.notheme == false)\r\n\t\t\t.forEach(el => el.disabled = el.theme !== theme);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.freeze(GSCSS);\r\n\t\tcustomElements.define('gs-css', GSCSS);\r\n\t\twindow.addEventListener('hashchange', GSCSS.#onTheme, false);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2020  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLinkExt class\r\n * @module head/GSLinkExt\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Script element to load src based on environment\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSScript extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('script');\r\n\r\n\t\tel.src = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-script', GSScript);\r\n\t\tObject.freeze(GSScript);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLink class\r\n * @module head/GSLink\r\n */\r\n\r\nimport GSBase from \"./GSBase.mjs\";\r\n\r\n/**\r\n * Link element to load css src based on environment\r\n * To support custom components shared styling use shadow=true attribute\r\n * @class\r\n * @extends head/GSBase\r\n */\r\nexport default class GSLink extends GSBase {\r\n\r\n\t/**\r\n\t * Called every time node is added to parent node\r\n\t */\r\n\trender() {\r\n\r\n\t\tconst me = this;\r\n\t\tconst el = document.createElement('link');\r\n\r\n\t\tel.href = me.url;\r\n\t\tme.getAttributeNames().filter(v => v !== 'url').forEach(v => el.setAttribute(v, me.getAttribute(v)));\r\n\r\n\t\tif (me.shadow && el.rel === 'stylesheet') el.setAttribute('is', 'gs-ext-link');\r\n\r\n\t\treturn el;\r\n\r\n\t}\r\n\r\n\tget rel() {\r\n\t\tconst me = this;\r\n\t\tlet rel = me.getAttribute('rel') || '';\r\n\t\tif (!rel) {\r\n\t\t\tif (me.url.includes('.css')) {\r\n\t\t\t\trel = 'stylesheet';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rel;\r\n\t}\r\n\r\n\tget shadow() {\r\n\t\treturn this.getAttribute('shadow') === 'true';\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-link', GSLink);\r\n\t\tObject.freeze(GSLink);\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCacheTemplate class\r\n * @module templating/GSCacheTemplate\r\n */\r\n\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSFunction from \"../base/GSFunction.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\n\r\n/**\r\n * Template cache to store loaded and preprocessed templates for reuse\r\n * @class\r\n */\r\nexport default class GSCacheTemplate {\r\n\r\n\tstatic _store = new Map();\r\n\r\n\t/**\r\n\t * Store pre-processed template into a cache under given name. \r\n\t * Name is usually a path to a template.\r\n\t * @param {string} name Name of a template\r\n\t * @param {HTMLTemplateElement} template Preprocessed template\r\n\t */\r\n\tstatic store(name, template) {\r\n\t\tthis._store.set(name, template);\r\n\t}\r\n\r\n\t/**\r\n\t * Remove template from cache\r\n\t * @param {string} name Name of a template\r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic remove(name) {\r\n\t\treturn this._store.delete(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Get template from cache by it's name.\r\n\t * @param {*} name Name of a template\r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic load(name) {\r\n\t\treturn this._store.get(name);\r\n\t}\r\n\r\n\t/**\r\n\t * Helper function to retrieve alreaady existing template by name,\r\n\t *  or inject a new one if does not exists already and return template instance.\r\n\t * @param {string} name \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic getOrCreate(name, template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tlet el = me.load(name);\r\n\t\tif (el) return el;\r\n\t\tel = me.create(template);\r\n\t\tme.store(name, el);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Create template element from loaded template source\r\n\t * \r\n\t * @param {string} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic create(template) {\r\n\t\tconst el = document.createElement('template');\r\n\t\tGSDOM.setHTML(el, template);\r\n\t\treturn el;\r\n\t}\r\n\r\n\t/**\r\n\t * Clone data from template element\r\n\t * \r\n\t * @param {HTMLTemplateElement} template \r\n\t * @returns {HTMLTemplateElement}\r\n\t */\r\n\tstatic clone(template) {\r\n\t\treturn GSDOM.isTemplateElement(template) ? template.content.cloneNode(true) : null;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from function\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isFunctionTemplate(tpl) {\r\n\t\tconst fn = GSFunction.parseFunction(tpl);\r\n\t\treturn GSFunction.isFunction(fn) ? fn : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from html code\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isHTMLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\t//return (val.startsWith('<') && val.endsWith('>')) ? tpl : false;\r\n\t\treturn /^<(.*)>$/s.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Check if template is retrieved from URL\r\n\t * \r\n\t * @param {string} tpl \r\n\t * @returns {boolean}\r\n\t */\r\n\tstatic isURLTemplate(tpl) {\r\n\t\tconst val = tpl ? tpl.trim() : '';\r\n\t\treturn /^(https?:\\/\\/|.{0,2}\\/{1,2})/i.test(val) ? tpl : false;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize loaded template\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic initTemplate(cached = false, name = '', template) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tif (cached) return me.getOrCreate(name, template);\r\n\t\treturn me.create(template);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given HTML text\r\n\t * \r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {HTMLTemplateElement} Template instance\r\n\t */\r\n\tstatic loadHTMLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst o = me.isHTMLTemplate(tpl);\r\n\t\tif (!o) return o;\r\n\t\treturn me.initTemplate(cached, name, o);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given URL\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadURLTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\t//const o = me.isURLTemplate(tpl);\r\n\t\t//if (!o) return o;\r\n\t\tconst o = tpl;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = await GSLoader.loadTemplate(o);\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve template from given function\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadFunctionTemplate(cached = false, name = '', tpl) {\r\n\t\tconst me = GSCacheTemplate;\r\n\t\tconst fn = me.isFunctionTemplate(tpl);\r\n\t\tif (!fn) return fn;\r\n\t\ttry {\r\n\t\t\tlet template = null;\r\n\t\t\tif (me.cached) template = me.load(o);\r\n\t\t\tif (template) return template;\r\n\t\t\ttemplate = GSFunction.isFunctionAsync(fn) ? await fn() : fn();\r\n\t\t\treturn me.initTemplate(cached, name, template);\r\n\t\t} catch (e) {\r\n\t\t\tGSLog.error(me, e);\r\n\t\t}\r\n\t\treturn fn;\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve and cache html template for element\r\n\t * \r\n\t * @async\r\n\t * @param {boolean} cached Set to true to auto cache if template does not exist\r\n\t * @param {string} name Template name\r\n\t * @param {string} template Template source\r\n\t * @returns {Promise<HTMLTemplateElement>} Template instance\r\n\t */\r\n\tstatic async loadTemplate(cached = false, name = '', tpl) {\r\n\r\n\t\tif (!name) return false;\r\n\t\tif (!tpl) return false;\r\n\r\n\t\tconst me = GSCacheTemplate;\r\n\r\n\t\t// try to load override template (by GSElement tag name)\r\n\t\tlet template = false;\r\n\r\n\t\tif (tpl.indexOf('#') == 0) {\r\n\t\t\t//template = me.clone(document.getElementById(tpl.slice(1)));\r\n\t\t\ttemplate = document.getElementById(tpl.slice(1));\r\n\t\t\t//template = template ? template.innerHTML : null;\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = me.loadHTMLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadFunctionTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\tif (!template) {\r\n\t\t\ttemplate = await me.loadURLTemplate(cached, name, tpl);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022  Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTemplate class\r\n * @module templating/GSTemplate\r\n */\r\n\r\nimport GSCacheTemplate from \"./GSCacheTemplate.mjs\";\r\nimport GSCacheStyles from \"../head/GSCacheStyles.mjs\";\r\nimport GSDOMObserver from \"../base/GSDOMObserver.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\"\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSLog from \"../base/GSLog.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSEnvironment from \"../base/GSEnvironment.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dynamic template loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nclass GSTemplate extends HTMLElement {\r\n\r\n\t#connected = false;\r\n\t#content = null;\r\n\t#observer = null;\r\n\r\n\t/**\r\n\t* List of observer element attributes\r\n\t*/\r\n\tstatic get observedAttributes() {\r\n\t\treturn ['href'];\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tget id() {\r\n\t\treturn GSAttr.get(this, 'id');\r\n\t}\r\n\r\n\tset id(val) {\r\n\t\tGSAttr.set(this, 'id', val);\r\n\t}\r\n\r\n\tget href() {\r\n\t\treturn GSAttr.get(this, 'href');\r\n\t}\r\n\r\n\tset href(val) {\r\n\t\tGSAttr.set(this, 'href', val);\r\n\t}\r\n\r\n\tget isFlat() {\r\n\t\treturn GSUtil.FLAT || GSAttr.getAsBool(this, 'flat', false);\r\n\t}\r\n\r\n\tget self() {\r\n\t\treturn this.#content || this.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Envrionment where to render component\r\n\t *  - blank - always render\r\n\t *  - mobile - only on mobile devices\r\n\t *  - tablet - only on tablet devices\r\n\t *  - desktop - only on desktop devices\r\n\t */\r\n\tget environment() {\r\n\t\treturn GSAttr.get(this, 'environment', '');\r\n\t}\r\n\r\n\tset environment(val) {\r\n\t\tGSAttr.set(this, 'environment', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser OS where to render component\r\n\t */\r\n\tget os() {\r\n\t\treturn GSAttr.get(this, 'os', '');\r\n\t}\r\n\r\n\tset os(val) {\r\n\t\tGSAttr.set(this, 'os', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Browser type, if not matched do not render\r\n\t * chrome, edge, ie, firefox, ...\r\n\t */\r\n\tget browser() {\r\n\t\treturn GSAttr.get(this, 'browser', '');\r\n\t}\r\n\r\n\tset browser(val) {\r\n\t\tGSAttr.set(this, 'browser', val);\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element attribute changed\r\n\t */\r\n\tattributeChangedCallback(name, oldValue, newValue) {\r\n\t\tconst me = this;\r\n\t\tif (me.#connected && name === 'href') me.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element added to the DOM tree\r\n\t */\r\n\tconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tconst pe = me.parentElement;\r\n\t\tif (pe && pe.tagName == 'GS-ITEM') return;\r\n\t\tif (!(me.isValidEnvironment && me.isValidBrowser && me.isValidOS)) {\r\n\t\t\treturn me.remove();\r\n\t\t}\r\n\t\tif (!me.id) me.id = GSID.id;\r\n\t\tme.#connected = true;\r\n\t\tGSComponents.store(me);\r\n\t\tme.loadTemplate();\r\n\t}\r\n\r\n\t/**\r\n\t * Called when element removed from the DOM tree\r\n\t */\r\n\tdisconnectedCallback() {\r\n\t\tconst me = this;\r\n\t\tme.#connected = false;\r\n\t\tme.#removeFlat();\r\n\t\tif (me.#observer) me.#observer.disconnect();\r\n\t\tGSComponents.remove(me);\r\n\t\tGSCacheTemplate.remove(me.id);\r\n\t}\r\n\r\n\t#removeFlat() {\r\n\t\tconst me = this;\r\n\t\tif (me.#content) {\r\n\t\t\tme.#content.remove();\r\n\t\t\tme.#content = null;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if environment matched\r\n\t * dektop, mobile, tablet, android, linux, winwdows, macos\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidEnvironment() {\r\n\t\treturn GSEnvironment.isValidEnvironment(this.environment);\r\n\t}\r\n\r\n\t/**\r\n\t * Check if valid OS to render\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidOS() {\r\n\t\treturn GSEnvironment.isDevice(this.os);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if browser matched, used to determine rendering/removal\r\n\t * @return {boolean}\r\n\t */\r\n\tget isValidBrowser() {\r\n\t\treturn GSEnvironment.isValidBrowser(this.browser);\r\n\t}\r\n\r\n\t/**\r\n\t * Retrieve or create element ShadowRoot \r\n\t * @return {ShadowRoot}\r\n\t */\r\n\tget shadow() {\r\n\t\tconst me = this;\r\n\t\tif (!me.shadowRoot && me.#connected) {\r\n\t\t\tme.attachShadow({ mode: 'open' });\r\n\t\t\tme.#observer = GSDOMObserver.create(me.shadowRoot);\r\n\t\t}\r\n\t\treturn me.shadowRoot;\r\n\t}\r\n\r\n\t/**\r\n\t * Load and instantiate HTML template that injects into element\r\n\t * \r\n\t * @async\r\n\t * @returns {Promise<HTMLTemplateElement>}\r\n\t */\r\n\tasync loadTemplate() {\r\n\t\tconst me = this;\r\n\t\tconst tpl = await GSCacheTemplate.loadTemplate(true, me.id, me.href);\r\n\t\tif (!tpl) {\r\n\t\t\tGSLog.error(this, `Template not found for: Id=${me.id}; href=${me.href}`);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (me.parentElement instanceof HTMLHeadElement) {\r\n\t\t\tGSEvent.sendSuspended(document, 'gs-template', { id: me.id, href: me.href });\r\n\t\t\treturn tpl;\r\n\t\t}\r\n\r\n\t\tawait GSEvent.waitAnimationFrame(async () => {\r\n\t\t\tif (!me.#connected) return;\r\n\t\t\tif (me.isFlat) {\r\n\t\t\t\tconst body = GSDOM.parseWrapped(me, tpl.innerHTML);\r\n\t\t\t\tme.#content = me.insertAdjacentElement('afterend', body);\r\n\t\t\t} else {\r\n\t\t\t\tme.shadow.adoptedStyleSheets = GSCacheStyles.styles;\r\n\t\t\t\tGSDOM.setHTML(me.shadow, tpl.innerHTML);\r\n\t\t\t}\r\n\t\t\tGSEvent.sendSuspended(me, 'templateready', { id: me.id, href: me.href }, true, true);\r\n\t\t});\r\n\t\treturn tpl;\r\n\t}\r\n\r\n\t/**\r\n\t * Wait for template to be loded and parsed\r\n\t * @param {string} href Tempalte url\r\n\t * @returns {boolean} Loading and parsing status\r\n\t */\r\n\twaitWhenReady(href = '') {\r\n\t\tconst me = this;\r\n\t\tif (href) me.href = href;\r\n\t\treturn me.waitEvent('templateready');\r\n\t}\r\n\r\n\t/**\r\n\t* Wait for event to happen\r\n\t* @param {string} name \r\n\t* @returns  {boolean}\r\n\t*/\r\n\twaitEvent(name = '') {\r\n\t\tconst me = this;\r\n\t\treturn new Promise((r, e) => {\r\n\t\t\tif (!name) return e('Event undefined!');\r\n\t\t\tGSEvent.once(me, null, name, (e) => r(e.detail), { once: true });\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Find first element matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @returns {HTMLElement}\r\n\t */\r\n\tquery(name = '') {\r\n\t\treturn GSDOM.query(this, name);\r\n\t}\r\n\r\n\t/**\r\n\t * Find all elements matched by selector\r\n\t * @param {string} name CSS selector query\r\n\t * @param {boolean} asArray  Return result wrapped as array\r\n\t * @returns {Aray<HTMLElement>} List of HTMLElement matched\r\n\t */\r\n\tqueryAll(name = '', asArray = false) {\r\n\t\treturn GSDOM.queryAll(this, name);\r\n\t}\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-template', GSTemplate);\r\n\t\tObject.seal(GSTemplate);\r\n\t}\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to datalist element\r\n * \r\n * <datalist is=\"gs-ext-datalist\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLDataListElement}\r\n */\r\nexport default class GSDataListExt extends HTMLDataListElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-datalist', GSDataListExt, { extends: 'datalist' });\r\n        Object.seal(GSDataListExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push(o.text);\r\n        seg.push('>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataListExt class\r\n * @module components/ext/GSDataListExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSLoader from \"../../base/GSLoader.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add JSON loader to select element\r\n * <select is=\"gs-ext-select\" data=\"data.json\">\r\n * \r\n * [{text:'', value:'' selected:true}]\r\n * \r\n * @class\r\n * @extends {HTMLSelectElement}\r\n */\r\nexport default class GSComboExt extends HTMLSelectElement {\r\n\r\n    static {\r\n        customElements.define('gs-ext-select', GSComboExt, { extends: 'select' });\r\n        Object.seal(GSComboExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['data'];\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'data') this.load(newValue);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        GSComponents.remove(this);\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    async load(url = '') {\r\n        if (!url) return;\r\n        const data = await GSLoader.loadSafe(url, 'GET', null, true);\r\n        this.apply(data);\r\n    }\r\n\r\n    apply(data) {\r\n\r\n        if (!Array.isArray(data)) return false;\r\n\r\n        const me = this;\r\n\r\n        requestAnimationFrame(() => {\r\n\r\n            const list = [];\r\n            data.forEach(o => {\r\n                list.push(me.#objToHTML(o));\r\n            });\r\n\r\n            GSDOM.setHTML(me, list.join('\\n'));\r\n        });\r\n        return true;\r\n    }\r\n\r\n    #objToHTML(o) {\r\n        const seg = ['<option'];\r\n\r\n        Object.entries(o).forEach(it => {\r\n            const key = it[0];\r\n            const val = it[1];\r\n            if ('text' === key) return;\r\n            if ('selected' === key) return seg.push(key);\r\n            seg.push(`${key}=\"${val}\"`);\r\n        });\r\n\r\n        seg.push('>')\r\n        seg.push(o.text);\r\n        seg.push('</option>')\r\n\r\n        return seg.join(' ');\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFormExt class\r\n * @module components/ext/GSFormExt\r\n */\r\n\r\n import GSID from \"../../base/GSID.mjs\";\r\n import GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\n import GSEvent from \"../../base/GSEvent.mjs\";\r\n import GSDOM from \"../../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * Add custom form processing to support forms in modal dialogs\r\n  * <form is=\"gs-ext-form\">\r\n  * @class\r\n  * @extends {HTMLFormElement}\r\n  */\r\n export default class GSFormExt extends HTMLFormElement {\r\n \r\n     static #actions = ['ok', 'reset', 'submit'];\r\n \r\n     static {\r\n         customElements.define('gs-ext-form', GSFormExt, { extends: 'form' });\r\n         Object.seal(GSFormExt);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorResult);\r\n         GSDOMObserver.registerFilter(GSFormExt.#onMonitorFilter, GSFormExt.#onMonitorRemove, true);\r\n     }\r\n \r\n     static #onMonitorFilter(el) {\r\n         return el instanceof HTMLFormElement && (el instanceof GSFormExt) === false;\r\n     }\r\n \r\n     static #onMonitorResult(el) {\r\n         GSFormExt.#attachEvents(el);\r\n     }\r\n \r\n     static #onMonitorRemove(el) {\r\n         GSEvent.deattachListeners(el);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n     }\r\n \r\n     static get observedAttributes() {\r\n         return ['mask'];\r\n     }\r\n \r\n     connectedCallback() {\r\n         const me = this;\r\n         if (!me.id) me.setAttribute('id', GSID.id);\r\n         GSFormExt.#attachEvents(me);\r\n         //GSComponents.store(me);\r\n     }\r\n \r\n     disconnectedCallback() {\r\n         const me = this;\r\n         //GSComponents.remove(me);\r\n         GSEvent.deattachListeners(me);\r\n     }\r\n \r\n     static #attachEvents(me) {\r\n         GSEvent.attach(me, me, 'submit', GSFormExt.#onSubmit.bind(me));\r\n         GSEvent.attach(me, me, 'action', GSFormExt.#onAction.bind(me));\r\n         GSEvent.attach(me, me, 'click', GSFormExt.#onAction.bind(me));\r\n     }\r\n \r\n     /**\r\n      * \r\n      * @param {*} e \r\n      * @param {*} own \r\n      */\r\n     static #onAction(e) {\r\n \r\n         const el = e.composedPath().shift();\r\n         const action = el?.dataset.action || e.detail.action || el?.type;\r\n         if (!GSFormExt.#actions.includes(action)) return;\r\n \r\n         GSEvent.prevent(e);\r\n         const me = this;\r\n \r\n         switch (action) {\r\n             case 'reset':\r\n                 me.reset();\r\n                 break;\r\n             case 'ok':\r\n             case 'submit':\r\n                 GSFormExt.#onSubmit(e, me);\r\n         }\r\n \r\n     }\r\n \r\n     /**\r\n      * Trigger form submit only if form data is valid\r\n      * @param {*} e \r\n      */\r\n     static #onSubmit(e, own) {\r\n         GSEvent.prevent(e);\r\n         const me = own || this;\r\n         const isValid = me.checkValidity() && me.isValid;\r\n         if (!isValid) return me.reportValidity();\r\n         const obj = GSDOM.toObject(me);\r\n         const type = isValid ? 'submit' : 'invalid';\r\n         const data = { type: type, data: obj, source: e, valid: isValid };\r\n         GSEvent.send(me, 'form', data, true, true);\r\n     }\r\n \r\n     get isValid() {\r\n         return GSDOM.queryAll(this,'input,select,textarea')\r\n                     .map(el => el.checkValidity())\r\n                     .filter(v => v === false).length === 0;\r\n     }\r\n \r\n     get buttonOK() {\r\n         return GSFormExt.#buttonOK(this);\r\n     }\r\n \r\n     get buttonCancel() {\r\n         return GSFormExt.#buttonCancel(this);\r\n     }\r\n \r\n     get buttonReset() {\r\n         return GSFormExt.#buttonReset(this);\r\n     }\r\n \r\n     static #buttonOK(own) {\r\n         return GSDOM.query(own, 'button[type=\"submit\"]');\r\n     }\r\n \r\n     static #buttonCancel(own) {\r\n         return GSFormExt.#find(own, 'cancel');\r\n     }\r\n \r\n     static #buttonReset(own) {\r\n         return GSFormExt.#find(own, 'reset');\r\n     }\r\n \r\n     static #find(own, name = '') {\r\n         return GSDOM.query(own, `button[data-action=\"${name}\"]`);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSInputExt class\r\n * @module components/ext/GSInputExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add custom field processing\r\n * <input is=\"gs-ext-input\">\r\n * @class\r\n * @extends {HTMLInputElement}\r\n */\r\nexport default class GSInputExt extends HTMLInputElement {\r\n\r\n    static #special = \".^$*+-?()[]{}\\|—/\";\r\n    static #maskType = {\r\n        y: '[0-9]', m: '[0-9]', d: '[0-9]',\r\n        Y: '[0-9]', M: '[0-9]', D: '[0-9]}',\r\n        9: '[0-9]', '#': '[0-9a-fA-F]',\r\n        x: '[a-z]', X: '[A-Z]',\r\n        s: '[0-9a-zA-Z]', S: '[0-9a-zA-Z]'\r\n    };\r\n\r\n    #masks = [];\r\n\r\n    static {\r\n        customElements.define('gs-ext-input', GSInputExt, { extends: 'input' });\r\n        Object.seal(GSInputExt);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['mask'];\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        if (me.placeholder.length === 0) {\r\n            if (me.mask) me.placeholder = me.mask;\r\n        }\r\n        me.#toPattern();\r\n        me.#attachEvents();\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        //console.log(`name:${name}, oldValue:${oldValue}, newValue:${newValue}`);\r\n        if (name === 'mask') this.#toPattern();\r\n    }\r\n\r\n    get owner() {\r\n        const own = GSComponents.getOwner(this);\r\n        return GSDOM.unwrap(own);\r\n    }\r\n\r\n    get list() {\r\n        const me = this;\r\n        const list = GSAttr.get(me, 'list');\r\n        return GSDOM.getByID(me.owner, list);\r\n    }\r\n\r\n    get filter() {\r\n        const me = this;\r\n        const filter = GSAttr.get(me, 'data-filter');\r\n        return GSDOM.getByID(me.owner, filter);\r\n    }\r\n\r\n    get mask() {\r\n        return GSAttr.get(this, 'mask', '');\r\n    }\r\n\r\n    get strict() {\r\n        return GSAttr.get(this, 'strict', '');\r\n    }\r\n\r\n    #toPattern() {\r\n        const me = this;\r\n        if (me.mask.length === 0) return;\r\n        const chars = me.mask.split('');\r\n        const masks = [];\r\n\r\n        me.#masks = [];\r\n\r\n        chars.forEach(v => {\r\n            if (GSInputExt.#special.includes(v)) {\r\n                me.#masks.push(v);\r\n                masks.push(`\\${v}`);\r\n                return;\r\n            }\r\n\r\n            const m = GSInputExt.#maskType[v];\r\n            if (m) {\r\n                me.#masks.push(new RegExp(m, 'g'));\r\n                masks.push(m);\r\n                return;\r\n            }\r\n        });\r\n\r\n        me.pattern = masks.join('');\r\n    }\r\n\r\n    #attachEvents() {\r\n        const me = this;\r\n        GSEvent.attach(me, me, 'input', me.#onInput.bind(me));\r\n        GSEvent.attach(me, me, 'blur', me.#onBlur.bind(me));\r\n        requestAnimationFrame(() => {\r\n            const list = me.list;\r\n            if (!list) return;\r\n            GSEvent.attach(me, me, 'change', me.#onDataChange.bind(me));\r\n            GSEvent.attach(me, me.filter, 'change', me.#onMonitor.bind(me));\r\n        });\r\n    }\r\n\r\n    #togleEl(el, key = '', value = '') {\r\n        const data = GSAttr.get(el, `data-${key}`, '').split(/[,;;]/);\r\n        const isMatch = value.length > 0 && data.includes(value);\r\n        isMatch ? GSDOM.show(el) : GSDOM.hide(el);\r\n        GSDOM.queryAll(el, 'input,textarea,select').forEach(el => GSAttr.set(el, 'data-ignore', isMatch ? null : true));\r\n    }\r\n\r\n    isInList() {\r\n        const me = this;\r\n        const list = me.list;\r\n        if (!list) return true;\r\n        if (!me.strict) return true;\r\n        if (!list.querySelector('option')) return true;\r\n        const opt = list.querySelector(`option[value=\"${me.value}\"]`);\r\n        return opt != null;\r\n    }\r\n\r\n    /**\r\n     * Monitor data list change to filter other elements visibilty\r\n     * @param {*} e \r\n     */\r\n    #onDataChange(e) {\r\n        const me = this;\r\n        const own = me.owner;\r\n        let opt = GSDOM.query(me.list, `option[value=\"${me.value}\"]`);\r\n        let clean = false;\r\n        if (!opt) {\r\n            opt = me.list.querySelector('option');\r\n            clean = true;\r\n        }\r\n\r\n        const obj = opt.dataset;\r\n\r\n        Object.entries(obj).forEach(p => {\r\n            const val = clean ? '' : p[1];\r\n            const key = p[0];\r\n            me.setAttribute(`data-${key}`, p[1]);\r\n            if (key === 'id' || key === 'group') return;\r\n\r\n            const filter = `[data-${key}]:not([data-${key}=\"\"]`;\r\n            const els = Array.from(GSDOM.queryAll(own, filter));\r\n            els.filter(el => el.tagName !== 'OPTION')\r\n                .filter(el => GSAttr.get(el, 'list', null) == null).forEach(el => me.#togleEl(el, key, val))\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Monitor parent field change for list filter \r\n     * @param {*} e \r\n     */\r\n    #onMonitor(e) {\r\n        const me = this;\r\n        const list = me.list;\r\n        me.value = '';\r\n        const dataGroup = GSAttr.get(me.filter, 'data-group');\r\n        GSDOM.queryAll(list, 'option').forEach(el => GSAttr.set(el, 'disabled', true));\r\n        const filter = dataGroup ? `option[data-group=\"${dataGroup}\"]` : `option[data-id=\"${e.target.value}\"]`;\r\n        GSDOM.queryAll(list, filter).forEach(el => GSAttr.set(el, 'disabled'));\r\n    }\r\n\r\n    #onBlur(e) {\r\n        const me = this;\r\n        me.reportValidity();\r\n        if (!me.isInList()) GSEvent.send(me, 'strict', { ok: false, source: e });\r\n    }\r\n\r\n    #onInput(e) {\r\n        const me = this;\r\n        if (me.type === 'number') return me.#onNumberInput(e);\r\n        if (me.mask) return me.#onMaskInput(e);\r\n        if (me.type === 'text') return me.#onTextInput(e);\r\n    }\r\n\r\n    #onNumberInput(e) {\r\n        const me = this;\r\n        if (me.value.length > me.maxLength) {\r\n            me.value = me.value.substring(0, me.maxLength);\r\n        }\r\n    }\r\n\r\n    #onTextInput(e) {\r\n        const me = this;\r\n\r\n        if (!me.checkValidity()) {\r\n            me.reportValidity();\r\n            // if (me.pattern) me.value = me.#regexExtract(me.pattern, me.value);\r\n        }\r\n    }\r\n\r\n    #onMaskInput(e) {\r\n        const me = this;\r\n        const chars = me.value.split('').slice(0, me.#masks.length);\r\n\r\n        chars.forEach((v, i) => {\r\n            const vld = me.#masks[i];\r\n            if (typeof vld === 'string') return chars[i] = vld;\r\n            if (vld instanceof RegExp) {\r\n                vld.lastIndex = 0;\r\n                if (!vld.test(v)) chars[i] = '';\r\n                return;\r\n            }\r\n            chars[i] = '';\r\n        });\r\n        me.value = chars.join('');\r\n\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNavLinkExt class\r\n * @module components/ext/GSNavLinkExt\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Add Bootstrap item click / selection processsing.\r\n * For all A tags set as gs-ext-navlink type this class will toggle \"active\" class\r\n * <a is=\"gs-ext-navlink\">\r\n * @class\r\n * @extends {HTMLAnchorElement}\r\n */\r\nexport default class GSNavLinkExt extends HTMLAnchorElement {\r\n\r\n    static CSS_TAB_ACTIVE = \"text-bg-primary\";\r\n    static CSS_TAB_INACTIVE = \"text-bg-secondary\";\r\n\r\n    static {\r\n        customElements.define('gs-ext-navlink', GSNavLinkExt, { extends: 'a' });\r\n        Object.seal(GSNavLinkExt);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSNavLinkExt.#onMonitorFilter, GSNavLinkExt.#onMonitorRemove, true);\r\n    }\r\n\r\n    static #onMonitorFilter(el) {\r\n        let isValid = el instanceof HTMLElement && GSAttr.get(el, 'is') !== 'gs-ext-navlink';\r\n        if (isValid) {\r\n            const cl = el.classList;\r\n            isValid = !el.hasAttribute('ignore') && (cl.contains('nav-link') || cl.contains('list-group-item'));\r\n\r\n        }\r\n        return isValid;\r\n    }\r\n\r\n    static #onMonitorResult(el) {\r\n        GSNavLinkExt.#attachEvents(el);\r\n    }\r\n\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSNavLinkExt.#attachEvents(me);\r\n        //GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        //GSComponents.remove(this);\r\n        GSEvent.deattachListeners(this);\r\n    }\r\n\r\n    static #attachEvents(own) {\r\n        GSEvent.attach(own, own, 'click', GSNavLinkExt.#onClick.bind(own));\r\n    }\r\n\r\n    static #onClick(e, own) {\r\n        const me = own || this;\r\n        const accept = me.dataset.selectable === 'false';\r\n        if (accept) return GSNavLinkExt.#trigger(e, me);\r\n        const nav = GSNavLinkExt.#nav(me);\r\n        const list = GSNavLinkExt.#list(me);\r\n        const panel = GSNavLinkExt.#panel(me);\r\n        const panelItem = GSNavLinkExt.#panelItem(me);\r\n        requestAnimationFrame(() => {\r\n            if (list) list.querySelectorAll('.list-group-item').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (nav) nav.querySelectorAll('.nav-link').forEach(el => GSDOM.toggleClass(el, false, 'active'));\r\n            if (panel) panel.querySelectorAll('.tab-pane').forEach(el => GSDOM.toggleClass(el, false, 'active show'));\r\n            GSDOM.toggleClass(me, true, 'active');\r\n            GSDOM.toggleClass(panelItem, true, 'active show');\r\n            GSNavLinkExt.#trigger(e, me);\r\n        });\r\n\r\n    }\r\n\r\n    static #trigger(e, el) {\r\n        const own = GSNavLinkExt.#owner(el);\r\n        const obj = { type: 'active', data: el.dataset, source: e };\r\n        GSEvent.send(own, 'action', obj, true, true, true);\r\n    }\r\n\r\n    static #list(own) {\r\n        return own.closest('.list-group');\r\n    }\r\n\r\n    static #nav(own) {\r\n        return own.closest('.nav');\r\n    }\r\n\r\n    static #panel(own) {\r\n        const item = GSNavLinkExt.#panelItem(own);\r\n        return item ? item.closest('.tab-content') : null;\r\n    }\r\n\r\n    static #panelItem(own) {\r\n        const nav = GSNavLinkExt.#nav(own);\r\n        const tgtID = own?.dataset.bsTarget;\r\n        return tgtID ? GSNavLinkExt.#owner(nav).querySelector(tgtID) : null;\r\n    }\r\n\r\n    static #owner(own) {\r\n        const parent = GSComponents.getOwner(own);\r\n        return GSDOM.unwrap(parent);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDataAttr class\r\n * @module components/ext/GSDataAttr\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSDOMObserver from '../../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSFunction from \"../../base/GSFunction.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\n\r\n/**\r\n * Process Bootstrap data-bs-* attributes\r\n * toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\" \r\n * dismiss=\"offcanvas|modal|alert|popup\"\r\n * \r\n * TODO : trigger events to document.body\r\n * @class\r\n */\r\nexport default class GSDataAttr {\r\n\r\n    static #toggleValues = \"offcanvas|collapse|dropdown|button|tab|pill|popover|modal|popup\"; // tooltip|\r\n    static #dismissValues = \"offcanvas|modal|alert|popup\";\r\n\r\n    static {\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorResult);\r\n        GSDOMObserver.registerFilter(GSDataAttr.#onMonitorFilter, GSDataAttr.#onMonitorRemove, true);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (GSDOM.isGSElement(el)) return false;\r\n        if (!GSDOM.isHTMLElement(el)) return false;\r\n        if (GSDataAttr.#isCollapsible(el)) el.classList.add('collapsible');\r\n        return el.dataset.bsDismiss\r\n            || el.dataset.bsToggle\r\n            || el.dataset.inject;\r\n    }\r\n\r\n    /**\r\n     * Function to attach to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        GSEvent.attach(el, el, 'click', GSDataAttr.#onClick.bind(el));\r\n    }\r\n\r\n    /**\r\n     * Callback to element removal observer\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorRemove(el) {\r\n        GSEvent.deattachListeners(el);\r\n    }\r\n\r\n    /**\r\n     * Function to find data-bs- attributes walking up the treee\r\n     * @param {HTMLElement} el \r\n     * @returns {HTMLElement}\r\n     */\r\n    static #toClicker(el) {\r\n        if (!el) return;\r\n        if (el.dataset?.bsToggle) return el;\r\n        if (el.dataset?.bsDismiss) return el;\r\n        if (el.dataset?.inject) return el;\r\n        return GSDataAttr.#toClicker(el.parentElement);\r\n    }\r\n\r\n    /**\r\n     * Callback to element clic kevennt\r\n     * @param {Event} e\r\n     */\r\n    static #onClick(e) {\r\n        const el = GSDataAttr.#toClicker(e.target);\r\n        const inject = el?.dataset?.inject;\r\n        const dismiss = el?.dataset?.bsDismiss;\r\n        const target = GSDataAttr.getTarget(el);\r\n        const toggle = el?.dataset?.bsToggle;\r\n        GSDataAttr.#onToggle(el, target, toggle);\r\n        GSDataAttr.#onDismiss(el, target, dismiss);\r\n        GSDataAttr.#onInject(el, target, inject);\r\n    }\r\n\r\n    /**\r\n     * Search for target to toggle or dismiss\r\n     * @param {HTMLHtmlElement} el \r\n     * @param {string} target \r\n     * @param {string} type \r\n     * @return {Object} List of GSComponentes and html elements matched  {comps : [], list []}\r\n     */\r\n    static #findTarget(el, target, type) {\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                break;\r\n            case \"button\":\r\n                if (!target) return { list: [el], comps: [] };\r\n                break;\r\n            case \"collapse\":\r\n                break;\r\n            case \"dropdown\":\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"poup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                return { list: [], comps: [] };\r\n                break;\r\n        }\r\n\r\n        let gs = GSDOM.queryAll(document.documentElement, `gs-${type}`);\r\n        const css = target ? target : `.${type}`;\r\n        if (target) {\r\n            gs = gs.filter(el => el.matches(css));\r\n        } else {\r\n            el = el.closest(css);\r\n            if (el) {\r\n                const comps = gs.filter(c => c.self.firstElementChild === el);\r\n                return { list: comps.length === 0 ? [el] : [], comps: comps };\r\n            }\r\n        }\r\n\r\n        const allComps = GSDOM.queryAll(document.documentElement, css);\r\n        const allRoot = Array.from(document.querySelectorAll(css));\r\n\r\n        // all not descendants of component\r\n        const all = allComps.concat(allRoot).filter(el => gs.indexOf(el) < 0).filter(el => gs.filter(c => c.self.firstElementChild === el).length === 0);\r\n\r\n        return { list: Array.from(new Set(all)), comps: gs };\r\n    }\r\n\r\n    static #getByType(list, type) {\r\n        return list.filter(el => GSDataAttr.#isType(el, type));\r\n    }\r\n\r\n    static #getHidden(list) {\r\n        return list.filter(el => GSDataAttr.#isHidden(el));\r\n    }\r\n\r\n    static #getVisible(list, hidden) {\r\n        return list.filter(el => !hidden.includes(el));\r\n    }\r\n\r\n    static #isType(el, type) {\r\n        return type.split(' ').filter(v => v.trim()).map(v => v === 'button' ? 'btn' : v).filter(t => el.classList.contains(t)).length > 0;\r\n    }\r\n\r\n    static #isHidden(el) {\r\n        return (el.classList.contains('hide') || el.classList.contains('fade') || el.classList.contains('collapse')) && !el.classList.contains('show');\r\n    }\r\n\r\n    static #isCollapsible(el) {\r\n        return el.classList.contains('collapse') && !el.classList.contains('accordion-collapse');\r\n    }\r\n\r\n    static #faded(el) {\r\n        return el.classList.contains('fade');\r\n    }\r\n\r\n    static #switch(el, pos, neg) {\r\n        GSDOM.toggleClass(el, true, pos);\r\n        GSDOM.toggleClass(el, false, neg);\r\n    }\r\n\r\n    static #hide(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? '' : 'fade';\r\n        GSDataAttr.#switch(el, css, 'show');\r\n    }\r\n\r\n    static #show(el) {\r\n        const css = GSDataAttr.#isCollapsible(el) ? 'gsanim' : 'fade';\r\n        GSDataAttr.#switch(el, 'show', css);\r\n    }\r\n\r\n    static #toggle(obj, type) {\r\n\r\n        const list = GSDataAttr.#getByType(obj.list, type);\r\n\r\n        const objsH = GSDataAttr.#getHidden(list);\r\n        const objsV = GSDataAttr.#getVisible(list, objsH);\r\n\r\n        objsV.forEach(el => GSDataAttr.#hide(el));\r\n        objsH.forEach(el => GSDataAttr.#show(el));\r\n    }\r\n\r\n    static async #removeEl(el) {\r\n        GSDOM.toggleClass(el, false, 'show');\r\n        if (GSDataAttr.#faded(el)) await GSUtil.timeout(GSDOM.SPEED);\r\n        el.remove();\r\n    }\r\n\r\n    static #remove(obj) {\r\n        obj.list.forEach(el => GSDataAttr.#removeEl(el));\r\n    }\r\n\r\n    /**\r\n    * Automatic template injection at given target\r\n    * @param {*} source caller \r\n    * @param {*} target css selector\r\n    * @param {*} type type of target\r\n    */\r\n    static #onInject(source, target, inject) {\r\n\r\n        if (!inject) return;\r\n\r\n        const isComp = inject.toLowerCase().startsWith('gs-');\r\n        const list = GSDOM.queryAll(document.documentElement, target);\r\n        const css = source?.dataset?.css || '';\r\n\r\n        const html = isComp ? `<${inject}></${inject}>` : `<gs-template href=\"${inject}\" class=\"${css}\"></gs-template>`;\r\n\r\n        list.forEach(el => GSDOM.setHTML(el, html));\r\n    }\r\n\r\n    /**\r\n     * Show or hide target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onToggle(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isToggle(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.toggle)).forEach(el => el.toggle(source));\r\n\r\n        GSDataAttr.#onToggleBefore(source, target, type, obj);\r\n        GSDataAttr.#toggle(obj, type);\r\n        GSDataAttr.#onToggleAfter(source, target, type, obj);\r\n    }\r\n\r\n    static #onToggleBefore(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, true);\r\n    }\r\n\r\n    static #onToggleAfter(source, target, type, obj) {\r\n        return GSDataAttr.#onToggleHandler(source, target, type, obj, false);\r\n    }\r\n\r\n    static #onToggleHandler(source, target, type, obj, isBefore) {\r\n        switch (type) {\r\n            case \"button\":\r\n                break;\r\n            case \"collapse\":\r\n                if (isBefore) {\r\n                    obj.list.filter(el => el.classList.contains('accordion-collapse')).forEach(el => {\r\n                        Array.from(el.closest('.accordion').querySelectorAll('.accordion-collapse'))\r\n                            .filter(itm => itm != el && GSAttr.get(itm, 'data-bs-parent'))\r\n                            .forEach(itm => GSDOM.toggleClass(itm, false, 'show'));\r\n                    });\r\n                } else {\r\n                    GSDOM.toggleClass(source, null, 'collapsed');\r\n                }\r\n                break;\r\n            case \"dropdown\":\r\n                if (isBefore) {\r\n                    obj.list = obj.list.map(o => o.querySelector('.dropdown-menu')).filter(o => o != null);\r\n                } else {\r\n                    obj.list.forEach(o => o.classList.toggle('show'));\r\n                    obj.list.filter(o => o.classList.contains('show')).forEach(o => GSDataAttr.#hideExt(o));\r\n                }\r\n                break;\r\n            case \"modal\":\r\n                break;\r\n            case \"offcanvas\":\r\n                break;\r\n            case \"pill\":\r\n                break;\r\n            case \"popover\":\r\n                break;\r\n            case \"popup\":\r\n                break;\r\n            case \"tab\":\r\n                break;\r\n            case \"tooltip\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    static #hideExt(source) {\r\n        GSEvent.once(source, null, 'mouseleave', (e) => source.classList.remove('show'));\r\n    }\r\n\r\n    /**\r\n     * Dismiss target based on type\r\n     * @param {*} source caller \r\n     * @param {*} target css selector\r\n     * @param {*} type type of target\r\n     */\r\n    static #onDismiss(source, target, type) {\r\n\r\n        if (!GSDataAttr.#isDismiss(type)) return;\r\n\r\n        const obj = GSDataAttr.#findTarget(source, target, type);\r\n\r\n        obj.comps.filter(el => GSFunction.isFunction(el.close)).forEach(el => el.close());\r\n        obj.comps.filter(el => GSFunction.isFunction(el.dismiss)).forEach(el => el.dismiss());\r\n\r\n\r\n        switch (type) {\r\n            case \"alert\":\r\n                GSDataAttr.#remove(obj, type);\r\n                break;\r\n            case \"modal\":\r\n            case \"offcanvas\":\r\n            case \"popup\":\r\n                GSDataAttr.#toggle(obj, type);\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    static #isDismiss(val) {\r\n        return val && GSDataAttr.#dismissValues.includes(val);\r\n    }\r\n\r\n    static #isToggle(val) {\r\n        return val && GSDataAttr.#toggleValues.includes(val);\r\n    }\r\n\r\n    /**\r\n     * Return data-bs-target attribute value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getTarget(el) {\r\n        const tgt = el?.dataset?.bsTarget || GSAttr.get(el, 'href');\r\n        return tgt === '#' ? '' : tgt;\r\n    }\r\n\r\n    /**\r\n     * Return dismiss css for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getDismiss(el) {\r\n        return el?.dataset?.bsDismiss || '';\r\n    }\r\n\r\n    /**\r\n     * Return toggle css value for element\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n    static getToggle(el) {\r\n        return el?.dataset?.bsToggle || '';\r\n    }\r\n\r\n    static getInject(el) {\r\n        return el?.dataset?.inject || '';\r\n    }\r\n\r\n    /**\r\n     * Return if element is dismissable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isDismiss(el) {\r\n        return el?.dataset?.bsDismiss ? true : false;\r\n    }\r\n\r\n    /**\r\n     * Return if element is toggable\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static isToggle(el) {\r\n        return el?.dataset?.bsToggle ? true : false;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * A module rendering current time on a page\r\n * @module components/GSTimeFormat\r\n */\r\n\r\n/**\r\n * Render Time value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSTimeFormat extends GSElement {\r\n\r\n    #id = 0;\r\n\r\n    static get observedAttributes() {\r\n        return ['interval'];\r\n    }\r\n\r\n    attributeChanged(name = '', oldVal = '', newVal = '') {\r\n        const me = this;\r\n        me.stop();\r\n        me.start();\r\n        me.#update();\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.#update();\r\n        me.start();\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.stop();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        const date = new Date();\r\n        const src = date.toLocaleTimeString(me.locale);\r\n        GSDOM.setHTML(me.self, src);\r\n        GSEvent.send(me, 'time', { date }, true, true);\r\n        return 0;\r\n    }\r\n\r\n    start() {\r\n        const me = this;\r\n        me.#id = me.interval > 0 ? setInterval(me.#update.bind(me), me.interval * 1000) : me.#update();\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.#id);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get interval() {\r\n        return GSAttr.getAsNum(this, 'interval', 1);\r\n    }\r\n\r\n    set interval(val = 60) {\r\n        return GSAttr.setAsNum(this, 'interval', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', GSUtil.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        return GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-time-format', GSTimeFormat);\r\n        Object.seal(GSTimeFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDate class\r\n * @module base/GSDate\r\n */\r\n\r\n/**\r\n * Custom Date class to help handling calendar and date formatting\r\n * \r\n * @class\r\n */\r\nexport default class GSDate extends Date {\r\n\r\n    static DEFAULT_FORMAT = 'YYYY-MM-DDTHH:mm:ssZ';\r\n    static REGEX_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g\r\n\r\n    #locale = navigator.locale;\r\n\r\n    format(val = GSDate.DEFAULT_FORMAT, locale) {\r\n        const me = this;\r\n        me.locale = locale;\r\n        const obj = me.asJSON();\r\n        return val.replace(GSDate.REGEX_FORMAT, (match, val) => val || obj[match]);\r\n    }\r\n\r\n    /**\r\n     * Build array days/weeks for a month\r\n     * @returns {Array<string>}\r\n     */\r\n    build() {\r\n        const me = this;\r\n        const last = me.last.getDate();\r\n        const first = me.first.getDay();\r\n\r\n        const mondayFirst = me.#isMondayFirst();\r\n\r\n        const shifter = mondayFirst ? -2 : -1;\r\n        const days = first === 0 ? [] : ' '.repeat(first + shifter).split(' ');\r\n        let i = 1;\r\n        while (i <= last) {\r\n            days.push(i.toString());\r\n            i++;\r\n        }\r\n\r\n        while (days.length % 7 != 0) days.push('');\r\n\r\n        return days;\r\n    }\r\n\r\n    get locale() {\r\n        return this.#locale;\r\n    }\r\n\r\n    set locale(val) {\r\n        this.#locale = val || navigator.language;\r\n    }\r\n\r\n    get year() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    set year(val = 0) {\r\n        this.setFullYear(val);\r\n    }\r\n\r\n    get month() {\r\n        return this.getMonth();\r\n    }\r\n\r\n    set month(val = 0) {\r\n        this.setMonth(val);\r\n    }\r\n\r\n    get day() {\r\n        return this.getDate();\r\n    }\r\n\r\n    set day(val = 0) {\r\n        this.setDate(val);\r\n    }\r\n\r\n    /**\r\n     * First date of the month\r\n     * @returns {Date}\r\n     */\r\n    get first() {\r\n        return new GSDate(this.getFullYear(), this.getMonth(), 1);\r\n    }\r\n\r\n    /**\r\n     * Last date of the month\r\n     * @returns {Date}\r\n     */\r\n    get last() {\r\n        return new GSDate(this.getFullYear(), this.getMonth() + 1, 0);\r\n    }\r\n\r\n    get YY() {\r\n        return String(this.YYYY).slice(-2);\r\n    }\r\n\r\n    get YYYY() {\r\n        return this.getFullYear();\r\n    }\r\n\r\n    get M() {\r\n        return this.getMonth() + 1;\r\n    }\r\n\r\n    get MM() {\r\n        return this.M.toString().padStart( 2, '0');\r\n    }\r\n\r\n    get MMM() {\r\n        return this.#toLocale({ month: 'short' });\r\n    }\r\n\r\n    get MMMM() {\r\n        return this.#toLocale({ month: 'long' });\r\n    }\r\n\r\n    get D() {\r\n        return this.getDate().toString();\r\n    }\r\n\r\n    get DD() {\r\n        return this.D.padStart( 2, '0');\r\n    }\r\n\r\n    get d() {\r\n        return this.getDay().toString();\r\n    }\r\n\r\n    get dd() {\r\n        return this.ddd.slice(0, 2);\r\n    }\r\n\r\n    get ddd() {\r\n        return this.#toLocale({ weekday: 'short' });\r\n    }\r\n\r\n    get dddd() {\r\n        return this.#toLocale({ weekday: 'long' });\r\n    }\r\n\r\n    get H() {\r\n        return this.getHours().toString();\r\n    }\r\n\r\n    get HH() {\r\n        return this.H.padStart(2, '0');\r\n    }\r\n\r\n    get h() {\r\n        return this.#formatHour(1);\r\n    }\r\n\r\n    get hh() {\r\n        return this.#formatHour(2);\r\n    }\r\n\r\n    get a() {\r\n        return this.#meridiem(true);\r\n    }\r\n\r\n    get A() {\r\n        return this.#meridiem(false);\r\n    }\r\n\r\n    get m() {\r\n        return this.getMinutes().toString();\r\n    }\r\n\r\n    get mm() {\r\n        return this.m.padStart(2, '0');\r\n    }\r\n\r\n    get s() {\r\n        return this.getSeconds().toString();\r\n    }\r\n\r\n    get ss() {\r\n        return this.s.padStart(2, '0');\r\n    }\r\n\r\n    get SSS() {\r\n        return this.getMilliseconds().toString().padStart(3, '0');\r\n    }\r\n\r\n    get Z() {\r\n        return this.#zoneStr();\r\n    }\r\n\r\n    get ZZ() {\r\n        return this.Z.replace(':', '');\r\n    }\r\n\r\n    get Q() {\r\n        return Math.ceil(this.M / 3);\r\n    }\r\n\r\n    get k() {\r\n        return (this.getHours() + 1).toString();\r\n    }\r\n\r\n    get kk() {\r\n        return this.k.padStart(2, '0');\r\n    }\r\n\r\n    get W() {\r\n        const date = new Date(this.getTime());\r\n        date.setHours(0, 0, 0, 0);\r\n        date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\r\n        const week1 = new Date(date.getFullYear(), 0, 4);\r\n        return 1 + Math.round(((date.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);        \r\n    }\r\n\r\n    get WW() {\r\n        return this.W.toString().padStart(2, '0');\r\n    }\r\n\r\n    get x() {\r\n        return this.getTime();\r\n    }\r\n\r\n    get X() {\r\n        return Math.floor(this.x / 1000);\r\n    }\r\n\r\n    asJSON() {\r\n        const me = this;\r\n        return {\r\n            YY: me.YY,\r\n            YYYY: me.YYYY,\r\n            M: me.M,\r\n            MM: me.MM,\r\n            MMM: me.MMM,\r\n            MMMM: me.MMMM,\r\n            D: me.D,\r\n            DD: me.DD,\r\n            d: me.d,\r\n            dd: me.dd,\r\n            ddd: me.ddd,\r\n            dddd: me.dddd,\r\n            H: me.H,\r\n            HH: me.HH,\r\n            h: me.h,\r\n            hh: me.hh,\r\n            a: me.a,\r\n            A: me.A,\r\n            m: me.m,\r\n            mm: me.mm,\r\n            s: me.s,\r\n            ss: me.ss,\r\n            SSS: me.SSS,\r\n            Z: me.Z,\r\n            ZZ: me.ZZ,\r\n            Q: me.Q,\r\n            k: me.k,\r\n            kk: me.kk,\r\n            W: me.W,\r\n            WW: me.WW,\r\n            x: me.x,\r\n            X: me.X\r\n        }\r\n    }\r\n\r\n    static monthList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        tmp.setMonth(0);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 12;\r\n        while (d--) {\r\n            val = short ? tmp.MMM : tmp.MMMM;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setMonth(tmp.getMonth() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    static dayList(short = false, locale = navigator.locale, capitalize = true) {\r\n        const tmp = new GSDate();\r\n        tmp.locale = locale;\r\n        const mondayFirst = tmp.#isMondayFirst();\r\n        const offset = mondayFirst ? 1 : 0;\r\n        tmp.setDate(tmp.getDate() - tmp.getDay() + offset);\r\n        const days = [];\r\n        let val = null;\r\n        let d = 7;\r\n        while (d--) {\r\n            val = short ?  tmp.ddd : tmp.dddd;\r\n            val = capitalize ? tmp.#capitalize(val) : val;\r\n            days.push(val);\r\n            tmp.setDate(tmp.getDate() + 1);\r\n        }\r\n        return days;\r\n    }\r\n\r\n    #isMondayFirst() {\r\n        // TODO Firefox does not support it\r\n        return new Intl.Locale(this.#locale)?.weekInfo?.firstDay === 1;\r\n    }\r\n\r\n    #capitalize(val = '') {\r\n        return val.charAt(0).toUpperCase() + val.slice(1);\r\n    }\r\n\r\n    #toLocale(opt) {\r\n        return this.toLocaleString(this.#locale, opt);\r\n    }\r\n\r\n    #formatHour(size) {\r\n        return (this.getHours() % 12 || 12).toString().padStart(size, '0');\r\n    }\r\n\r\n    #meridiem(isLowercase) {\r\n        const opt = { hour: '2-digit', hour12: true };\r\n        const val = this.#toLocale(opt).split(' ').pop(-1);\r\n        return isLowercase ? val.toLowerCase() : val;\r\n    }\r\n\r\n    #zoneStr() {\r\n        const me = this;\r\n        const negMinutes = -1 * me.getTimezoneOffset();\r\n        const minutes = Math.abs(negMinutes)\r\n        const hourOffset = Math.floor(minutes / 60)\r\n        const minuteOffset = minutes % 60;\r\n\r\n        const seg1 = negMinutes <= 0 ? '+' : '-';\r\n        const seg2 = hourOffset.toString().padStart(2, '0');\r\n        const seg3 = minuteOffset.toString().padStart(2, '0');\r\n\r\n        return `${seg1}${seg2}:${seg3}`;\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering date with specific langauge support\r\n * @module components/GSDateFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDate from '../../base/GSDate.mjs';\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Date value with international language support\r\n * \r\n * All options - set dasta-[name]; data-weekday etc...\r\n       {\r\n       weekday: 'narrow' | 'short' | 'long',\r\n       era: 'narrow' | 'short' | 'long',\r\n       year: 'numeric' | '2-digit',\r\n       month: 'numeric' | '2-digit' | 'narrow' | 'short' | 'long',\r\n       day: 'numeric' | '2-digit',\r\n       hour: 'numeric' | '2-digit',\r\n       minute: 'numeric' | '2-digit',\r\n       second: 'numeric' | '2-digit',\r\n       timeZoneName: 'short' | 'long',\r\n\r\n       // Time zone to express it in\r\n       timeZone: 'Asia/Shanghai',\r\n       // Force 12-hour or 24-hour\r\n       hour12: true | false,\r\n\r\n       dateStyle: full | long | medium | short\r\n       timeStyle: full | long | medium | short\r\n\r\n       // Rarely-used options\r\n       hourCycle: 'h11' | 'h12' | 'h23' | 'h24',\r\n       formatMatcher: 'basic' | 'best fit'\r\n       }\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSDateFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'format'];\r\n\r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.result);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get result() {\r\n        const me = this;\r\n        const val = me.value;\r\n        if (me.format) return val.format(me.format);\r\n        return new Intl.DateTimeFormat(me.locale, me.dataset).format(val);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    set format(val = '') {\r\n        return GSAttr.set(this, 'format', val);\r\n    }\r\n\r\n    get value() {\r\n        const me = this;\r\n        const o = Date.parse(GSAttr.get(me, 'value'));\r\n        const date =  new GSDate(o);\r\n        date.locale = me.locale;\r\n        return date;\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.set(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.locale);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-date-format', GSDateFormat);\r\n        Object.seal(GSDateFormat);\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module rendering current year on a page\r\n * @module components/GSYearFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs'\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSYearFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['offset'];\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        GSDOM.setHTML(this, this.value);\r\n    }\r\n\r\n    get value() {\r\n        return this.current + this.offset;\r\n    }\r\n\r\n    get current() {\r\n        return new Date().getFullYear();\r\n    }\r\n\r\n    get offset() {\r\n        return GSAttr.getAsNum(this, 'offset', 0);\r\n    }\r\n\r\n    set offset(val = '0') {\r\n        GSAttr.setAsNum(this, 'offset', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-year-format', GSYearFormat);\r\n        Object.seal(GSYearFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#options\r\n\r\n\r\n/**\r\n * A module rendering numeric value as curency format with specific langauge support\r\n * @module components/GSCurrencyFormat\r\n */\r\nimport GSAttr from '../../base/GSAttr.mjs'\r\nimport GSDOM from '../../base/GSDOM.mjs';\r\n\r\n/**\r\n * Render Year value\r\n * \r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSCurrencyFormat extends HTMLElement {\r\n\r\n    static observedAttributes = ['value', 'locale', 'currency'];\r\n    \r\n    #id = 0;\r\n\r\n    connectedCallback() {\r\n        this.#update();\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldVal = '', newVal = '') {\r\n        this.#update();\r\n    }\r\n\r\n    #update() {\r\n        const me = this;\r\n        if (me.#id > 0) return;\r\n        me.#id = setTimeout(() => {\r\n            GSDOM.setHTML(me, me.format);\r\n            me.#id = 0;\r\n        }, 50);\r\n    }\r\n\r\n    get #options() {\r\n        const me = this;\r\n        return Object.apply(me.dataset, { style: 'currency', currency: me.currency});\r\n    }\r\n\r\n    get format() {\r\n        const me = this;\r\n        return new Intl.NumberFormat(me.locale, me.#options).format(me.value);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'value', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        GSAttr.setAsNum(this, 'value', val);\r\n    }\r\n\r\n    get locale() {\r\n        return GSAttr.get(this, 'locale', navigator.language);\r\n    }\r\n\r\n    set locale(val = '') {\r\n        GSAttr.set(this, 'locale', val);\r\n    }\r\n\r\n    get currency() {\r\n        return GSAttr.get(this, 'currency', '');\r\n    }\r\n\r\n    set currency(val = '') {\r\n        GSAttr.set(this, 'currency', val);\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-currency-format', GSCurrencyFormat);\r\n        Object.seal(GSCurrencyFormat);\r\n    }    \r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSItem class\r\n * @module base/GSItem\r\n */\r\n\r\nimport GSUtil from \"./GSUtil.mjs\";\r\nimport GSAttr from \"./GSAttr.mjs\";\r\nimport GSDOM from \"./GSDOM.mjs\";\r\n\r\n/**\r\n * Static class for handling generic configurable tag GS-ITEM\r\n */\r\nexport default class GSItem extends HTMLElement {\r\n\r\n\tstatic #dismiss = 'data-bs-dismiss';\r\n\r\n\tstatic #target = 'data-bs-target';\r\n\r\n\tstatic #toggle = 'data-bs-toggle';\r\n\r\n\tstatic #action = 'data-action';\r\n\r\n\tstatic #inject = 'data-inject';\r\n\r\n\tstatic #selectable = 'data-selectable';\r\n\r\n\tstatic #tags = ['GS-ITEM', 'TEMPLATE']\r\n\r\n\tstatic {\r\n\t\tcustomElements.define('gs-item', GSItem);\r\n\t\tObject.seal(GSItem);\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tGSItem.validate(this);\r\n\t}\r\n\r\n\tstatic validate(own, tagName = 'GS-ITEM') {\r\n\t\treturn GSDOM.validate(own, tagName, GSItem.#tags);\r\n\t}\r\n\r\n\t/**\r\n\t * Return content of HTMLTemplate child element\r\n\t * \r\n\t * @param {HTMLElement} el \r\n\t * @returns {string}\r\n\t */\r\n\tstatic getBody(el, flat = false) {\r\n\t\tlet tpl = GSItem.getTemplate(el);\r\n\t\tconst isFlat = GSItem.getFlat(el);\r\n\t\tconst anchor = GSItem.getAnchor(el);\t\t\r\n\t\tconst acss = isFlat || flat ? `anchor=\"${anchor}\" flat=\"true\"` : '';\r\n\t\tconst cls = GSAttr.get(el, 'css-template', '');\r\n\t\tif (tpl) return `<gs-template ${acss} href=\"${tpl}\" class=\"${cls}\"></gs-template>`;\r\n\t\ttpl = el.querySelector('template');\r\n\t\treturn tpl?.innerHTML || '';\r\n\t}\r\n\r\n\t/**\r\n\t * Get first level of generic gs-item element, used for configuring gs-* components\r\n\t * @param {HTMLElement} root \r\n\t * @returns {Array<HTMLElement>} \r\n\t */\r\n\tstatic genericItems(root) {\r\n\t\tif (!GSDOM.isHTMLElement(root)) return [];\r\n\t\treturn Array.from(root.children).filter(el => el.tagName == 'GS-ITEM')\r\n\t}\r\n\r\n\t/**\r\n\t * Generate generic <gs-item>  tag from json object. Used by several GS Components\r\n\t * Json format: array of json or json (child elemetns stored in item property\r\n\t * Any property will be rendered as gs-item element attribute\r\n\t * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}] \r\n\t * @param {*} val \r\n\t * @returns {string} generated html <gs-item...>\r\n\t */\r\n\tstatic generateItem(val = '') {\r\n\t\tif (!GSUtil.isJsonType(val)) return '';\r\n\t\tif (!Array.isArray(val)) return GSItem.#generateItem(val);\r\n\t\treturn GSItem.#generateItems(val);\r\n\t}\r\n\r\n\tstatic #numOrString(val) {\r\n\t\treturn GSUtil.isNumber(val) || GSUtil.isStringNonEmpty(val);\r\n\t}\r\n\r\n\tstatic #generateItems(o) {\r\n\t\treturn o.map(e => GSItem.#generateItem(e)).join('\\n');\r\n\t}\r\n\r\n\tstatic #generateItem(o) {\r\n\t\tconst args = GSItem.#generateArgs(o);\r\n\t\tconst childs = Array.isArray(o.items) ? GSItem.generateItem(o.items) : '';\r\n\t\treturn `<gs-item ${args}>${childs}</gs-item>`;\r\n\t}\r\n\r\n\tstatic #generateArgs(o) {\r\n\t\treturn Object.entries(o).filter(kv => GSItem.#numOrString(kv[1]))\r\n\t\t\t.map(kv => `${kv[0]}=\"${kv[1]}\"`).join(' ');\r\n\t}\r\n\r\n\t/**\r\n\t * Hepler to joinf all base data-bs related attributes\r\n\t * @param {*} el \r\n\t * @returns \r\n\t */\r\n\tstatic getAttrs(el) {\r\n\t\treturn [GSItem.getDismissAttr(el), GSItem.getTargetAttr(el),\r\n\t\tGSItem.getToggleAttr(el), GSItem.getActionAttr(el), \r\n\t\tGSItem.getInjectAttr(el)].join(' ');\r\n\t}\r\n\r\n\tstatic getDismissAttr(el) {\r\n\t\tconst v = GSItem.getDismiss(el);\r\n\t\treturn v ? `${GSItem.#dismiss}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getTargetAttr(el) {\r\n\t\tconst v = GSItem.getTarget(el);\r\n\t\treturn v ? `${GSItem.#target}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getToggleAttr(el) {\r\n\t\tconst v = GSItem.getToggle(el);\r\n\t\treturn v ? `${GSItem.#toggle}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getActionAttr(el) {\r\n\t\tconst v = GSItem.getAction(el);\r\n\t\treturn v ? `${GSItem.#action}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getInjectAttr(el) {\r\n\t\tconst v = GSItem.getInject(el);\r\n\t\treturn v ? `${GSItem.#inject}=\"${v}\"` : '';\r\n\t}\r\n\r\n\tstatic getSelectableAttr(el) {\r\n\t\tconst v = GSItem.getSelectable(el);\r\n\t\treturn v ? '' : `${GSItem.#selectable}=\"${v}\"`;\r\n\t}\r\n\r\n\tstatic getActive(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'active');\r\n\t}\r\n\r\n\tstatic getAction(el) {\r\n\t\treturn GSAttr.get(el, 'action');\r\n\t}\r\n\r\n\tstatic getDismiss(el) {\r\n\t\treturn GSAttr.get(el, 'dismiss');\r\n\t}\r\n\r\n\tstatic getTarget(el) {\r\n\t\treturn GSAttr.get(el, 'target');\r\n\t}\r\n\r\n\tstatic getToggle(el) {\r\n\t\treturn GSAttr.get(el, 'toggle');\r\n\t}\r\n\r\n\tstatic getInject(el) {\r\n\t\treturn GSAttr.get(el, 'inject');\r\n\t}\r\n\r\n\tstatic getIcon(el) {\r\n\t\treturn GSAttr.get(el, 'icon');\r\n\t}\r\n\r\n\tstatic getSelectable(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'selectable', true);\r\n\t}\r\n\r\n\tstatic getAnchor(el) {\r\n\t\treturn GSAttr.get(el, 'anchor', 'afterend@self');\r\n\t}\r\n\r\n\tstatic getFlat(el) {\r\n\t\treturn GSAttr.getAsBool(el, 'flat', false);\r\n\t}\r\n\r\n\tstatic getName(el) {\r\n\t\treturn GSAttr.get(el, 'name', '');\r\n\t}\r\n\r\n\tstatic getHref(el) {\r\n\t\treturn GSAttr.get(el, 'href', '#');\r\n\t}\r\n\r\n\tstatic getCSS(el) {\r\n\t\treturn GSAttr.get(el, 'css', '');\r\n\t}\r\n\r\n\tstatic getTemplate(el) {\r\n\t\treturn GSAttr.get(el, 'template', '');\r\n\t}\r\n\r\n\tget dismissAttr() {\r\n\t\treturn GSItem.getDismissAttr(this);\r\n\t}\r\n\r\n\tget targetAttr() {\r\n\t\treturn GSItem.getTargetAttr(this);\r\n\t}\r\n\r\n\tget toggleAttr() {\r\n\t\treturn GSItem.getToggleAttr(this);\r\n\t}\r\n\r\n\tget actionAttr() {\r\n\t\treturn GSItem.getActionAttr(this);\r\n\t}\r\n\r\n\tget injectAttr() {\r\n\t\treturn GSItem.getInjectAttr(this);\r\n\t}\r\n\r\n\tget action() {\r\n\t\treturn GSItem.getAction(this);\r\n\t}\r\n\r\n\tget dismiss() {\r\n\t\treturn GSItem.getDismiss(this);\r\n\t}\r\n\r\n\tget target() {\r\n\t\treturn GSItem.getTarget(this);\r\n\t}\r\n\r\n\tget toggle() {\r\n\t\treturn GSItem.getToggle(this);\r\n\t}\r\n\r\n\tget inject() {\r\n\t\treturn GSItem.getInject(this);\r\n\t}\r\n\r\n\tget selectable() {\r\n\t\treturn GSItem.getSelectable(this);\r\n\t}\r\n\r\n\tget flat() {\r\n\t\treturn GSItem.getFlat(this);\r\n\t}\r\n\r\n\tget name() {\r\n\t\treturn GSItem.getName(this);\r\n\t}\r\n\r\n\tget css() {\r\n\t\treturn GSItem.getCSS(this);\r\n\t}\r\n\r\n\tget active() {\r\n\t\treturn GSItem.getActive(this);\r\n\t}\r\n\r\n\tget template() {\r\n\t\treturn GSItem.getTemplate(this);\r\n\t}\r\n\r\n\tget body() {\r\n\t\treturn GSItem.getBody(el);\r\n\t}\r\n\r\n\t/**\r\n\t * Convert JSON structure to DOM structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {object} obj JSON Object to convert\r\n\t * @param {string} tag DOM tag name\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {string}\r\n\t */\r\n\t static toDom(obj, tag = 'gs-item', name = 'name', value = 'value', type = 'type', child = false) {\r\n\r\n\t\tconst tmp = [];\r\n\r\n\t\tif (!child) tmp.push('<gs-item type=\"object\">');\r\n\r\n\t\tif (Array.isArray(obj)) {\r\n\t\t\tobj.forEach((o, i) => {\r\n\r\n\t\t\t\tconst ptyp = typeof o;\r\n\t\t\t\tconst isArray = Array.isArray(o);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\r\n\t\t\t\tif (isObj || isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(o, tag, name, value, type, true ));\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${value}=\"${o}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tObject.entries(obj).forEach(kv => {\r\n\t\r\n\t\t\t\tconst pname = kv[0];\r\n\t\t\t\tconst pobj = kv[1];\r\n\t\t\t\tconst ptyp = typeof pobj;\r\n\t\r\n\t\t\t\tconst isArray = Array.isArray(pobj);\r\n\t\t\t\tconst isObj = !isArray && ptyp === 'object';\r\n\t\t\t\tlet isSimple = false;\r\n\t\r\n\t\t\t\tif (isArray && pobj.length > 0) {\r\n\t\t\t\t\tconst elIsArray = Array.isArray(pobj[0]);\r\n\t\t\t\t\tconst elIsObj = typeof pobj[0] === 'object';\r\n\t\t\t\t\tisSimple = !(elIsArray || elIsObj);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (isSimple) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isArray) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"array\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else if (isObj) {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${type}=\"object\">`);\r\n\t\t\t\t\ttmp.push(GSItem.toDom(pobj, tag, name, value, type, true));\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttmp.push(`<${tag} ${name}=\"${pname}\" ${value}=\"${pobj}\" ${type}=\"${ptyp}\">`);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttmp.push(`</${tag}>`);\r\n\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (!child) tmp.push('</gs-item>');\r\n\r\n\t\treturn tmp.join('');\r\n\t}\r\n\r\n\t/**\r\n\t * Convert DOM tree into a JSON structure\r\n\t * \r\n\t * const o = {....}\r\n\t * document.body.innerHTML = GSItem.toDom(o);\r\n\t * GSItem.toJson(document.body.firstElementChild);\r\n\t * \r\n\t * @param {HTMLElement} obj HTML element instance to convert\r\n\t * @param {string} name DOM attribute name for object key\r\n\t * @param {string} value DOM attribute name for object value\r\n\t * @param {string} type DOM attribute name for object type\r\n\t * @returns {object}\r\n\t */\r\n\tstatic toJson(el, name = 'name', value = 'value', type = 'type') {\r\n\t\t\r\n\t\t\r\n\t\tif (!(el instanceof HTMLElement)) return {};\r\n\t\t\r\n\t\tconst nameV = el.getAttribute(name);\r\n\t\tconst valV = el.getAttribute(value);\r\n\t\tconst typeV = el.getAttribute(type);\r\n\r\n\t\tlet obj = null;\r\n\r\n\t\tswitch (typeV) {\r\n\t\t\tcase 'array':\r\n\t\t\t\tobj = [];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'object':\r\n\t\t\t\tobj = {};\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn GSItem.#toType(valV, typeV);\r\n\t\t}\r\n\t\t\r\n\t\tconst childs = Array.from(el.children);\r\n\t\tconst isArray = typeV === 'array';\r\n\t\tconst isObject = typeV === 'object';\r\n\r\n\t\tchilds.forEach(el => {\r\n\t\t\tconst _nam = el.getAttribute(name);\r\n\t\t\tif (isArray) {\r\n\t\t\t\tobj.push(GSItem.toJson(el, name, value, type));\r\n\t\t\t} else if(isObject) {\r\n\t\t\t\tconst tmp = GSItem.toJson(el, name, value, type);\r\n\t\t\t\tobj[_nam] = tmp;\r\n\t\t\t} else {\r\n\t\t\t\tconst _val = el.getAttribute(value);\r\n\t\t\t\tconst _typ = el.getAttribute(type);\r\n\t\t\t\tobj[nameV][_nam] = GSItem.#toType(_val, _typ);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tstatic #toType(val, type) {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'boolean' : return val === 'true';\r\n\t\t\tcase 'number' : return  parseFloat(val);\r\n\t\t\tdefault: return val\r\n\t\t}\r\n\t}\t\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/GSAccordion\r\n */\r\n\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSEvent from \"../base/GSEvent.mjs\";\r\n import GSLoader from \"../base/GSLoader.mjs\";\r\n import GSUtil from \"../base/GSUtil.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n import GSDOM from \"../base/GSDOM.mjs\";\r\n \r\n /**\r\n  * <gs-accordion css=\"\" css-item=\"\" css-header=\"\" css-body=\"\">\r\n  *  <gs-item title=\"\" message=\"\" visible=\"false\" autoclose=\"true\" ></gs-item>\r\n  * </gs-accordion>\r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSAccordion extends GSElement {\r\n \r\n   static {\r\n     customElements.define('gs-accordion', GSAccordion);\r\n     Object.seal(GSAccordion);\r\n   }\r\n \r\n   static get observedAttributes() {\r\n     const attrs = ['css', 'css-item', 'css-header', 'css-body', 'data'];\r\n     return GSElement.observeAttributes(attrs);\r\n   }\r\n \r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n \r\n     const me = this;\r\n \r\n     if (name === 'data') return me.load(newValue);\r\n \r\n \r\n     let css = null;\r\n \r\n     switch (name) {\r\n       case 'css':\r\n         css = '.accordion';\r\n         break;\r\n       case 'css-item':\r\n         css = '.accordion-item';\r\n         break;\r\n       case 'css-head':\r\n         css = '.accordion-button';\r\n         break;\r\n       case 'css-body':\r\n         css = '.accordion-collapse';\r\n         break;\r\n     }\r\n \r\n     if (css) {\r\n       me.queryAll(css).forEach(el => {\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n       });\r\n     }\r\n   }\r\n \r\n   async getTemplate(val = '') {\r\n     const me = this;\r\n     const id = GSID.id;\r\n     const html = await me.#render(id);\r\n     return `<div class=\"accordion ${me.css}\" id=\"#${id}\">${html}</div>`;\r\n   }\r\n \r\n   async #render(id) {\r\n     const me = this;\r\n     const list = GSItem.genericItems(me).map(el => me.#html(id, el));\r\n     const html = await Promise.all(list);\r\n     return html.join('');\r\n   }\r\n \r\n   get css() {\r\n     return GSAttr.get(this, 'css', '');\r\n   }\r\n \r\n   set css(val = '') {\r\n     GSAttr.set(this, 'css', val);\r\n   }\r\n \r\n   get cssItem() {\r\n     return GSAttr.get(this, 'css-item', '');\r\n   }\r\n \r\n   set cssItem(val = '') {\r\n     GSAttr.set(this, 'css-item', val);\r\n   }\r\n \r\n   get cssHead() {\r\n     return GSAttr.get(this, 'css-head');\r\n   }\r\n \r\n   set cssHead(val = '') {\r\n     return GSAttr.set(this, 'css-head', val);\r\n   }\r\n \r\n   get cssBody() {\r\n     return GSAttr.get(this, 'css-body');\r\n   }\r\n \r\n   set cssBody(val = '') {\r\n     return GSAttr.set(this, 'css-body', val);\r\n   }\r\n \r\n   async #html(id, el) {\r\n     const me = this;\r\n     const itemid = GSID.id;\r\n     const tpl = GSItem.getBody(el);\r\n     const title = me.#getTitle(el);\r\n     const message = me.#getMessage(el);\r\n     const autoclose = me.#getAutoclose(el) ? `data-bs-parent=#${id}` : '';\r\n     const isVisible = me.#isVisible(el);\r\n     return `\r\n       <div class=\"accordion-item ${me.cssItem}\">\r\n         <slot name=\"content\">\r\n             <h2 class=\"accordion-header\">\r\n               <button class=\"accordion-button ${me.cssHead} ${isVisible ? '' : 'collapsed'}\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#${itemid}\">\r\n                 ${title}\r\n               </button>\r\n             </h2>\r\n             <div class=\"accordion-collapse collapse ${me.cssBody} ${isVisible ? 'show' : ''}\" id=\"${itemid}\" ${autoclose}>\r\n               <div class=\"accordion-body\">\r\n                   ${tpl || message}\r\n               </div>\r\n             </div>      \r\n         </slot>\r\n     </div>\r\n     `\r\n   }\r\n \r\n   #getTitle(el) {\r\n     return GSAttr.get(el, 'title');\r\n   }\r\n \r\n   #getMessage(el) {\r\n     return GSAttr.get(el, 'message');\r\n   }\r\n \r\n   #isVisible(el) {\r\n     return GSAttr.getAsBool(el, 'visible', false);\r\n   }\r\n \r\n   #getAutoclose(el) {\r\n     return GSAttr.getAsBool(el, 'autoclose', true);\r\n   }\r\n \r\n   /**\r\n    * Load data from various sources\r\n    * \r\n    * @async\r\n    * @param {JSON|func|url} val \r\n    * @returns {Promise}\r\n    */\r\n   async load(val = '') {\r\n     const data = await GSLoader.loadData(val);\r\n     if (!GSUtil.isJsonType(data)) return;\r\n     const me = this;\r\n     const src = GSItem.generateItem(data);\r\n     GSDOM.setHTML(me, src);\r\n     GSEvent.deattachListeners(me);\r\n     me.connectedCallback();\r\n     return data;\r\n   }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAlert class\r\n * @module components/GSAlert\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap alert definition\r\n * <gs-alert css=\"btn-primary\" css-active=\"fade\" message=\"focus hover\" dismissable=\"true\"></gs-alert>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSAlert extends GSElement {\r\n\r\n    #dismissCSS = '<button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>';\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-alert', GSAlert);\r\n        Object.seal(GSAlert);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'message', 'active'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        GSEvent.send(me, 'action', { type: 'alert', source: e }, true);\r\n        me.dismiss();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const btn = me.query('.btn-close');\r\n        me.attachEvent(btn, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'message') GSDOM.setHTML(el, me.message);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') GSDOM.toggleClass(el, !me.#state, activeCSS);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"alert ${me.css}\" style=\"${this.getStyle()}\" role=\"class\">\r\n            <slot>${me.message}</slot>\r\n            ${me.dismissible ? me.#dismissCSS : ''}\r\n        </class>`;\r\n    }\r\n\r\n    get css() {\r\n        const tmp = this.dismissible ? 'alert-dismissible fade show' : '';\r\n        return GSAttr.get(this, 'css') + ` ${tmp}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get activeCSS() {\r\n        return GSAttr.get(this, 'css-active', 'd-none');\r\n    }\r\n\r\n    set activeCSS(val = '') {\r\n        return GSAttr.get(this, 'css-active', val);\r\n    }\r\n\r\n    get message() {\r\n        return GSAttr.get(this, 'message');\r\n    }\r\n\r\n    set message(val = '') {\r\n        return GSAttr.set(this, 'message', val);\r\n    }\r\n\r\n    get dismissible() {\r\n        return GSAttr.getAsBool(this, 'dismissible', false);\r\n    }\r\n\r\n    set dismissible(val = '') {\r\n        return GSAttr.set(this, 'dismissible', GSUtil.asBool(val));\r\n    }\r\n\r\n    async #dismiss() {\r\n        const me = this;\r\n        GSDOM.toggleClass(me.query('.alert'), false, 'show');\r\n        await GSUtil.timeout(GSDOM.SPEED);\r\n        return me.remove();\r\n    }\r\n\r\n    dismiss() {\r\n        return this.#dismiss();\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return GSAttr.getAsBool(this, 'flat', true);\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSButton class\r\n * @module components/GSButton\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/buttons/\r\n * Process Bootstrap button definition\r\n * <gs-button css=\"btn-primary\" title=\"focus hover\" toggle=\"offcanvas|collapse|dropdown|button|tab|pill|popover|tooltip|modal\" dismiss=\"offcanvas|modal|alert\" target=\"css selector\"></gs-button>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSButton extends GSElement {\r\n\r\n\r\n    #state = false;\r\n\r\n    static {\r\n        customElements.define('gs-button', GSButton);\r\n        Object.seal(GSButton);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['css', 'dismiss', 'target', 'toggle', 'title', 'active', 'disable'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        if (me.disable) return false;\r\n        GSEvent.send(me, 'action', { type: 'button', action: me.action, source: e }, true, true, true);\r\n        if (me.active) {\r\n            me.#state = !me.#state;\r\n            GSDOM.toggleClass(me.firstElementChild, me.#state, 'active');\r\n        }\r\n        if (!me.select) me.#button.blur();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.#button, 'click', me.#onClick.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n        me.#update(name, oldValue, newValue);\r\n        GSAttr.set(el, `data-bs-${name}`, newValue);\r\n    }\r\n\r\n    get #button() {\r\n        return this.query('button');\r\n    }\r\n\r\n    #update(name = '', oldValue = '', newValue = '') {\r\n\r\n        const me = this;\r\n        const el = me.firstElementChild;\r\n\r\n        if (name == 'title') return GSDOM.setHTML(el, me.title);\r\n\r\n        if (name == 'css') {\r\n            GSDOM.toggleClass(el, false, oldValue);\r\n            GSDOM.toggleClass(el, true, newValue);\r\n        }\r\n\r\n        if (name == 'active') return GSDOM.toggleClass(el, me.#state, 'active');\r\n        if (name == 'disable') return GSAttr.set(this.firstElementChild, 'disabled', GSUtil.asBool(newValue) ? newValue : null);\r\n    }\r\n\r\n    get template() {\r\n        const me = this;\r\n        const disabled = me.disable ? 'disabled' : '';\r\n        const icon = me.icon ? `<i class=\"${me.icon}\"></i>` : '';\r\n        // const content = me.rtl ? `${me.title} ${icon}` : `${icon} ${me.title}`;\r\n        const content = `${icon} ${me.title}`;\r\n        const action = GSItem.getActionAttr(me);\r\n        const dissmis = GSItem.getDismissAttr(me);\r\n        const target = GSItem.getTargetAttr(me);\r\n        const toggle = GSItem.getToggleAttr(me);\r\n        return `<button class=\"btn ${me.css}\" ${action} ${toggle} ${target} ${dissmis} ${disabled} title=\"${me.comment}\" role=\"tooltip\">${content}</button>`;\r\n    }\r\n\r\n    get css() {\r\n        const active = this.#state ? 'active' : '';\r\n        return GSAttr.get(this, 'css') + ` ${active}`;\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get action() {\r\n        return GSAttr.get(this, 'action');\r\n    }\r\n\r\n    set action(val = '') {\r\n        return GSAttr.set(this, 'action', val);\r\n    }\r\n\r\n    get dismiss() {\r\n        return GSAttr.get(this, 'dismiss');\r\n    }\r\n\r\n    set dismiss(val = '') {\r\n        return GSAttr.set(this, 'dismiss', val);\r\n    }\r\n\r\n    get icon() {\r\n        return GSAttr.get(this, 'icon');\r\n    }\r\n\r\n    set icon(val = '') {\r\n        return GSAttr.set(this, 'icon', val);\r\n    }\r\n\r\n    get target() {\r\n        return GSAttr.get(this, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    get toggle() {\r\n        return GSAttr.get(this, 'toggle');\r\n    }\r\n\r\n    set toggle(val = '') {\r\n        return GSAttr.set(this, 'toggle', val);\r\n    }\r\n\r\n    get comment() {\r\n        return GSAttr.get(this, 'comment');\r\n    }\r\n\r\n    set comment(val = '') {\r\n        return GSAttr.set(this, 'comment', val);\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', val);\r\n    }\r\n\r\n    get active() {\r\n        return GSAttr.getAsBool(this, 'active', false);\r\n    }\r\n\r\n    set active(val = '') {\r\n        this.#state = GSUtil.asBool(val);\r\n        return GSAttr.set(this, 'active', this.#state);\r\n    }\r\n\r\n    get disable() {\r\n        return GSAttr.getAsBool(this, 'disable', false);\r\n    }\r\n\r\n    set disable(val = '') {\r\n        return GSAttr.getAsBool(this, 'disable', val);\r\n    }\r\n\r\n    get select() {\r\n        return GSAttr.getAsBool(this, 'select', true);\r\n    }\r\n\r\n    set select(val = '') {\r\n        return GSAttr.setAsBool(this, 'select', val);\r\n    }\r\n\r\n    toggle() {\r\n        this.active = !this.active;\r\n    }\r\n\r\n    /**\r\n     * Prevent shadow dom\r\n     */\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSCenter class\r\n * @module components/GSCenter\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\n\r\n/**\r\n * Center inside browser\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSCenter extends GSElement {\r\n\r\n   static {\r\n      customElements.define('gs-center', GSCenter);\r\n      Object.seal(GSCenter);\r\n   }\r\n\r\n   static get observedAttributes() {\r\n      const attrs = ['css'];\r\n      return GSElement.observeAttributes(attrs);\r\n   }\r\n\r\n   attributeCallback(name = '', oldValue = '', newValue = '') {\r\n      const me = this;\r\n      if (name === 'css') {\r\n         const el = me.query('div');\r\n         GSDOM.toggleClass(el, false, oldValue);\r\n         GSDOM.toggleClass(el, true, newValue);\r\n      }\r\n   }\r\n\r\n   async getTemplate() {\r\n      return `<div class=\"position-absolute top-50 start-50 translate-middle ${this.css}\" style=\"${this.getStyle()}\"><slot></slot></div>`\r\n   }\r\n\r\n   get css() {\r\n      return GSAttr.get(this, 'css', '');\r\n   }\r\n\r\n   set css(val = '') {\r\n      return GSAttr.set(this, 'css', vel);\r\n   }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSContext class\r\n * @module components/GSContext\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Context menu\r\n *\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSContext extends GSElement {\r\n\r\n  // element that opened context\r\n  #caller = null;\r\n\r\n  #online = false;\r\n  #ready = false;\r\n  #attached = false;\r\n\r\n  static {\r\n    customElements.define('gs-context', GSContext);\r\n    Object.seal(GSContext);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (menu) GSDOM.toggleClass(menu, me.visible, 'show');\r\n    }\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  connectedCallback() {\r\n    super.connectedCallback();\r\n    const me = this;\r\n    me.#online = true;\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    const me = this;\r\n    me.#online = false;\r\n    super.disconnectedCallback();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachOptions();\r\n    me.#attachTarget();\r\n    super.onReady();\r\n  }\r\n\r\n  reattach() {\r\n    const me = this;\r\n    me.#attached = false;\r\n    me.removeEvent(document, 'contextmenu');\r\n    GSDOM.queryAll(document.documentElement, me.target).forEach(target => me.removeEvent(target, 'contextmenu'));\r\n    me.#attachTarget();\r\n  }\r\n\r\n  get isFlat() {\r\n    return this.parentElement !== document.body;\r\n  }\r\n\r\n  /**\r\n   * NOTE: Fixed positioning must be rendered in body element \r\n   * to prevent css translate coordinates.\r\n   */\r\n  get anchor() {\r\n    return 'beforeend@body';\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get disabled() {\r\n    return GSAttr.getAsBool(this, 'disabled');\r\n  }\r\n\r\n  set disabled(val = '') {\r\n    return GSAttr.setAsBool(this, 'disabled', val);\r\n  }  \r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get target() {\r\n    return GSAttr.get(this, 'target');\r\n  }\r\n\r\n  close(e) {\r\n    if (e instanceof Event) e.preventDefault();\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Show submenu at x/y position on the screen\r\n   * @param {number} x \r\n   * @param {number} y \r\n   * @returns {void}\r\n   */\r\n  popup(x = 0, y = 0) {\r\n    const me = this;\r\n    if (me.disabled) return;\r\n    const menu = me.#menu;\r\n    if (!menu) return;\r\n    requestAnimationFrame(() => {\r\n      menu.style.position = 'fixed';\r\n      menu.style.top = '0px';\r\n      menu.style.left = '0px';\r\n      menu.style.transform = `translate(${x}px, ${y}px)`;\r\n      me.visible = true;\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {*} items \r\n   * @returns {boolean}\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachOptions();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\"`);\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      opts.push(`>${it.name} ${hasSubmenu ? '&raquo;' : ''}</a>`);\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item', true);\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu', true);\r\n  }\r\n\r\n  #onResize(e) {\r\n    this.close();\r\n  }\r\n\r\n  #onPopup(e) {\r\n    GSEvent.prevent(e);\r\n    const me = this;\r\n    me.#caller = e.target;\r\n    const rect = me.#menu?.getBoundingClientRect();\r\n    if (!rect) return;\r\n    let x = e.clientX, y = e.clientY;\r\n    const overflowH = x + rect.width > window.innerWidth;\r\n    const overflowV = y + rect.height > window.innerHeight;\r\n    if (overflowH) x = window.innerWidth - rect.width;\r\n    if (overflowV) y = window.innerHeight - rect.height;\r\n    me.#updateSubmenus(overflowV, overflowH);\r\n    me.popup(x, y);\r\n    return true;\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    requestAnimationFrame(() => {\r\n      me.#submenus.forEach(el => {\r\n        el.style.position = 'absolute';\r\n        el.style.left = 'inherit';\r\n        el.style.right = 'inherit';\r\n        el.style.top = 'inherit';\r\n        if (overflowH) {\r\n          el.style.right = '100%';\r\n        } else {\r\n          el.style.left = '100%';\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachOptions() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const data = e.target.dataset;\r\n    const opt = { type: 'contextmenu', option: e.target, caller: me.#caller, data: data };\r\n    GSEvent.send(me, 'action', opt, true, true, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const li = e.target.parentElement;\r\n    const ul = li.parentElement;\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        sub.style.top = `${sub.parentElement.offsetTop}px`;\r\n        sub.classList.add('show');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  /**\r\n   * Attach context menu to target\r\n   * \r\n   * @async\r\n   * @returns {Promise}\r\n   */\r\n  async #attachTarget() {\r\n    const me = this;\r\n    if (!me.target) return;\r\n    if (me.#attached) return;\r\n    const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n    if (targets.length === 0) {\r\n      if (me.#online) {\r\n        await GSUtil.timeout(1000);\r\n        requestAnimationFrame(() => {\r\n          me.#attachTarget();\r\n        })\r\n      }\r\n      return;\r\n    }\r\n    me.#attached = true;\r\n    targets.forEach(target => me.attachEvent(target, 'contextmenu', me.#onPopup.bind(me)));\r\n    me.removeEvent(document, 'gs-components');\r\n    me.attachEvent(document, 'contextmenu', me.close.bind(me));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? 'position-fixed' : 'submenu';\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const action = GSAttr.get(el, 'action');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    if (!action) return ``;\r\n    return `<li><a class=\"dropdown-item\" href=\"#\" data-action=\"${action}\">${name}</a></li>`;\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSDropdown class\r\n * @module components/GSDropdown\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Dropdown menu\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSDropdown extends GSElement {\r\n\r\n  #ready = false;\r\n\r\n  static {\r\n    customElements.define('gs-dropdown', GSDropdown);\r\n    Object.seal(GSDropdown);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['visible', 'title', 'css', 'data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n\r\n    const me = this;\r\n\r\n    if (name === 'data') return this.load(newValue);\r\n\r\n    if (name === 'visible') {\r\n      me.#submenus.forEach(el => el.classList.remove('show'));\r\n      const menu = me.#menu;\r\n      if (!menu) return;\r\n      GSDOM.toggleClass(menu, me.visible, 'show');\r\n      requestAnimationFrame(() => {\r\n        if (me.visible) {\r\n            me.#updatePos(menu);\r\n        } else {\r\n          menu.style.left = '';\r\n          menu.style.top = '';\r\n        }\r\n      });        \r\n        \r\n    }\r\n\r\n    if (name === 'css') {\r\n      GSDOM.toggleClass(me.#button, false, oldValue);\r\n      GSDOM.toggleClass(me.#button, true, newValue);\r\n    }\r\n\r\n    if (name === 'title' && me.#button) {\r\n      GSDOM.setHTML(me.#button, newValue);\r\n    }\r\n  }\r\n\r\n  #updatePos(el) {\r\n\r\n    const style = window.getComputedStyle(el);\r\n\r\n    const w = parseInt(style.width, 10);\r\n    const l = parseInt(style.left, 10);\r\n    const ww = parseInt(window.innerWidth, 10);\r\n\r\n    const t = parseInt(style.top, 10);\r\n    const h = parseInt(style.height, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    if (l + w > ww) el.style.left = `${l - ((l + w) - ww)}px`;\r\n    if (t + h > wh) el.style.top = `${t - ((t + h) - wh)}px`;\r\n  }\r\n\r\n  #updateSub(sub) {\r\n    const me = this;\r\n    const menu = me.#menu;\r\n\r\n    const ww = parseInt(window.innerWidth, 10);\r\n    const wh = parseInt(window.innerHeight, 10);\r\n\r\n    const menustyle = window.getComputedStyle(menu);\r\n    const substyle = window.getComputedStyle(sub);\r\n\r\n    const ml = parseInt(menustyle.left, 10);\r\n    const mw = parseInt(menustyle.width, 10);\r\n    const mt = parseInt(menustyle.top, 10);\r\n    const mh = parseInt(menustyle.height, 10);\r\n\r\n    const sl = parseInt(substyle.left, 10);\r\n    const sw = parseInt(substyle.width, 10);\r\n\r\n    const st = parseInt(substyle.top, 10);\r\n    const sh = parseInt(substyle.height, 10);\r\n\r\n    if (sl + sw + ml + mw > ww) sub.style.left = `-${sw}px`;\r\n    // if (st + sh + mt + mh > wh) sub.style.top = `${wh - ((st+sh) - wh)}px`;\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    if (!val && me.childElementCount > 0) return me.#renderMenuDOM();\r\n    return super.getTemplate(val);\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    if (me.#ready) return;\r\n    me.#ready = true;\r\n    me.close();\r\n    me.attachEvent(me.#menu, 'mouseleave', me.close.bind(me));\r\n    me.#attachSubmenu();\r\n    me.#attachItems();\r\n    me.#updateSubmenus();\r\n    super.onReady();\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    return GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    return GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible');\r\n  }\r\n\r\n  set visible(val = '') {\r\n    return GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get dark() {\r\n    return GSAttr.getAsBool(this, 'dark');\r\n  }\r\n\r\n  get isFlat() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'flat', me.title ? false : true);\r\n  }\r\n\r\n  get anchor() {\r\n    return 'afterend@self';\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  /**\r\n   * Create menu from JSON object\r\n   * [{name:'', action:'', menu: []}]\r\n   * @param {Array<object>} items \r\n   * @returns {boolean} Status true if creation is ok\r\n   */\r\n  createMenu(items = []) {\r\n    if (!Array.isArray(items)) return false;\r\n    if (items.length === 0) return false;\r\n    const me = this;\r\n    const opts = me.#renderMenu(items);\r\n    GSDOM.setHTML(me.#menu, opts.join(''));\r\n    me.#attachItems();\r\n    me.#attachSubmenu();\r\n    return true;\r\n  }\r\n\r\n  #renderMenu(items = []) {\r\n    const me = this;\r\n    const dark = me.dark ? 'dropdown-menu-dark' : '';\r\n    const opts = [];\r\n    items.forEach(it => {\r\n      if (it === '-') return opts.push('<li><hr class=\"dropdown-divider\"/></li>');\r\n      const hasSubmenu = Array.isArray(it.menu);\r\n      opts.push('<li>');\r\n      opts.push(`<a class=\"dropdown-item\" href=\"#\" `);\r\n      opts.push(GSItem.getAttrs(el));\r\n      /*\r\n      if (it.action) opts.push(` data-action=\"${it.action}\"`);\r\n      if (it.inject) opts.push(` data-inject=\"${it.inject}\"`);\r\n      if (it.target) opts.push(` data-bs-target=\"${it.target}\"`);\r\n      */\r\n      opts.push('>');\r\n\r\n      if (me.rtl) {\r\n\r\n      } else {\r\n\r\n      }\r\n      opts.push(`${it.name} ${hasSubmenu ? '&raquo;' : ''}`);\r\n\r\n      opts.push('</a>');\r\n\r\n      if (hasSubmenu) {\r\n        const sub = me.#renderMenu(it.menu);\r\n        opts.push(`<ul class=\"submenu dropdown-menu ${dark}\">`);\r\n        opts.push(sub.join('\\n'));\r\n        opts.push('</ul>');\r\n      }\r\n      opts.push('</li>');\r\n\r\n    });\r\n    return opts;\r\n  }\r\n\r\n  get #menu() {\r\n    return this.query('.dropdown-menu');\r\n  }\r\n\r\n  get #button() {\r\n    return this.query('.dropdown-toggle');\r\n  }\r\n\r\n  get #items() {\r\n    return this.queryAll('.dropdown-item');\r\n  }\r\n\r\n  get #submenus() {\r\n    return this.queryAll('.submenu');\r\n  }\r\n\r\n  /**\r\n   * Add click events to menu options\r\n   */\r\n  #attachItems() {\r\n    const me = this;\r\n    me.#items.filter(btn => btn.dataset.action)\r\n      .forEach(btn => me.attachEvent(btn, 'click', me.#onClick.bind(me)));\r\n  }\r\n\r\n  #onClick(e) {\r\n    const me = this;\r\n    e.preventDefault();\r\n    me.close();\r\n    const opt = { type: 'dropdown', source: e };\r\n    GSEvent.send(me, 'action', opt, true); // notify self\r\n  }\r\n\r\n  /**\r\n   * Show proper submenu on mouse over\r\n   * @param {Event} e \r\n   * @returns {void}\r\n   */\r\n  #onSubmenu(e) {\r\n    const me = this;\r\n    const li = e.target.closest('li');\r\n    const ul = li.closest('ul');\r\n    const sub = GSDOM.query(li, '.submenu');\r\n    requestAnimationFrame(() => {\r\n      GSDOM.queryAll(ul, '.submenu')\r\n        .forEach(el => el.classList.remove('show'));\r\n      if (sub) {\r\n        const val = li.offsetTop;\r\n        sub.style.top = `${val}px`;\r\n        sub.classList.add('show');\r\n        me.#updateSub(sub);\r\n      }\r\n    });\r\n  }\r\n\r\n  #updateSubmenus(overflowV = false, overflowH = false) {\r\n    const me = this;\r\n    me.#submenus.forEach(el => {\r\n      el.style.position = 'absolute';\r\n      el.style.left = 'inherit';\r\n      el.style.right = 'inherit';\r\n      el.style.top = 'inherit';\r\n      if (overflowH) {\r\n        el.style.right = '100%';\r\n      } else {\r\n        el.style.left = '100%';\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach mouseover for menu items that showa/hides submenu\r\n   */\r\n  #attachSubmenu() {\r\n    const me = this;\r\n    me.#items.forEach(el => me.attachEvent(el, 'mouseover', me.#onSubmenu.bind(me)));\r\n  }\r\n\r\n  #renderMenuDOM(children, level = 0) {\r\n    const me = this;\r\n    children = children || me.children;\r\n    const list = [];\r\n\r\n    const sub = level === 0 ? '' : 'submenu';\r\n\r\n    if (level === 0 && me.title) {\r\n      list.push('<div class=\"dropdown\">');\r\n      list.push(`<button class=\"btn dropdown-toggle ${me.css}\" type=\"button\" data-bs-toggle=\"dropdown\">`);\r\n      list.push(me.title);\r\n      list.push('</button>');\r\n    }\r\n\r\n    list.push(`<ul class=\"${sub} dropdown-menu ${me.dark ? 'dropdown-menu-dark' : ''}\">`);\r\n\r\n    Array.from(children).forEach(el => {\r\n      const isSub = el.childElementCount > 0;\r\n      if (isSub) list.push(me.#renderSub(el));\r\n      const html = isSub ? me.#renderMenuDOM(el.children, ++level) : me.#renderChild(el);\r\n      list.push(html);\r\n      if (sub) list.push(`</li>`);\r\n    });\r\n\r\n    list.push('</ul>');\r\n    if (level === 0 && me.title) list.push('</div>');\r\n    return list.join('');\r\n  }\r\n\r\n  #renderSub(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    return `<li><a class=\"dropdown-item\" href=\"#\">${name} &raquo; </a>`;\r\n  }\r\n\r\n  #renderChild(el) {\r\n    const name = GSAttr.get(el, 'name');\r\n    const header = GSAttr.get(el, 'header');\r\n    if (header) return `<li><h6 class=\"dropdown-header\"/>${header}</h6></li>`;\r\n    if (!name) return `<li><hr class=\"dropdown-divider\"/></li>`;\r\n    const attrs = GSItem.getAttrs(el).trim();\r\n    return attrs ? `<li><a class=\"dropdown-item\" href=\"#\" ${attrs} >${name}</a></li>` : '';\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * Json format: array of json or json (child elemetns stored in item property\r\n   * Any property will be rendered as gs-item element attribute\r\n   * Example: [{title:\"test2\", message:\"test2\", items: [{title:\"test2\", message:\"test2\"}]}]\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n    return data;\r\n  }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSLayout class\r\n * @module components/GSLayout\r\n */\r\n\r\n import GSItem from \"../base/GSItem.mjs\";\r\n import GSElement from \"../base/GSElement.mjs\";\r\n import GSID from \"../base/GSID.mjs\";\r\n import GSAttr from \"../base/GSAttr.mjs\";\r\n \r\n /**\r\n  * Renderer for panel layout \r\n  * @class\r\n  * @extends {GSElement}\r\n  */\r\n export default class GSLayout extends GSElement {\r\n \r\n     static {\r\n         customElements.define('gs-layout', GSLayout);\r\n         Object.seal(GSLayout);\r\n     }\r\n \r\n     constructor() {\r\n         super();\r\n         GSItem.validate(this, this.tagName);\r\n     }\r\n \r\n     async getTemplate(val = '') {\r\n         const me = this;\r\n         const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n         const html = await Promise.all(list);\r\n         const type = me.isVertical ? 'flex-column' : 'flex-row';\r\n         const top = me.isFlat ? '' : 'vh-100';\r\n         return `<div class=\"${top} d-flex flex-fill ${type} ${me.css}\" style=\"${this.getStyle()}\">${html.join('')}</div>`\r\n     }\r\n \r\n     /**\r\n      * Determine if gs-layout is nested in another layout\r\n      * If nested, rendering is flat.\r\n      * @returns {boolean}\r\n      */\r\n     get isFlat() {\r\n         const me = this;\r\n         if (me.owner instanceof GSLayout) return true;\r\n \r\n         const el = me.closest('gs-layout');\r\n         if (el && el !== me) return true;\r\n \r\n         const parent = GSComponents.getOwner(me); // me.parentElement\r\n         const style = window.getComputedStyle(parent);\r\n         return style.display === 'flex' && style.flexGrow !== '0';\r\n     }\r\n \r\n     get anchor() {\r\n         return 'afterend@self';\r\n     }\r\n \r\n     /**\r\n      * Generate html injection source for an gs-item\r\n      * \r\n      * @async\r\n      * @param {HTMLElement} el \r\n      * @returns {Promise<string>}\r\n      */\r\n     async #html(el) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const id = GSAttr.get(el, 'id');\r\n         const name = GSAttr.get(el, 'name');\r\n         const tpl = GSItem.getBody(el, me.isFlat);\r\n \r\n         const style = me.#style(el);\r\n         const fixed = style.length > 10 ? true : false;\r\n         const cls = me.#class(el, fixed);\r\n \r\n         const child = `<div class=\"${cls}\" id=\"${name || GSID.next()}\" ${style}>${tpl}</div>`;\r\n \r\n         if (res) {\r\n             const pos = me.#splitter(el);\r\n             if (pos == 0) return child;\r\n             let resize = '';\r\n             if (pos > 0) {\r\n                 resize = me.isVertical ? 'top' : 'start';\r\n             } else {\r\n                 resize = me.isVertical ? 'bottom' : 'end';\r\n             }\r\n             const split = `<gs-splitter resize=\"${resize}\" split=\"${me.isVertical ? 'horizontal' : 'vertical'}\" id=\"${id}\"></gs-splitter>`;\r\n             return pos == 1 ? [child, split].join('') : [split, child].join('');\r\n         }\r\n \r\n         return child;\r\n     }\r\n \r\n     /**\r\n      * Generate min & max width / height for an gs-item\r\n      * @param {HTMLElement} el \r\n      * @returns {string}\r\n      */\r\n     #style(el) {\r\n         const me = this;\r\n         const sfx = me.isVertical ? 'height' : 'width';\r\n         const max = GSAttr.getAsNum(el, 'max', 0);\r\n         const min = GSAttr.getAsNum(el, 'min', 0);\r\n         const smax = max > 0 ? `max-${sfx}: ${max}px;` : '';\r\n         const smin = min > 0 ? `min-${sfx}: ${min}px;` : '';\r\n         return ['style=\"', smax, smin, '\"'].join('');\r\n     }\r\n \r\n     /**\r\n     * Generate list of css classes for an gs-item\r\n     * @param {HTMLElement} el \r\n     * @returns {string}\r\n     */\r\n     #class(el, fixed = false) {\r\n         const me = this;\r\n         const res = me.#resizable(el);\r\n \r\n         const css = GSAttr.get(el, 'css');\r\n         let vpos = GSAttr.get(el, 'v-pos');\r\n         let hpos = GSAttr.get(el, 'h-pos');\r\n \r\n         hpos = hpos ? `justify-content-${hpos}` : '';\r\n         vpos = vpos ? `align-items-${vpos}` : '';\r\n \r\n         const cls = ['d-flex', hpos, vpos];\r\n         if (res == false && fixed == false) cls.push('flex-fill');\r\n \r\n         cls.push(css);\r\n \r\n         return cls.join(' ');\r\n     }\r\n \r\n     /**\r\n      * Detect splitter target (previous | next | not supported)\r\n      * @param {HTMLElement} el \r\n      * @returns {number} -1|0|1\r\n      */\r\n     #splitter(el) {\r\n         const me = this;\r\n         const start = el.previousElementSibling;\r\n         const end = el.nextElementSibling;\r\n         if (!end && !start) return 0;\r\n         if (!end) return -1;\r\n         if (!start) return 1;\r\n \r\n         if (!me.#resizable(end)) return 1;\r\n         if (!me.#resizable(start)) return -1;\r\n \r\n         return 0;\r\n     }\r\n \r\n     /**\r\n      * Check if gs-item element has gs-splitter\r\n      * @param {HTMLElement} el \r\n      * @returns {boolean}\r\n      */\r\n     #resizable(el) {\r\n         return GSAttr.getAsBool(el, 'resizable', false);\r\n     }\r\n \r\n     /**\r\n      * Check if layout is vertical or horizontal\r\n      * @returns {boolean}\r\n      */\r\n     get isVertical() {\r\n         return GSAttr.get(this, 'type', 'vertical') === 'vertical';\r\n     }\r\n \r\n     /**\r\n      * Get user defined css for a layout panel\r\n      * @returns {string}\r\n      */\r\n     get css() {\r\n         return GSAttr.get(this, 'css');\r\n     }\r\n \r\n     set css(val = '') {\r\n         return GSAttr.set(this, 'css', val);\r\n     }\r\n \r\n }\r\n \r\n ","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSList class\r\n * @module components/GSList\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for bootstrap list group \r\n * <gs-list css=\"\">\r\n *     <gs-item css=\"\" action=\"\" target=\"\" toggle=\"\" target=\"\" dismiss=\"\" template=\"\" title=\"\">\r\n * </gs-list>\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSList extends GSElement {\r\n\r\n\r\n    static {\r\n        customElements.define('gs-list', GSList);\r\n        Object.seal(GSList);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const html = await me.#render();\r\n        return `<div class=\"list-group ${me.css}\">${html}</div>`;\r\n    }\r\n\r\n    async #render() {\r\n        const me = this;\r\n        const list = GSItem.genericItems(me).map(el => me.#html(el));\r\n        //const html = await Promise.all(list);\r\n        // return html.join('');\r\n        return list.join('');\r\n    }\r\n\r\n    //async \r\n    #html(el) {\r\n        const me = this;\r\n        const message = me.#title(el);\r\n        //const tpl = await GSItem.getTemplate(el);\r\n        const tpl = GSItem.getBody(el);\r\n        const css = GSItem.getCSS(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const dataBS = GSItem.getAttrs(el);\r\n        \r\n        const icon = GSItem.getIcon(el);        \r\n        const icoCSS = icon ? `<i class=\"${icon}\"></i>` : ''\r\n\r\n        const active = me.#getActive(el) ? 'active' : '';\r\n        const select = me.selectable ? 'is=\"gs-ext-navlink\"' : 'ignore';\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n\r\n        return `<a  ${select} class=\"list-group-item list-group-item-action ${active} ${css}\"\r\n                href=\"${href}\" ${hreftgt} ${dataBS} ${dataAttrs}>${icoCSS} ${tpl || message}</a>`;\r\n    }\r\n\r\n    #title(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    get selectable() {\r\n        return GSAttr.getAsBool(this, 'selectable', true);\r\n    }\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @param {JSON|func|url} val \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n        return data;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNav class\r\n * @module components/GSNav\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for nav bar/list\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNav extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-nav', GSNav);\r\n        Object.seal(GSNav);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['data'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        if (name === 'data') return this.load(newValue);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const items = GSItem.genericItems(me);\r\n        //const btns = items.map( el => el.getTemplate()).join('');\r\n        const btns = items.map(el => me.#getTemplateChild(el));\r\n        //const tag = me.#isBar ? 'nav' : 'ul';\r\n        const css = me.#isBar ? '' : 'flex-column';\r\n\r\n        return `\r\n          <ul class=\"nav ${css} ${me.#cssnav}\">\r\n            ${btns.join('')}\r\n          </ul>\r\n        `;\r\n    }\r\n\r\n    #getTemplateChild(el) {\r\n        const me = this;\r\n        // return me.#isBar ? me.#btn(el) : me.#wrap(el);\r\n        return me.#wrap(el);\r\n    }\r\n\r\n    get #cssnav() {\r\n        return this.#getCssNav(this);\r\n    }\r\n\r\n    get #isBar() {\r\n        return GSAttr.getAsBool(this, 'bar', true);\r\n    }\r\n\r\n    #wrap(el) {\r\n        const me = this;\r\n        return `<li class=\"nav-item ${me.#getCssNavWrap(el)}\">${me.#btn(el)}</li>`;\r\n    }\r\n\r\n    #btn(el) {\r\n        const me = this;\r\n        const dataAttrs = GSAttr.dataToString(el);\r\n        const cssnav = me.#getCssNav(el);\r\n        const cssactive = me.#getCssActiveTab(el);\r\n        const title = me.#getTitle(el);\r\n        const icon = GSItem.getIcon(el);\r\n        const href = GSItem.getHref(el);\r\n\r\n        const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n        //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n        const contentTpl = `${iconTpl} ${title}`;\r\n        const hreftgt = href && href !=='#' ? `target=${GSItem.getTarget(el)}` : '';\r\n        const attrs =GSItem.getAttrs(el);\r\n\r\n        return `<a type=\"button\" role=\"nav\" is=\"gs-ext-navlink\" class=\"nav-link ${cssnav} ${cssactive}\" \r\n                href=\"${href}\" ${hreftgt} id=\"${GSID.id}-nav\" ${attrs} ${dataAttrs}>${contentTpl}</a>`;\r\n\r\n    }\r\n\r\n    #getCssNavWrap(el) {\r\n        return GSAttr.get(el, 'css-nav-wrap');\r\n    }\r\n\r\n    #getCssNav(el) {\r\n        return GSAttr.get(el, 'css-nav');\r\n    }\r\n\r\n    #getCssActiveTab(el) {\r\n        return this.#getActive(el) ? 'active' : '';\r\n    }\r\n\r\n    #getActive(el) {\r\n        return GSAttr.getAsBool(el, 'active');\r\n    }\r\n\r\n    #getTitle(el) {\r\n        return GSAttr.get(el, 'title');\r\n    }\r\n\r\n\r\n    /**\r\n     * Load data from various sources\r\n     * \r\n     * @async\r\n     * @param {JSON|func|url} val \r\n     * @returns {Promise}\r\n     */\r\n    async load(val = '') {\r\n        const data = await GSLoader.loadData(val);\r\n        if (!GSUtil.isJsonType(data)) return;\r\n        const me = this;\r\n        const src = GSItem.generateItem(data);\r\n        GSDOM.setHTML(me, src);\r\n        GSEvent.deattachListeners(me);\r\n        me.connectedCallback();\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSOffcanvas class\r\n * @module components/GSOffcanvas\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Bootstrap modal dialog support\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSOffcanvas extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-offcanvas', GSOffcanvas);\r\n    Object.seal(GSOffcanvas);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['title', 'visible', 'backdrop', 'placement', 'css', 'closable'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.css = this.css || 'border shadow-sm';\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    me.#update(name, oldValue, newValue);\r\n    if (name === 'visible') GSEvent.send(me, 'action', { type: 'offcanvas', ok: newValue });\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    return val ? super.getTemplate(val) : this.#html();\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    super.onReady();\r\n    me.attachEvent(me.#backdropEl, 'click', me.close.bind(me));\r\n    if (me.autoclose) {\r\n      me.attachEvent(me.#canvasEl, 'mouseleave', me.close.bind(me));\r\n      if (me.min > 0) me.attachEvent(me.#canvasEl, 'mouseenter', me.open.bind(me));\r\n    }\r\n    me.#update(null, true, false);\r\n  }\r\n\r\n  #update(name = '', oldValue = '', newValue = '') {\r\n\r\n    if (oldValue === newValue) return;\r\n    const me = this;\r\n\r\n    if (me.#titleEl) GSDOM.setHTML(me.#titleEl, me.title);\r\n\r\n    GSDOM.toggleClass(me.#canvasEl, true, 'visible');\r\n    GSDOM.toggleClass(me.#closeEl, !me.closable, 'invisible');\r\n    GSDOM.toggleClass(me.#backdropEl, me.backdrop && me.visible, 'show');\r\n\r\n    me.#updateAnim();\r\n    me.#updateShow();\r\n    me.#updateBackdrop();\r\n    me.#updatePlacement(name, oldValue, newValue);\r\n    me.#updateCSS(name, oldValue, newValue);\r\n\r\n  }\r\n\r\n  #updateAnim() {\r\n\r\n    const me = this;\r\n    if (!me.autoclose) return;\r\n\r\n    const open = me.visible;\r\n    const pos = me.isHorizontal ? 'width' : 'height';\r\n    const val = open ? me.max : me.min;\r\n\r\n    me.#canvasEl.style.transitionProperty = pos;\r\n    me.#canvasEl.style.transitionDuration = `${me.transitionDuration}s`;\r\n    me.#canvasEl.style.transitionTimingFunction = me.transitionFunction;\r\n    me.#canvasEl.style[pos] = `${val}px`;\r\n  }\r\n\r\n  #updateShow() {\r\n    const me = this;\r\n    if (me.min === 0 && me.visible) return GSDOM.toggleClass(me.#canvasEl, me.visible, 'show');\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#canvasEl, me.min === 0 ? me.visible : true, 'show');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updateBackdrop() {\r\n    const me = this;\r\n    setTimeout(() => {\r\n      GSDOM.toggleClass(me.#backdropEl, !(me.backdrop && me.visible), 'invisible');\r\n    }, GSDOM.SPEED);\r\n  }\r\n\r\n  #updatePlacement(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'placement') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, `offcanvas-${oldValue}`);\r\n    GSDOM.toggleClass(me.#canvasEl, true, `offcanvas-${newValue}`);\r\n  }\r\n\r\n  #updateCSS(name = '', oldValue = '', newValue = '') {\r\n    if (name !== 'css') return;\r\n    const me = this;\r\n    GSDOM.toggleClass(me.#canvasEl, false, oldValue);\r\n    GSDOM.toggleClass(me.#canvasEl, true, newValue);\r\n  }\r\n\r\n  get isVertical() {\r\n    return !this.isHorizontal;\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.placement === 'start' || this.placement === 'end';\r\n  }\r\n\r\n  open() {\r\n    this.visible = true;\r\n  }\r\n\r\n  close() {\r\n    this.visible = false;\r\n  }\r\n\r\n  toggle() {\r\n    this.visible = !this.visible;\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  get cssTitle() {\r\n    return GSAttr.get(this, 'css-title', 'fs-5');\r\n  }\r\n\r\n  get cssHead() {\r\n    return GSAttr.get(this, 'css-head', '');\r\n  }\r\n\r\n  get cssBody() {\r\n    return GSAttr.get(this, 'css-body', '');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get transitionDuration() {\r\n    return GSAttr.getAsNum(this, 'duration', '0.2');\r\n  }\r\n\r\n  set transitionDuration(val = '') {\r\n    GSAttr.set(this, 'duration', val);\r\n  }\r\n\r\n  get transitionFunction() {\r\n    return GSAttr.get(this, 'transition', 'linear');\r\n  }\r\n\r\n  set transitionFunction(val = '') {\r\n    GSAttr.set(this, 'transition', val);\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', false);\r\n  }\r\n\r\n  set visible(val = false) {\r\n    GSAttr.setAsBool(this, 'visible', val);\r\n  }\r\n\r\n  get autoclose() {\r\n    return GSAttr.getAsBool(this, 'autoclose', false);\r\n  }\r\n\r\n  set autoclose(val = false) {\r\n    GSAttr.setAsBool(this, 'autoclose', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable', true);\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.setAsBool(this, 'closable', val);\r\n    this.#update();\r\n  }\r\n\r\n  get placement() {\r\n    const me = this;\r\n    return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'start');\r\n  }\r\n\r\n  set placement(val = '') {\r\n    return GSAttr.set(this, 'placement', val);\r\n  }\r\n\r\n  get backdrop() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'backdrop',  me.target?.dataset?.bsBackdrop || 'false');\r\n  }\r\n\r\n  set backdrop(val = '') {\r\n    return GSAttr.set(this, 'backdrop', val);\r\n  }\r\n\r\n  get scroll() {\r\n    const me = this;\r\n    return GSAttr.getAsBool(me, 'scroll', me.target?.dataset?.bsScroll || 'false');\r\n  }\r\n\r\n  set scroll(val = '') {\r\n    return GSAttr.set(this, 'scroll', val);\r\n  }\r\n\r\n  get min() {\r\n    return GSAttr.getAsNum(this, 'min', 0);\r\n  }\r\n\r\n  set min(val = false) {\r\n    GSAttr.set(this, 'min', GSUtil.asNum(val));\r\n  }\r\n\r\n  get max() {\r\n    return GSAttr.getAsNum(this, 'max', 0);\r\n  }\r\n\r\n  set max(val = false) {\r\n    GSAttr.set(this, 'max', GSUtil.asNum(val));\r\n  }\r\n\r\n  get #canvasEl() {\r\n    return this.query('.offcanvas');\r\n  }\r\n\r\n  get #titleEl() {\r\n    return this.query('.offcanvas-title');\r\n  }\r\n\r\n  get #backdropEl() {\r\n    return this.query('.offcanvas-backdrop');\r\n  }\r\n\r\n  get #closeEl() {\r\n    return this.query('.btn-close[data-bs-dismiss=\"offcanvas\"]');\r\n  }\r\n\r\n  get #headSlot() {\r\n    return this.querySelector('[slot=\"header\"]');\r\n  }\r\n\r\n  #html() {\r\n    const me = this;\r\n    const title = me.title ? `<div class=\"offcanvas-title ${me.cssTitle}\">${me.title}</div>` : '';\r\n    const closeBtn = me.closable ? `<button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\"></button>` : '';\r\n    const header = title || closeBtn || me.#headSlot ? `<div class=\"offcanvas-header ${me.cssHead}\"><slot name=\"header\">${title}${closeBtn}</slot></div>` : '';\r\n    return `\r\n      <div class=\"offcanvas offcanvas-${me.placement} overflow-hidden ${me.css}\" data-bs-scroll=\"${me.scroll}\" data-bs-backdrop=\"${me.backdrop}\" tabindex=\"-1\">      \r\n      ${header}\r\n      <div class=\"offcanvas-body  ${me.cssBody}\">\r\n        <slot name=\"body\"></slot>\r\n      </div>\r\n    </div>\r\n    <div class=\"offcanvas-backdrop fade ${me.backdrop && me.visible ? 'show' : 'invisible'}\"></div>\r\n    `\r\n  }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopper class\r\n * @module base/GSPopper\r\n */\r\n\r\nimport GSLog from \"./GSLog.mjs\";\r\n\r\n/**\r\n * A generic set of static functions used across GS WebComponents framework\r\n * used for placing elements at fixed positions.\r\n * Also used to replace Bootstrap popper.\r\n * @class\r\n */\r\nexport default class GSPopper {\r\n\r\n\t/**\r\n\t * Get element offset position\r\n\t * Returns absolute position {left:0, top:0, width:0, height:0,centeY:0 centerX:0}\r\n\t * @param {HTMLElement} el \r\n\t * @returns {object} \r\n\t */\r\n\tstatic getOffset(el) {\r\n\t\tconst rect = el.getBoundingClientRect();\r\n\t\tconst sx = window.scrollX;\r\n\t\tconst sy = window.scrollY;\r\n\t\tconst obj = {\r\n\t\t\tleft: rect.left + sx,\r\n\t\t\tright: rect.right + sx,\r\n\t\t\ttop: rect.top + sy,\r\n\t\t\tbottom: rect.bottom + sy,\r\n\t\t\theight: rect.height,\r\n\t\t\twidth: rect.width,\r\n\t\t\tx: rect.x + sx,\r\n\t\t\ty: rect.y + sy\r\n\t\t};\r\n\t\tobj.centerX = obj.left + (obj.width / 2);\r\n\t\tobj.centerY = obj.top + (obj.height / 2);\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Return element position and size without padding\r\n\t * Returned objext is the same format as native getBoundingRect\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object} \r\n\t */\r\n\tstatic boundingRect(element, calcPadding) {\r\n\r\n\t\tconst rect = element.getBoundingClientRect();\r\n\t\tconst padding = GSPopper.elementPadding(calcPadding ? element : null);\r\n\r\n\t\tconst paddingX = padding.x;\r\n\t\tconst paddingY = padding.y;\r\n\r\n\t\tconst elementWidth = element.clientWidth - paddingX;\r\n\t\tconst elementHeight = element.clientHeight - paddingY;\r\n\r\n\t\tconst elementX = rect.left + padding.left;\r\n\t\tconst elementY = rect.top + padding.top;\r\n\r\n\t\tconst centerX = (elementWidth / 2) + elementX;\r\n\t\tconst centerY = elementY + (elementHeight / 2);\r\n\r\n\t\treturn {\r\n\t\t\twidth: elementWidth,\r\n\t\t\theight: elementHeight,\r\n\t\t\ttop: elementY,\r\n\t\t\tleft: elementX,\r\n\t\t\tx: elementX,\r\n\t\t\ty: elementY,\r\n\t\t\tcenterX: centerX,\r\n\t\t\tcenterY: centerY\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate element padding\r\n\t * @param {HTMLElement} element \r\n\t * @returns {object}\r\n\t */\r\n\tstatic elementPadding(element) {\r\n\r\n\t\tconst obj = {\r\n\t\t\tleft: 0,\r\n\t\t\tright: 0,\r\n\t\t\ttop: 0,\r\n\t\t\tbottom: 0,\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t};\r\n\r\n\t\tconst isEl = element instanceof HTMLElement;\r\n\t\tif (!isEl) return obj;\r\n\t\tconst cs = getComputedStyle(element);\r\n\r\n\t\tobj.left = parseFloat(cs.paddingLeft);\r\n\t\tobj.right = parseFloat(cs.paddingRight);\r\n\t\tobj.top = parseFloat(cs.paddingTop);\r\n\t\tobj.bottom = parseFloat(cs.paddingBottom);\r\n\t\tobj.x = obj.left + obj.right;\r\n\t\tobj.y = obj.top + obj.bottom;\r\n\r\n\t\treturn obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Fixed positioning on a viewport.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupFixed(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsource.style.position = 'fixed';\r\n\t\tsource.style.top = '0px';\r\n\t\tsource.style.left = '0px';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.padding = '0px';\r\n\r\n\t\tconst offh = source.clientHeight / 2;\r\n\t\tconst offw = source.clientWidth / 2;\r\n\r\n\t\tconst rect = GSPopper.boundingRect(target, arrow instanceof HTMLElement);\r\n\t\tconst arect = GSPopper.#updateArrow(source, arrow, pos);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: rect.centerX,\r\n\t\t\ty: rect.centerY,\r\n\t\t\toffH: offh,\r\n\t\t\toffW: offw,\r\n\t\t\tsrcH: source.clientHeight,\r\n\t\t\tsrcW: source.clientWidth\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcFixed(pos, obj, rect, arect);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Place element around target element. Bootstrap support for popup etc.\r\n\t * @param {string} placement Location on target element top|bottom|left|right\r\n\t * @param {HTMLElement} source Element to show\r\n\t * @param {HTMLElement} target Element location at which to show\r\n\t * @param {boolean} arrow if true, will calculate arrow position\r\n\t * @returns {void}\r\n\t */\r\n\tstatic popupAbsolute(placement = 'top', source, target, arrow) {\r\n\r\n\t\tif (!source) return false;\r\n\t\tif (!target) return false;\r\n\r\n\t\tconst pos = GSPopper.#fromPlacement(placement);\r\n\r\n\t\tif (!GSPopper.#isPlacementValid(pos)) {\r\n\t\t\tGSLog.warn(source, `Invalid popover position: ${placement}!`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tarrow.style.position = 'absolute';\r\n\t\tsource.style.position = 'absolute';\r\n\t\tsource.style.margin = '0px';\r\n\t\tsource.style.inset = GSPopper.#inset(pos);\r\n\r\n\t\tconst srect = source.getBoundingClientRect();\r\n\t\tconst arect = arrow.getBoundingClientRect();\r\n\t\tconst offset = GSPopper.getOffset(target);\r\n\r\n\t\tconst obj = {\r\n\t\t\tx: offset.centerX,\r\n\t\t\ty: offset.centerY\r\n\t\t}\r\n\r\n\t\tconst arr = {\r\n\t\t\tx: (srect.width / 2) - (arect.width / 2),\r\n\t\t\ty: (srect.height / 2) - (arect.height / 2)\r\n\t\t}\r\n\r\n\t\tGSPopper.#calcAbsolute(pos, obj, arr, srect, arect, offset);\r\n\r\n\t\tsource.style.transform = `translate(${obj.x}px, ${obj.y}px)`;\r\n\t\tarrow.style.transform = `translate(${arr.x}px, ${arr.y}px)`;\r\n\t\tarrow.style.top = arr.top ? arr.top : '';\r\n\t\tarrow.style.left = arr.left ? arr.left : '';\r\n\r\n\t}\r\n\r\n\tstatic #calcAbsolute(pos, obj, arr, srect, arect, offset) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = -1 * (srect.bottom - offset.top + arect.height);\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tarr.y = 0;\r\n\t\t\tarr.left = '0px';\r\n\t\t\tobj.x = obj.x - (srect.width / 2);\r\n\t\t\tobj.y = offset.bottom + arect.height;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = -1 * (srect.right - offset.left + arect.width);\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tarr.x = 0;\r\n\t\t\tarr.top = '0px';\r\n\t\t\tobj.x = offset.right + arect.width;\r\n\t\t\tobj.y = obj.y - (srect.height / 2);\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #calcFixed(pos, obj, trect, arect) {\r\n\t\tif (pos.isTop) {\r\n\t\t\tobj.y = trect.top - obj.srcH - arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isBottom) {\r\n\t\t\tobj.y = trect.top + trect.height + arect.size;\r\n\t\t\tobj.x = obj.x - obj.offW;\r\n\t\t} else if (pos.isStart) {\r\n\t\t\tobj.x = trect.left - obj.srcW - arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t} else if (pos.isEnd) {\r\n\t\t\tobj.x = trect.left + trect.width + arect.size;\r\n\t\t\tobj.y = obj.y - obj.offH + arect.size;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #inset(obj) {\r\n\t\tif (obj.isTop) {\r\n\t\t\treturn 'auto auto 0px 0px';\r\n\t\t} else if (obj.isBottom) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t} else if (obj.isStart) {\r\n\t\t\treturn '0px 0px auto auto';\r\n\t\t} else if (obj.isEnd) {\r\n\t\t\treturn '0px auto auto 0px';\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #isPlacementValid(obj) {\r\n\t\treturn obj.isStart || obj.isEnd || obj.isTop || obj.isBottom;\r\n\t}\r\n\r\n\tstatic #fromPlacement(placement) {\r\n\t\treturn {\r\n\t\t\tisStart: placement == 'start' || placement == 'left',\r\n\t\t\tisEnd: placement == 'end' || placement == 'right',\r\n\t\t\tisTop: placement == 'top',\r\n\t\t\tisBottom: placement == 'bottom'\r\n\t\t}\r\n\t}\r\n\r\n\tstatic #updateArrow(element, arrow, pos) {\r\n\r\n\t\tif (!arrow) return { x: 0, y: 0, size: 0, width: 0, height: 0 };\r\n\t\tlet shift = 0;\r\n\t\tconst erect = GSPopper.boundingRect(element);\r\n\t\tconst arect = GSPopper.boundingRect(arrow);\r\n\r\n\t\tconst size = pos.isStart || pos.isEnd ? arect.width : arect.height;\r\n\r\n\t\tconst arrowPosW = (erect.width / 2) - (size / 2);\r\n\t\tconst arrowPosH = (erect.height / 2) - (size / 2);\r\n\r\n\t\tarect.size = size;\r\n\t\tarrow.style.position = 'absolute';\r\n\r\n\t\tif (pos.isStart || pos.isEnd) {\r\n\t\t\tarrow.style.left = null;\r\n\t\t\tarrow.style.top = '0px';\r\n\t\t\tshift = pos.isStart ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${shift}px, ${arrowPosH / 2}px)`;\r\n\t\t} else {\r\n\t\t\tarrow.style.top = null;\r\n\t\t\tarrow.style.left = '0px';\r\n\t\t\tshift = pos.isTop ? size : -1 * size;\r\n\t\t\tarrow.style.transform = `translate(${arrowPosW}px, ${shift}px)`;\r\n\t\t}\r\n\r\n\t\treturn arect;\r\n\t}\r\n\r\n\tstatic {\r\n\t\tObject.seal(GSPopper);\r\n\t\twindow.GSPopper = GSPopper;\r\n\t}\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopover class\r\n * @module components/GSPopover\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * https://getbootstrap.com/docs/5.1/components/popovers/\r\n * Process Bootstrap popover definition\r\n * <gs-popover ref=\"#el_id\" placement=\"top\" title=\"\" content=\"\" trigger=\"focus hover\"></gs-popover>\r\n * \r\n * TODO - only basic implementation is done, more work required\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopover extends GSElement {\r\n\r\n    #unfocus = false;\r\n\r\n    static {\r\n        customElements.define('gs-popover', GSPopover);\r\n        Object.seal(GSPopover);\r\n        GSDOMObserver.registerFilter(GSPopover.#onMonitorFilter, GSPopover.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {void}\r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSPopover.#isPopover(el) && !GSPopover.#hasPopover(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gs-popover to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const popover = document.createElement('gs-popover');\r\n        popover.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', popover);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        if (me.isHoverTrigger) {\r\n            GSEvent.attach(me, me.target, 'mouseover', me.show.bind(me));\r\n            GSEvent.attach(me, me.target, 'mouseout', me.hide.bind(me));\r\n        }\r\n        if (me.isFocusTrigger) {\r\n            GSEvent.attach(me, document.body, 'click', me.#focus.bind(me));\r\n        }\r\n    }\r\n\r\n    #render(source) {\r\n        const me = this;\r\n        const arrowEl = source.querySelector('div.popover-arrow');\r\n        GSPopper.popupAbsolute(me.placement, source, me.target, arrowEl);\r\n        return source;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        const head = me.title ? `<div class=\"popover-header ${me.cssHead}\">${me.title}</div>` : '';\r\n        return `\r\n        <div class=\"popover bs-popover-auto fade ${me.css}\" data-popper-placement=\"${me.placement}\" style=\"${this.getStyle()}\" role=\"tooltip\">\r\n            <div class=\"popover-arrow\"></div>\r\n            ${head}\r\n            <div class=\"popover-body\">${me.content}</div>\r\n        </div>            \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get cssHead() {\r\n        return GSAttr.get(this, 'css-head', 'fs-3');\r\n    }\r\n\r\n    set cssHead(val = '') {\r\n        return GSAttr.set(this, 'css-head', val);\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get content() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'content', me.target?.dataset?.bsContent ||'');\r\n    }\r\n\r\n    set content(val = '') {\r\n        return GSAttr.set(this, 'content', val);\r\n    }\r\n\r\n    get trigger() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'trigger', me.target?.dataset?.bsTrigger || 'hover focus');\r\n    }\r\n\r\n    set trigger(val = '') {\r\n        return GSAttr.set(this, 'trigger', val);\r\n    }\r\n\r\n    get isFocusTrigger() {\r\n        return this.trigger.includes('focus');\r\n    }\r\n\r\n    get isHoverTrigger() {\r\n        return this.trigger.includes('hover');\r\n    }\r\n\r\n    get visible() {\r\n        return this.innerHTML.length !== 0;\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    async getTemplate(def = '') {\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * Show popover     \r\n     */\r\n    show() {\r\n        const me = this;\r\n        const el = GSDOM.parse(me.#html, true);\r\n        me.insertAdjacentElement('afterbegin', el);\r\n        requestAnimationFrame(() => {\r\n            me.#render(el);\r\n            GSDOM.toggleClass(el, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide popover\r\n     * @returns {boolean}\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        if (me.#unfocus) return false;\r\n        setTimeout(() => {\r\n            GSDOM.setHTML(me, '');\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle popover on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.visible ? me.hide() : me.show();\r\n    }\r\n\r\n    #focus(e) {\r\n        const me = this;\r\n        if (me.#unfocus) {\r\n            me.#unfocus = false;\r\n            me.hide();\r\n            return;\r\n        }\r\n        const openable = !me.isHoverTrigger;\r\n        if (e.target == me.target) {\r\n            if (me.visible) {\r\n                me.#unfocus = true;\r\n            } else if (openable) {\r\n                me.show();\r\n            }\r\n        } else if (openable && me.visible) me.hide();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean}\r\n     */\r\n    static #hasPopover(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling ) instanceof GSPopover;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isPopover(el) {\r\n        return el?.dataset?.bsContent && el?.dataset?.bsToggle === 'popover';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPopup class\r\n * @module components/GSPopup\r\n */\r\n\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSComponents from \"../base/GSComponents.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Popup panel\r\n * NOTE: Must be rendered in body, as transform_translate(...) issues\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPopup extends GSElement {\r\n\r\n    // element that opened context\r\n    #caller = null;\r\n    #online = false;\r\n    #ready = false;\r\n    #attached = false;\r\n\r\n    static {\r\n        customElements.define('gs-popup', GSPopup);\r\n        Object.seal(GSPopup);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['visible', 'css'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'visible') {\r\n            me.#resize();\r\n            GSDOM.toggleClass(me.#panel, !me.visible, 'invisible');\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        super.connectedCallback();\r\n        const me = this;\r\n        me.#online = true;\r\n        me.attachEvent(me, 'form', me.#onForm.bind(me));\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const tpl = await super.getTemplate(val);\r\n        const state = me.visible ? '' : 'invisible';\r\n\r\n        if (tpl) {\r\n            requestAnimationFrame(()=>{\r\n                const slot = GSDOM.parse(tpl);\r\n                for (let el of slot.body.children) {\r\n                    GSDOM.appendChild(me, el);\r\n                }\r\n            });\r\n        }\r\n\r\n        return `<div class=\"position-${me.position} ${me.css} ${state}\" style=\"${this.getStyle()}\"><slot></slot></div>`;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (me.#ready) return;\r\n        me.#ready = true;\r\n        me.#onReady();\r\n        super.onReady();\r\n    }\r\n\r\n    get isFlat() {\r\n        return this.parentElement !== document.body;\r\n    }\r\n\r\n    /**\r\n     * NOTE: Fixed positioning must be rendered in body element \r\n     * to prevent css translate coordinates.\r\n     */\r\n    get anchor() {\r\n        return 'beforeend@body';\r\n    }\r\n\r\n    get #panel() {\r\n        return this.query('div');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Event on target element used to trigger popup\r\n     */\r\n    get event() {\r\n        return GSAttr.get(this, 'event', 'click');\r\n    }\r\n\r\n    set event(val = '') {\r\n        return GSAttr.set(this, 'event', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me?.target?.datalist?.bsPlacement || '');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    /**\r\n     * CSS position value (absolute, fixed, relative ...)\r\n     */\r\n    get position() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'position', 'absolute');\r\n    }\r\n\r\n    set position(val = '') {\r\n        return GSAttr.set(this, 'position', val);\r\n    }\r\n\r\n    /**\r\n     * Where to place popup relative to target element, only if v-pos and h-pos not used\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'target');\r\n    }\r\n\r\n    set target(val = '') {\r\n        return GSAttr.set(this, 'target', val);\r\n    }\r\n\r\n    /**\r\n     * Set popup visible or hiden\r\n     */\r\n    get visible() {\r\n        return GSAttr.getAsBool(this, 'visible', false);\r\n    }\r\n\r\n    set visible(val = '') {\r\n        return GSAttr.setAsBool(this, 'visible', val);\r\n    }\r\n\r\n    /**\r\n     * Should auto close popup on mouse leave\r\n     */\r\n    get autoclose() {\r\n        return GSAttr.getAsBool(this, 'autoclose', true);\r\n    }\r\n\r\n    set autoclose(val = '') {\r\n        return GSAttr.getAsBool(this, 'autoclose', val);\r\n    }\r\n\r\n    /**\r\n     * X-Axis popup position\r\n     */\r\n    get hPos() {\r\n        return GSAttr.getAsNum(this, 'h-pos');\r\n    }\r\n\r\n    set hPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-pos', val);\r\n    }\r\n\r\n    /**\r\n     * Y-Axis popup position\r\n     */\r\n    get vPos() {\r\n        return GSAttr.getAsNum(this, 'v-pos');\r\n    }\r\n\r\n    set vPos(val = '') {\r\n        return GSAttr.setAsNum(this, 'v-pos', val);\r\n    }\r\n\r\n\r\n    set wMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-max', val);\r\n    }\r\n\r\n    get wMax() {\r\n        return GSAttr.getAsNum(this, 'w-max');\r\n    }\r\n\r\n    set wMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'w-min', val);\r\n    }\r\n\r\n    get wMin() {\r\n        return GSAttr.getAsNum(this, 'w-min');\r\n    }\r\n\r\n    set hMax(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-max', val);\r\n    }\r\n\r\n    get hMax() {\r\n        return GSAttr.getAsNum(this, 'h-max');\r\n    }\r\n\r\n    set hMin(val = '') {\r\n        return GSAttr.setAsNum(this, 'h-min', val);\r\n    }\r\n\r\n    get hMin() {\r\n        return GSAttr.getAsNum(this, 'h-min');\r\n    }\r\n\r\n    close(e) {\r\n        const me = this;\r\n        me.visible = false;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            const opt = { type: 'popup', option: e.target, caller: me.#caller, data: null };\r\n            GSEvent.send(me, 'action', opt, true, true);\r\n        }\r\n    }\r\n\r\n    open() {\r\n        this.visible = true;\r\n    }\r\n\r\n    toggle(e) {\r\n        const me = this;\r\n        if (e) return me.#onPopup(e);\r\n        me.visible = !me.visible;\r\n    }\r\n\r\n    /**\r\n     * Show popup at x/y position on the screen\r\n     * @param {number} x \r\n     * @param {number} y \r\n     * @returns {void}\r\n     */\r\n    popup(x = 0, y = 0) {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        requestAnimationFrame(() => {\r\n            me.visible = true;\r\n            panel.style.top = '0px';\r\n            panel.style.left = '0px';\r\n            me.#resize();\r\n            panel.style.transform = `translate(${x}px, ${y}px)`;\r\n        });\r\n\r\n    }\r\n\r\n    #resize() {\r\n        const me = this;\r\n        const panel = me.#panel;\r\n        if (!panel) return;\r\n        if (!me.visible) me.style.transform = 'unset';\r\n        if (me.wMax) panel.style.maxWidth = `${me.wMax}px`;\r\n        if (me.wMin) panel.style.minWidth = `${me.wMin}px`;\r\n        if (me.hMax) panel.style.maxHeight = `${me.hMax}px`;\r\n        if (me.hMin) panel.style.minHeight = `${me.hMin}px`;\r\n    }\r\n\r\n    #onResize(e) {\r\n        this.close();\r\n    }\r\n\r\n    #onPopup(e) {\r\n        const me = this;\r\n        me.#caller = e;\r\n        if (e instanceof Event) {\r\n            e.preventDefault();\r\n            me.#caller = e.composedPath().filter(e => (!(e instanceof HTMLSlotElement)))[0];\r\n        }\r\n\r\n        if (me.placement) {\r\n            GSPopper.popupFixed(me.placement, me.#panel, me.#caller);\r\n            me.visible = true;\r\n            return;\r\n        }\r\n        let x = e.clientX, y = e.clientY;\r\n        const rect = me.#panel.getBoundingClientRect();\r\n        const overflowH = x + rect.width > window.innerWidth;\r\n        const overflowV = y + rect.height > window.innerHeight;\r\n        if (overflowH) x = window.innerWidth - rect.width;\r\n        if (overflowV) y = window.innerHeight - rect.height;\r\n        me.popup(x, y);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Attach popup to target\r\n     * \r\n     * @async\r\n     * @returns {Promise}\r\n     */\r\n    async #attachTarget() {\r\n        const me = this;\r\n        if (!me.target) return;\r\n        if (me.#attached) return;\r\n        const targets = GSDOM.queryAll(document.documentElement, me.target);\r\n        if (targets.length === 0) {\r\n            if (me.#online) {\r\n                await GSUtil.timeout(1000);\r\n                requestAnimationFrame(() => {\r\n                    me.#attachTarget();\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        me.#attached = true;\r\n        me.event.split(' ').forEach(e => {\r\n            targets.forEach(target => me.attachEvent(target, e, me.#onPopup.bind(me)));\r\n        });\r\n        me.removeEvent(document, 'gs-components');\r\n    }\r\n\r\n    #onReady() {\r\n        const me = this;\r\n        me.#attachTarget();\r\n        me.attachEvent(document, 'gs-component', me.#attachTarget.bind(me));\r\n        me.attachEvent(window, 'resize', me.#onResize.bind(me));\r\n        me.#resize();\r\n        if (me.autoclose) me.attachEvent(me.#panel, 'mouseleave', me.close.bind(me));\r\n        if (me.visible) me.popup(me.hPos, me.vPos);\r\n    }\r\n\r\n    #onForm(e) {\r\n        const me = this;\r\n        let sts = me.#validateCaller(e, e.target, 'submit', 'GS-POPUP');\r\n        if (!sts) return;\r\n        GSEvent.prevent(e);\r\n        sts = GSEvent.send(me, 'data', { type: 'popup', data: e.detail.data, evt: e }, true, true, true);\r\n        if (sts) me.close();\r\n    }\r\n\r\n    #validateCaller(e, own, type, comp) {\r\n        if (e.detail.type !== type) return false;\r\n        const parent = GSComponents.getOwner(own, comp);\r\n        return parent == this;\r\n    }\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSProgress class\r\n * @module components/GSProgress\r\n */\r\n\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap progress component\r\n * <gs-progress css=\"\" min=\"0\" max=\"100\" value=\"0\"></gs-progress>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSProgress extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-progress', GSProgress);\r\n        Object.seal(GSProgress);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['min', 'max', 'now'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        const bar = me.#bar;\r\n        if (!bar) return;\r\n        GSAttr.set(bar, `aria-value${name}`, newValue);\r\n        bar.style.width = `${me.percentage}%`;\r\n        if (me.label) GSDOM.setHTML(bar, me.#fromLabel());\r\n    }\r\n\r\n    #fromLabel() {\r\n        const me = this;\r\n        const opt = { now: me.value, min: me.min, max: me.max, percentage: me.percentage };\r\n        return GSUtil.fromTemplateLiteral(me.label, opt);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const label = me.label ? GSUtil.fromTemplateLiteral(me.label, { now: me.value, min: me.min, max: me.max, percentage: me.percentage }) : '';\r\n        return `\r\n        <div class=\"progress\" style=\"${this.getStyle()}\">\r\n            <div class=\"progress-bar ${me.css}\" role=\"progressbar\" style=\"width: ${me.percentage}%\" aria-valuenow=\"${me.value}\" aria-valuemin=\"${me.min}\" aria-valuemax=\"${me.max}\">${label}</div>\r\n        </div>    \r\n        `;\r\n    }\r\n\r\n    get #bar() {\r\n        return this.query('.progress-bar');\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    get anchor() {\r\n        return 'self';\r\n    }\r\n\r\n    get percentage() {\r\n        const me = this;\r\n        return Math.trunc((me.value / me.max) * 100);\r\n    }\r\n\r\n    get value() {\r\n        return GSAttr.getAsNum(this, 'now', 0);\r\n    }\r\n\r\n    set value(val = '') {\r\n        if (!GSUtil.isNumber(val)) return false;\r\n        const me = this;\r\n        let v = GSUtil.asNum(val) || me.value;\r\n        if (v > me.max) v = me.max;\r\n        if (v < me.min) v = me.min;\r\n        return GSAttr.set(me, 'now', v);\r\n    }\r\n\r\n    get min() {\r\n        return GSAttr.getAsNum(this, 'min', 0);\r\n    }\r\n\r\n    set min(val = '') {\r\n        return GSAttr.setAsNum(this, 'min', 0);\r\n    }\r\n\r\n    get max() {\r\n        return GSAttr.getAsNum(this, 'max', 100);\r\n    }\r\n\r\n    set max(val = '') {\r\n        return GSAttr.setAsNum(this, 'max', 100);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get label() {\r\n        return GSAttr.get(this, 'label', '');\r\n    }\r\n\r\n    set label(val = '') {\r\n        return GSAttr.set(this, 'label', val);\r\n    }\r\n\r\n    increase(val = 1) {\r\n        const me = this;\r\n        me.value = me.value + val;\r\n        return true;\r\n    }\r\n\r\n    decrease(val = 1) {\r\n        const me = this;\r\n        me.value = me.value - val;\r\n        return true;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSplitter class\r\n * @module components/GSSplitter\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Renderer for element splitter\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSSplitter extends GSElement {\r\n\r\n    #cursor = 0;\r\n    #autostore = false;\r\n\r\n    static {\r\n        customElements.define('gs-splitter', GSSplitter);\r\n        Object.seal(GSSplitter);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        const size = me.isVertical ? 'width' : 'height';\r\n        const full = me.isVertical ? 'height' : 'width';\r\n        const cursor = me.isVertical ? 'w-resize' : 'n-resize';\r\n        return `\r\n            <style>\r\n                .splitter {\r\n                    ${size}: ${me.size}px;\r\n                    ${full}: 100%;\r\n                    border-width: 1px;\r\n                    cursor: ${cursor};\r\n                    border-color: darkgray;\r\n                    border-style: solid;\r\n                    background-color: lightgray;\r\n                }                        \r\n            </style>\r\n            <div class=\"splitter ${me.css}\" style=\"${this.getStyle()}\"></div>\r\n        `;\r\n    }\r\n\r\n    /**\r\n     * Check if splitter use vertical or hotizontal splitting\r\n     * @returns {boolean}\r\n     */\r\n    get isVertical() {\r\n        return GSAttr.get(this, 'split', 'vertical') === 'vertical';\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    /**\r\n     * Width or height of a splitter in px\r\n     * @returns {number}\r\n     */\r\n    get size() {\r\n        return GSAttr.getAsNum(this, 'size', 8);\r\n    }\r\n\r\n    set size(val = '') {\r\n        return GSAttr.setAsNum(this, 'size', val);\r\n    }\r\n\r\n    /**\r\n     * Element selection for resizing\r\n     * @returns {string} start|end|top|bottom\r\n     */\r\n    get resize() {\r\n        return GSAttr.get(this, 'resize', 'start');\r\n    }\r\n\r\n    set resize(val = '') {\r\n        return GSAttr.set(this, 'resize', val);\r\n    }\r\n\r\n    /**\r\n     * Return preceding element\r\n     * @returns {HTMLElement}\r\n     */\r\n    get start() {\r\n        return this.previousElementSibling;\r\n    }\r\n\r\n    /**\r\n    * Return following element\r\n    * @returns {HTMLElement}\r\n    */\r\n    get end() {\r\n        return this.nextElementSibling;\r\n    }\r\n\r\n    /**\r\n     * Return closest element found\r\n     * @returns {HTMLElement}\r\n     */\r\n    get target() {\r\n        const me = this;\r\n        let el = me.#isPreceeding ? me.start : me.end;\r\n        el = el || me.parentElement;\r\n        el = GSDOM.isGSElement(el) ? el.self : el;\r\n        if (el instanceof ShadowRoot) {\r\n            el = Array.from(el.children).filter(o => window.getComputedStyle(o).display !== 'none').pop();\r\n        }\r\n        return el;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#autostore = me.id ? true : false;\r\n        super.connectedCallback();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.#load();\r\n        me.#listen();\r\n        super.onReady();\r\n    }\r\n\r\n    get #isPreceeding() {\r\n        const me = this;\r\n        const resize = me.resize;\r\n        return resize === 'start' || resize === 'top';\r\n    }\r\n\r\n    get #splitter() {\r\n        return this.query('div');\r\n    }\r\n\r\n    #load() {\r\n        const me = this;\r\n        if (!me.#autostore) return;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        let val = localStorage.getItem(`gs-splitter-${key}-${me.id}`);\r\n        val = GSUtil.asNum(val);\r\n        if (val > 0) {\r\n            me.#cursor = val;\r\n            if (me.isVertical) {\r\n                me.target.style.width = val + \"px\";\r\n            } else {\r\n                me.target.style.height = val + \"px\";\r\n            }\r\n        }\r\n    }\r\n\r\n    #save() {\r\n        const me = this;\r\n        const style = window.getComputedStyle(me.target);\r\n        const val = me.isVertical ? style.width : style.height;\r\n        const key = GSID.hashCode(location.origin + location.pathname);\r\n        localStorage.setItem(`gs-splitter-${key}-${me.id}`, val.match(/(\\d+)/)[0]);\r\n    }\r\n\r\n    /**\r\n     * Initial event listener setup.\r\n     * Other events attaches as needed (on click)\r\n     */\r\n    #listen() {\r\n        const me = this;\r\n        const el = me.#splitter;\r\n        me.attachEvent(el, 'mousedown', me.#onMouseDown.bind(me), true);\r\n    }\r\n\r\n    /**\r\n    * Starts secondary listeners for mouse move for resizing and mouseup for stopping\r\n    * @param {MouseEvent} e \r\n    */\r\n    #onMouseDown(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        me.#cursor = me.isVertical ? e.clientX : e.clientY;\r\n        me.attachEvent(document, 'mouseup', me.#onMouseUp.bind(me), true);\r\n        me.attachEvent(document, 'mousemove', me.#onMouseMove.bind(me));\r\n    }\r\n\r\n    /**\r\n     * Removes all secondary listeners, and reattach initial listening state\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseUp(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        GSEvent.deattachListeners(me);\r\n        me.#save();\r\n        me.#listen();\r\n    }\r\n\r\n\r\n    /**\r\n     * Handles resizing based on mouse move event\r\n     * @param {MouseEvent} e \r\n     */\r\n    #onMouseMove(e) {\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const pos = me.isVertical ? e.clientX : e.clientY;\r\n        me.#update(pos);\r\n    }\r\n\r\n    #update(pos) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            if (me.isVertical) {\r\n                me.#updateX(pos);\r\n            } else {\r\n                me.#updateY(pos);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Calculate width based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateX(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientWidth;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.width = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n\r\n    /**\r\n     * Calculate height based on mouse position\r\n     * @param {number} pos \r\n     */\r\n    #updateY(pos) {\r\n        const me = this;\r\n        const target = me.target;\r\n        const dir = me.#isPreceeding ? 1 : -1;\r\n        let dx = (pos - me.#cursor) * dir;\r\n        dx = dx + target.clientHeight;\r\n        dx = dx < 0 ? 0 : dx;\r\n        target.style.height = dx + \"px\";\r\n        me.#cursor = pos;\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTab class\r\n * @module components/GSTab\r\n */\r\n\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSUtil from \"../base/GSUtil.mjs\";\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSItem from \"../base/GSItem.mjs\";\r\nimport GSLoader from \"../base/GSLoader.mjs\";\r\nimport GSEvent from \"../base/GSEvent.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Render tab panel\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTab extends GSElement {\r\n\r\n  // TAB CONTENT\r\n  static CSS_PANE = '';\r\n  //NAV BAR\r\n  static CSS_NAV = '';\r\n  // NAV ITEM WRAPER\r\n  static CSS_NAV_WRAP = '';\r\n\r\n  static {\r\n    customElements.define('gs-tab', GSTab);\r\n    Object.seal(GSTab);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['data'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    GSItem.validate(this, this.tagName);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    if (name === 'data') return this.load(newValue);\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const items = GSItem.genericItems(me);\r\n    items.forEach(el => el.id = GSID.id);\r\n    const tabs = items.map(el => me.#renderTab(el)).join('');\r\n    const panes = items.map(el => me.#renderPane(el)).join('');\r\n    const panel = me.#renderPanel(panes);\r\n\r\n    const tab = me.#isVertical ? me.#renderTabsVertical(tabs) : me.#renderTabsHorizontal(tabs);\r\n    const css = me.#isVertical ? `d-flex align-items-start ${me.#css}` : me.#css;\r\n    const html = me.#isReverse ? panel + tab : tab + panel;\r\n    return `<div class=\"${css}\">${html}</div>`;\r\n  }\r\n\r\n  get #isReverse() {\r\n    return this.#placement === 'end' || this.#placement === 'bottom';\r\n  }\r\n\r\n  get #isVertical() {\r\n    return this.#placement === 'start' || this.#placement === 'end';\r\n  }\r\n\r\n  // start, end, top , bottom\r\n  get #placement() {\r\n    return GSAttr.get(this, 'placement', 'top');\r\n  }\r\n\r\n  get #cssnav() {\r\n    return GSAttr.get(this, 'css-nav', 'nav-tabs');\r\n  }\r\n\r\n  get #csspane() {\r\n    return GSAttr.get(this, 'css-pane');\r\n  }\r\n\r\n  #renderTabsVertical(tabs) {\r\n    return `\r\n      <div class=\"nav flex-column ${GSTab.CSS_NAV} ${this.#cssnav}\" id=\"v-pills-tab\" role=\"tablist\" aria-orientation=\"vertical\">\r\n        ${tabs}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  #renderTabsHorizontal(tabs) {\r\n    return `\r\n      <ul class=\"nav ${GSTab.CSS_NAV} ${this.#cssnav}\" \"role=\"tablist\">\r\n        ${tabs}\r\n      </ul>      \r\n      `;\r\n  }\r\n\r\n  #renderPanel(panes) {\r\n    return `     \r\n        <div class=\"tab-content flex-fill ${GSTab.CSS_PANE} ${this.#csspane}\">\r\n          ${panes}\r\n        </div>  \r\n      `;\r\n  }\r\n\r\n  #renderTab(el) {\r\n    const me = this;\r\n    const wrap = me.#isVertical ? '' : `<li class=\"nav-item ${GSTab.CSS_NAV_WRAP} ${me.#cssNavWrap(el)}\" role=\"presentation\">`;\r\n    const title = me.#title(el);\r\n    const icon = me.#icon(el);\r\n    const iconTpl = icon ? `<i class=\"${icon}\"></i>` : '';\r\n    //const contentTpl = me.rtl ? `${title} ${iconTpl}` : `${iconTpl} ${title}`;\r\n    const contentTpl = `${iconTpl} ${title}`;\r\n\r\n    const actievCSS = me.#activeTabCSS(el);\r\n\r\n    return `${wrap}\r\n          <a type=\"button\" role=\"tab\" is=\"gs-ext-navlink\"\r\n              id=\"${el.id}-tab\" \r\n              class=\"nav-link ${me.#cssNav(el)} ${actievCSS}\" \r\n              aria-controls=\"${el.id}-tab\"                 \r\n              data-bs-target=\"#${el.id}-pane\" \r\n              data-bs-toggle=\"tab\">${contentTpl}</a>\r\n          ${wrap ? '</li>' : ''}\r\n      `;\r\n  }\r\n\r\n  #renderPane(el) {\r\n    const me = this;\r\n    return me.isFlat ? me.#renderPaneFlat(el) : me.#renderPaneShadow(el);\r\n  }\r\n\r\n  #renderPaneShadow(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el);\r\n    const slot = GSDOM.parseWrapped(me, body);\r\n    GSAttr.set(slot, 'slot', el.id);\r\n    GSDOM.appendChild(me, slot);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          <slot name=\"${el.id}\"></slot>\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #renderPaneFlat(el) {\r\n    const me = this;\r\n    const actievCSS = me.#activePaneCSS(el);\r\n    const body = GSItem.getBody(el, me.isFlat);\r\n    return `\r\n      <div  id=\"${el.id}-pane\" aria-labelledby=\"${el.id}-tab\" \r\n          class=\"tab-pane fade ${me.#cssPane(el)}  ${actievCSS}\" \r\n          role=\"tabpanel\">\r\n          ${body}\r\n      </div>        \r\n      `;\r\n  }\r\n\r\n  #active(el) {\r\n    return GSAttr.getAsBool(el, 'active');\r\n  }\r\n\r\n  #activeTabCSS(el) {\r\n    return this.#active(el) ? 'active' : '';\r\n  }\r\n\r\n  #activePaneCSS(el) {\r\n    return this.#active(el) ? 'active show' : '';\r\n  }\r\n\r\n  #title(el) {\r\n    return GSAttr.get(el, 'title');\r\n  }\r\n\r\n  #icon(el) {\r\n    return GSAttr.get(el, 'icon');\r\n  }\r\n\r\n  #cssPane(el) {\r\n    return GSAttr.get(el, 'css-pane');\r\n  }\r\n\r\n  #cssNav(el) {\r\n    return GSAttr.get(el, 'css-nav');\r\n  }\r\n\r\n  #cssNavWrap(el) {\r\n    return GSAttr.get(el, 'css-nav-wrap');\r\n  }\r\n\r\n  get #css() {\r\n    return GSAttr.get(this, 'css', '');\r\n  }\r\n\r\n  /**\r\n   * Load data from various sources\r\n   * \r\n   * @async\r\n   * @param {JSON|func|url} val \r\n   * @returns {Promise}\r\n   */\r\n  async load(val = '') {\r\n    const data = await GSLoader.loadData(val);\r\n    if (!GSUtil.isJsonType(data)) return;\r\n    const me = this;\r\n    const src = GSItem.generateItem(data);\r\n    GSDOM.setHTML(me, src);\r\n    GSEvent.deattachListeners(me);\r\n    me.connectedCallback();\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTooltip class\r\n * @module components/GSTooltip\r\n */\r\n\r\nimport GSID from \"../base/GSID.mjs\";\r\nimport GSDOMObserver from '../base/GSDOMObserver.mjs';\r\nimport GSElement from \"../base/GSElement.mjs\";\r\nimport GSPopper from \"../base/GSPopper.mjs\";\r\nimport GSAttr from \"../base/GSAttr.mjs\";\r\nimport GSDOM from \"../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Process Bootstrap tooltip efinition\r\n * <gs-tooltip placement=\"top\" ref=\"#el_id\" title=\"xxxxxx\"></gs-tooltip>\r\n * \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTooltip extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-tooltip', GSTooltip);\r\n        Object.seal(GSTooltip);\r\n        GSDOMObserver.registerFilter(GSTooltip.#onMonitorFilter, GSTooltip.#onMonitorResult);\r\n    }\r\n\r\n    /**\r\n     * Filter function for monitor observer\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #onMonitorFilter(el) {\r\n        if (!(el instanceof HTMLElement)) return false;\r\n        if (el.tagName && el.tagName.startsWith('GS-')) return false;\r\n        return GSTooltip.#isTooltip(el) && !GSTooltip.#hasTooltip(el);\r\n    }\r\n\r\n    /**\r\n     * Function to attach gstooltip to the element\r\n     * @param {HTMLElement} el \r\n     */\r\n    static #onMonitorResult(el) {\r\n        el.id = el.id || GSID.id;\r\n        const tooltip = document.createElement('gs-tooltip');\r\n        tooltip.ref = `#${el.id}`;\r\n        requestAnimationFrame(() => {\r\n            setTimeout(() => {\r\n                el.parentElement.insertAdjacentElement('beforeend', tooltip);\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.#attachEvents();\r\n    }\r\n\r\n    // https://javascript.info/mousemove-mouseover-mouseout-mouseenter-mouseleave\r\n    #attachEvents() {\r\n        const me = this;\r\n        me.attachEvent(me.target, 'mouseenter', me.show.bind(me));\r\n        me.attachEvent(me.target, 'mouseleave', me.hide.bind(me));\r\n    }\r\n\r\n    #popup() {\r\n        const me = this;\r\n        const arrowEl = me.querySelector('div.tooltip-arrow');\r\n        GSPopper.popupFixed(me.placement, me.firstElementChild, me.target, arrowEl);\r\n        return me.firstElementChild;\r\n    }\r\n\r\n    get #html() {\r\n        const me = this;\r\n        return `\r\n         <div class=\"tooltip bs-tooltip-auto fade \" data-popper-placement=\"${me.placement}\" role=\"tooltip\">\r\n            <div class=\"tooltip-arrow\"></div>\r\n            <div class=\"tooltip-inner\">${me.title}</div>\r\n        </div>        \r\n        `;\r\n    }\r\n\r\n    get target() {\r\n        const me = this;\r\n        if (me.ref) {\r\n            let owner = me.owner;\r\n            owner = GSDOM.isGSElement(me.owner) ? owner.self : owner;\r\n            return owner.querySelector(me.ref);\r\n        }\r\n        return me.previousElementSibling || me.parentElement;\r\n    }\r\n\r\n    get ref() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'ref');\r\n    }\r\n\r\n    set ref(val = '') {\r\n        return GSAttr.set(this, 'ref', val);\r\n    }\r\n\r\n    get title() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'title') || GSAttr.get(me.target, 'title');\r\n    }\r\n\r\n    set title(val = '') {\r\n        const me = this;\r\n        return GSAttr.set(me, 'title', val);\r\n    }\r\n\r\n    get placement() {\r\n        const me = this;\r\n        return GSAttr.get(me, 'placement', me.target?.dataset?.bsPlacement || 'top');\r\n    }\r\n\r\n    set placement(val = '') {\r\n        return GSAttr.set(this, 'placement', val);\r\n    }\r\n\r\n    get isFlat() {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Show tooltip\r\n     */\r\n    show() {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            const el = GSDOM.parse(me.#html, true);\r\n            me.insertAdjacentElement('afterbegin', el);\r\n            me.#popup();\r\n            GSDOM.toggleClass(me.firstElementChild, true, 'show');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Hide tooltip\r\n     */\r\n    hide() {\r\n        const me = this;\r\n        setTimeout(() => {\r\n           // GSDOM.setHTML(me, '');\r\n           // me.firstChild?.remove();\r\n           Array.from(me.childNodes).forEach(el => el.remove());\r\n        }, 250);\r\n        return GSDOM.toggleClass(me.firstElementChild, false, 'show');\r\n    }\r\n\r\n    /**\r\n     * Toggle tooltip on/off\r\n     */\r\n    toggle() {\r\n        const me = this;\r\n        me.childElementCount > 0 ? me.hide() : me.show();\r\n    }\r\n\r\n    /**\r\n     * Check if element has attached tooltip\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #hasTooltip(el) {\r\n        return (el?.firstElementChild || el?.nextElementSibling) instanceof GSTooltip;\r\n    }\r\n\r\n    /**\r\n     * Check if standard element is tooltip defined\r\n     * @param {HTMLElement} el \r\n     * @returns {boolean} \r\n     */\r\n    static #isTooltip(el) {\r\n        return el?.title && el?.dataset?.bsToggle === 'tooltip';\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAttachment class\r\n * @module components/filebox/GSAttachment\r\n */\r\n\r\n/**\r\n * Handles DataFileTransfer object\r\n * @class\r\n */\r\nexport default class GSAttachment {\r\n\r\n    constructor(file, directory) {\r\n        this.file = file;\r\n        this.directory = directory;\r\n    }\r\n\r\n    static traverse(transfer, directory) {\r\n        return GSAttachment.#transferredFiles(transfer, directory);\r\n    }\r\n\r\n    static from(files) {\r\n        return Array.from(files).filter(f => f instanceof File).map(f => new GSAttachment(f));\r\n    }\r\n\r\n    get fullPath() {\r\n        const me = this;\r\n        return me.directory ? `${me.directory}/${me.file.name}` : me.file.name;\r\n    }\r\n\r\n    isImage() {\r\n        return ['image/gif', 'image/png', 'image/jpg', 'image/jpeg', 'image/svg+xml'].includes(this.file.type);\r\n    }\r\n\r\n    isVideo() {\r\n        return ['video/mp4', 'video/quicktime'].includes(this.file.type);\r\n    }\r\n\r\n    static #transferredFiles(transfer, directory) {\r\n        if (directory && GSAttachment.#isDirectory(transfer)) {\r\n            return GSAttachment.#traverse('', GSAttachment.#roots(transfer));\r\n        }\r\n        return Promise.resolve(GSAttachment.#visible(Array.from(transfer.files || [])).map(f => new GSAttachment(f)));\r\n    }\r\n\r\n    static #hidden(file) {\r\n        return file.name.startsWith('.');\r\n    }\r\n\r\n    static #visible(files) {\r\n        return Array.from(files).filter(file => !GSAttachment.#hidden(file));\r\n    }\r\n\r\n    static #getFile(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            entry.file(resolve, reject);\r\n        });\r\n    }\r\n\r\n    static #getEntries(entry) {\r\n        return new Promise(function (resolve, reject) {\r\n            const result = [];\r\n            const reader = entry.createReader();\r\n            const read = () => {\r\n                reader.readEntries(entries => {\r\n                    if (entries.length > 0) {\r\n                        result.push(...entries);\r\n                        read();\r\n                    } else {\r\n                        resolve(result);\r\n                    }\r\n                }, reject);\r\n            };\r\n            read();\r\n        });\r\n    }\r\n\r\n    static async #traverse(path, entries) {\r\n        const results = [];\r\n        for (const entry of GSAttachment.#visible(entries)) {\r\n            if (entry.isDirectory) {\r\n                const entries = await GSAttachment.#getEntries(entry);\r\n                const list = await GSAttachment.#traverse(entry.fullPath, entries);\r\n                results.push(...(list));\r\n            } else {\r\n                const file = await GSAttachment.#getFile(entry);\r\n                results.push(new GSAttachment(file, path));\r\n            }\r\n        }\r\n        return results;\r\n    }\r\n\r\n    static #isDirectory(transfer) {\r\n        return Array.from(transfer.items).some((item) => {\r\n            const entry = item.webkitGetAsEntry && item.webkitGetAsEntry();\r\n            return entry && entry.isDirectory;\r\n        });\r\n    }\r\n\r\n    static #roots(transfer) {\r\n        return Array.from(transfer.items)\r\n            .map((item) => item.webkitGetAsEntry())\r\n            .filter(entry => entry != null);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSFileBox class\r\n * @module components/filebox/GSFileBox\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttachment from \"./GSAttachment.mjs\";\r\n\r\n/**\r\n * File box allows drag-n-drop fiels for upload\r\n * <gs-filebox id=\"other\" multiple=\"true\" directory=\"true\" elid=\"test\"></gs-filebox>\r\n * Use event listener to return false for file access filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSFileBox extends GSElement {\r\n\r\n    static TITLE = 'Drop files here or click to select';\r\n    static CSS = 'border-2 p-4 d-block text-center dash';\r\n\r\n    #dragging = null;\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        //me.style.setProperty('border-style', 'dashed', 'important');\r\n        //GSDOM.toggleClass(me, true, GSFileBox.CSS);\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n        return `<style>\r\n            .dash {\r\n                border-style: var(--gs-fieldbox-border, dashed) !important;\r\n                border-color: var(--gs-fieldbox-border-color, lightgrey);\r\n            }\r\n            input[type=file] {\r\n                color : var(--gs-fieldbox-color, transparent);\r\n            } \r\n            input[type=file]::file-selector-button {\r\n\r\n            }             \r\n            input[type=file]::file-selector-button:hover {\r\n            }            \r\n        </style>\r\n        <div part=\"border\" class=\"${me.css}\">\r\n            <label part=\"label\" class=\"${me.cssLabel}\" for=\"${me.name}\">${me.title}</label>\r\n            <input part=\"input\" class=\"${me.cssInput}\" type=\"file\" id=\"${me.name}\" name=\"${me.name}\" ${me.multiple ? \"multiple\" : \"\"} ${me.directory ? \"directory webkitdirectory\" : \"\"} >\r\n            <pre part=\"list\" class=\"${me.cssList}\"></pre>\r\n        </div>\r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        const target = me.query('div'); // me.isFlat ? me.query('div') : me;\r\n        me.attachEvent(target, 'click', me.#onClick.bind(me));\r\n        me.attachEvent(target, 'dragenter', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragover', me.#onDragenter.bind(me));\r\n        me.attachEvent(target, 'dragleave', me.#onDragleave.bind(me));\r\n        me.attachEvent(target, 'drop', me.#onDrop.bind(me));\r\n        me.attachEvent(target, 'paste', me.#onPaste.bind(me));\r\n        me.attachEvent(target, 'change', me.#onChange.bind(me));\r\n        super.onReady();\r\n    }\r\n\r\n    get listEl() {\r\n        return this.query('pre');\r\n    }\r\n\r\n    get fileEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox frame\r\n     */\r\n    get css() {\r\n        return GSAttr.get(this, 'css', GSFileBox.CSS);\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css');\r\n    }\r\n\r\n    /**\r\n    * CSS for text list of selected files\r\n    */\r\n    get cssList() {\r\n        return GSAttr.get(this, 'css-list', '');\r\n    }\r\n\r\n    set cssList(val = '') {\r\n        return GSAttr.set(this, 'css-list');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox info message\r\n     */\r\n    get cssLabel() {\r\n        return GSAttr.get(this, 'css-label', '');\r\n    }\r\n\r\n    set cssLabel(val = '') {\r\n        return GSAttr.set(this, 'css-label');\r\n    }\r\n\r\n    /**\r\n     * CSS for filebox input element\r\n     */\r\n    get cssInput() {\r\n        return GSAttr.get(this, 'css-input', 'd-none');\r\n    }\r\n\r\n    set cssInput(val = '') {\r\n        return GSAttr.set(this, 'css-input');\r\n    }\r\n\r\n    /**\r\n     * Set to true to enable multiple file or directory selection\r\n     */\r\n    get multiple() {\r\n        return GSAttr.getAsBool(this, 'multiple', true);\r\n    }\r\n\r\n    set multiple(val = '') {\r\n        return GSAttr.setAsBool(this, 'mulltiple', val);\r\n    }\r\n\r\n    /**\r\n     * Filebox info message \r\n     */\r\n    get title() {\r\n        return GSAttr.get(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    set title(val = '') {\r\n        return GSAttr.set(this, 'title', GSFileBox.TITLE);\r\n    }\r\n\r\n    /**\r\n     * Input field name and id\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', '');\r\n    }\r\n\r\n    /**\r\n     * Regex for paste accept \r\n     */\r\n    get filter() {\r\n        return GSAttr.get(this, 'filter', '^image\\/(gif|png|jpeg)$');\r\n    }\r\n\r\n    set filter(val = '') {\r\n        return GSAttr.set(this, 'filter');\r\n    }\r\n\r\n    get directory() {\r\n        return GSAttr.getAsBool(this, 'directory', false);\r\n    }\r\n\r\n    set directory(value = '') {\r\n        return GSAttr.setAsBool(this, 'directory', val);\r\n    }\r\n\r\n    #onClick(e) {\r\n        if (e.target instanceof HTMLLabelElement) return;\r\n        const label = this.fileEl.previousElementSibling;\r\n        if (label instanceof HTMLLabelElement) label.click();\r\n    }\r\n\r\n    #onDragenter(e) {\r\n        const me = this;\r\n        if (me.#dragging) clearTimeout(me.#dragging);\r\n        me.#dragging = window.setTimeout(() => me.removeAttribute('hover'), 200);\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        transfer.dropEffect = 'copy';\r\n        me.setAttribute('hover', '');\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onDragleave(e) {\r\n        const me = this;\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'none';\r\n        me.removeAttribute('hover');\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onDrop(e) {\r\n        const me = this;\r\n        me.removeAttribute('hover');\r\n        const transfer = e.dataTransfer;\r\n        if (!transfer || !me.#hasFile(transfer)) return;\r\n        me.#attach(transfer);\r\n        GSEvent.prevent(e);\r\n    }\r\n\r\n    #onPaste(e) {\r\n        const me = this;\r\n        if (!e.clipboardData) return;\r\n        if (!e.clipboardData.items) return;\r\n        const file = me.#pastedFile(e.clipboardData.items);\r\n        if (!file) return;\r\n        const files = [file];\r\n        me.#attach(files);\r\n        e.preventDefault();\r\n    }\r\n\r\n    #onChange(e) {\r\n        const me = this;\r\n        const input = me.fileEl;\r\n        const files = input.files;\r\n        if (!files || files.length === 0) return;\r\n        me.#attach(files);\r\n        input.value = '';\r\n    }\r\n\r\n    #hasFile(transfer) {\r\n        return Array.from(transfer.types).indexOf('Files') >= 0;\r\n    }\r\n\r\n    #pastedFile(items) {\r\n        const me = this;\r\n        const rgx = me.filter ? new RegExp(me.filter) : null;\r\n        for (const item of items) {\r\n            if (item.kind === 'file') {\r\n                if (!rgx) return item.getAsFile();\r\n                if (rgx.test(item.type)) return item.getAsFile();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    #accept(attachments) {\r\n        const me = this;\r\n        const dataTransfer = new DataTransfer();\r\n        attachments.forEach(a => dataTransfer.items.add(a.file))\r\n        me.fileEl.files = dataTransfer.files;\r\n        me.listEl.textContent = attachments.map(a => a.file.name).join('\\n');\r\n    }\r\n\r\n    async #attach(transferred) {\r\n        const me = this;\r\n        const isDataTfr = transferred instanceof DataTransfer;\r\n        const attachments = isDataTfr\r\n            ? await GSAttachment.traverse(transferred, me.directory)\r\n            : GSAttachment.from(transferred);\r\n\r\n        const accepted = GSEvent.send(me, 'accept', { attachments }, true, false, true);\r\n        if (accepted && attachments.length) {\r\n            me.#accept(attachments);\r\n            GSEvent.send(me, 'accepted', { attachments }, true);\r\n        }\r\n    }\r\n\r\n    static {\r\n        customElements.define('gs-filebox', GSFileBox);\r\n        Object.seal(GSFileBox);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSStore class\r\n * @module components/table/GSStore\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table data handler, pager, loader\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSStore extends HTMLElement {\r\n\r\n    static #MODES = ['rest', 'query', 'quark'];\r\n    #online = false;\r\n    #src = '';\r\n    #data = [];\r\n\r\n    #remote = false;\r\n    #skip = 0;\r\n    #limit = 0;\r\n    #page = 1;\r\n\r\n    #sort = [];\r\n    #filter = [];\r\n    #total = 0;\r\n\r\n    static {\r\n        customElements.define('gs-store', GSStore);\r\n        Object.seal(GSStore);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        return ['id', 'src', 'limit', 'skip', 'remote', 'filter', 'sort'];\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    attributeChangedCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n\r\n        if (name === 'id') {\r\n            GSComponents.remove(oldValue);\r\n            GSComponents.store(me);\r\n            return;\r\n        }\r\n\r\n        if (GSComponents.hasSetter(me, name)) {\r\n            me[name] = newValue;\r\n        }\r\n\r\n        if (name === 'src') {\r\n            me.#data = [];\r\n            me.reload();\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.#online = true;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#online = false;\r\n        GSComponents.remove(me);\r\n    }\r\n\r\n    /**\r\n     * Wait for event to happen\r\n     * \r\n     * @async\r\n     * @param {*} name \r\n     * @returns {Promise<void>}\r\n     */\r\n    async waitEvent(name = '') {\r\n        if (!name) throw new Error('Event undefined!');\r\n        const me = this;\r\n        return new Promise((r, e) => {\r\n            me.once(name, (evt) => r(evt.detail));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen once for triggered event\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    once(name, func) {\r\n        return this.attachEvent(this, name, func, true);\r\n    }\r\n\r\n    /**\r\n     * Attach event to this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    listen(name, func) {\r\n        return this.attachEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n     * Remove event from this element\r\n     * \r\n     * @param {*} name \r\n     * @param {*} func \r\n     */\r\n    unlisten(name, func) {\r\n        this.removeEvent(this, name, func);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener appender\r\n    * TODO handle once events to self remove\r\n    * TODO handle fucntion key override with same function signature dif instance\r\n    */\r\n    attachEvent(el, name = '', fn, once = false) {\r\n        return GSEvent.attach(this, el, name, fn, once);\r\n    }\r\n\r\n    /**\r\n    * Generic event listener remover\r\n    */\r\n    removeEvent(el, name = '', fn) {\r\n        GSEvent.remove(this, el, name, fn);\r\n    }\r\n\r\n    /**\r\n     * HTTP operational mode\r\n     * rest, query, quark \r\n     */\r\n    get mode() {\r\n        const mode = GSAttr.get(this, 'mode', 'query');\r\n        const isok = GSStore.#MODES.includes(mode);\r\n        return isok ? mode : 'query';\r\n    }\r\n\r\n    set mode(val = 'query') {\r\n        const isok = GSStore.#MODES.includes(val);\r\n        if (isok) return GSAttr.set(this, 'mode', val);\r\n        console.log(`Invalid mode, allowed: ${GSStore.#MODES}`);\r\n    }\r\n\r\n    /**\r\n     * Call for defined mode\r\n     * - quark - JSON path to CRUD object; ie. io.greenscreens.CRUD\r\n     * - rest - url rest format, ie. /${limit}/${skip}?sort=${sort}&filter=${filter}\r\n     * - query - url format, ie. ?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}\r\n     */\r\n    get action() {\r\n        const me = this;\r\n        let def = '';\r\n        switch (me.mode) {\r\n            case 'query':\r\n                def = '?limit=${limit}&skip=${skip}&sort=${sort}&filter=${filter}';\r\n                break;\r\n            case 'rest':\r\n                def = '/${limit}/${skip}?sort=${sort}&filter=${filter}';\r\n                break;\r\n        }\r\n        return GSAttr.get(me, 'action', def);\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    /**\r\n     * Generate URL from src and mode type\r\n     */\r\n    get url() {\r\n        const me = this;\r\n        return me.#toURL(me.src, me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    /**\r\n     * Table data url (JSON)\r\n     */\r\n    get src() {\r\n        return this.#src;\r\n    }\r\n\r\n    set src(val = '') {\r\n        const me = this;\r\n        me.#src = val;\r\n        me.reload();\r\n    }\r\n\r\n    get limit() {\r\n        return this.#limit;\r\n    }\r\n\r\n    set limit(val = 0) {\r\n        const me = this;\r\n        me.#limit = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    get skip() {\r\n        return this.#skip;\r\n    }\r\n\r\n    set skip(val = 0) {\r\n        const me = this;\r\n        me.#skip = GSUtil.asNum(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * if true, on every request data is loded from remote\r\n     * if false, data is loaded once and cached\r\n     */\r\n    get remote() {\r\n        return this.#remote;\r\n    }\r\n\r\n    set remote(val = false) {\r\n        const me = this;\r\n        me.#remote = GSUtil.asBool(val);\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Filter data in format \r\n     * [{name: idx[num] || name[string], value: ''  , op:'eq'}]\r\n     */\r\n    get filter() {\r\n        return this.#filter;\r\n    }\r\n\r\n    set filter(val) {\r\n        const me = this;\r\n        me.#filter = GSUtil.isJson(val) ? GSUtil.toJson(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Sort data in format\r\n     * [{col: idx[num] || name[string]  , op: -1 | 1 }]\r\n     */\r\n    get sort() {\r\n        return this.#sort;\r\n    }\r\n\r\n    set sort(val) {\r\n        const me = this;\r\n        me.#sort = GSUtil.isString(val) ? JSON.parse(val) : val;\r\n        me.reload();\r\n    }\r\n\r\n    /**\r\n     * Currently loaded data\r\n     */\r\n    get data() {\r\n        return this.#data;\r\n    }\r\n\r\n    get total() {\r\n        return this.#total || this.#data.length;\r\n    }\r\n\r\n    get offset() {\r\n        const me = this;\r\n        return (me.page - 1) * me.limit;\r\n    }\r\n\r\n    /**\r\n     * Current page\r\n     */\r\n    get page() {\r\n        return this.#page;\r\n    }\r\n\r\n    set page(val = 1) {\r\n        if (!GSUtil.isNumber(val)) throw new Error('Numeric value required!');\r\n        const me = this;\r\n        me.#page = GSUtil.asNum(val < 1 ? 1 : val);\r\n        me.#page = me.#page > me.pages ? me.pages : me.#page;\r\n        const skip = me.#limit * (val - 1);\r\n        me.getData(skip, me.#limit, me.#filter, me.#sort);\r\n    }\r\n\r\n    /**\r\n     * Total pages\r\n     */\r\n    get pages() {\r\n        const me = this;\r\n        if (me.total === 0) return 1;\r\n        return me.limit === 0 ? 1 : Math.ceil(me.total / me.#limit);\r\n    }\r\n\r\n    nextPage() {\r\n        const me = this;\r\n        if (me.page === me.pages) return;\r\n        me.page = me.page + 1;\r\n        return me.#page;\r\n    }\r\n\r\n    prevPage() {\r\n        const me = this;\r\n        if (me.page === 1) return;\r\n        me.page = me.page - 1;\r\n        return me.#page;\r\n    }\r\n\r\n    lastPage() {\r\n        const me = this;\r\n        me.page = me.#limit === 0 ? 1 : me.pages;\r\n        return me.#page;\r\n    }\r\n\r\n    firstPage() {\r\n        const me = this;\r\n        me.page = 1;\r\n        return me.#page;\r\n    }\r\n\r\n    clear() {\r\n        const me = this;\r\n        me.#total = 0;\r\n        me.setData();\r\n    }\r\n\r\n    async load(val, opt) {\r\n        const me = this;\r\n        if (!me.#online) return false;\r\n        const url = val || me.src;\r\n        if (url.length === 0) return false;\r\n        opt = opt || {};\r\n        opt.headers = opt.headers || {};\r\n        opt.headers['Content-Type'] = 'application/json; utf-8';\r\n        opt.headers.Accept = 'application/json';\r\n        const res = await fetch(url, opt);\r\n        if (!res.ok) return false;\r\n        const data = await res.json();\r\n        me.#update(data);\r\n        return data;\r\n    }\r\n\r\n    #update(data = [], append = false) {\r\n\r\n        const me = this;\r\n        const isRaw = Array.isArray(data);\r\n\r\n        let records = data;\r\n        if (isRaw) {\r\n            me.#total = records.length;\r\n        } else if (Array.isArray(data.data)) {\r\n            me.#total = data.total;\r\n            records = data.data;\r\n        } else {\r\n            records = [data];\r\n        }\r\n\r\n        me.#data = append ? me.#data.concat(records) : records;\r\n        if (me.#total < me.#data.length) me.#total = me.#data.length;\r\n    }\r\n\r\n    setData(data = [], append = false) {\r\n        const me = this;\r\n        me.#update(data, append);\r\n        me.#notify('data', me.#data);\r\n    }\r\n\r\n    async getData(skip = 0, limit = 0, filter, sort) {\r\n        const me = this;\r\n        filter = me.#formatFilter(filter || me.filter);\r\n        sort = me.#formatSort(sort || me.sort);\r\n        let data = [];\r\n\r\n        const simple = GSUtil.isString(filter) && GSUtil.isStringNonEmpty(filter);\r\n\r\n        if (!simple && me.src && (me.remote || me.data.length == 0)) {\r\n            const url = me.#toURL(me.src, skip, limit, filter, sort);\r\n            data = await me.load(url);\r\n        }\r\n\r\n        if (!me.remote) {\r\n            const fields = me.#fields();\r\n            data = GSData.filterData(filter, me.#data, fields);\r\n            data = GSData.sortData(sort, data);\r\n            limit = limit === 0 ? data.length : limit;\r\n            data = data.slice(skip, skip + limit);\r\n        }\r\n\r\n        me.#notify('data', data);\r\n        return data;\r\n    }\r\n\r\n    reload() {\r\n        const me = this;\r\n        if (!me.#online) return;\r\n        return me.getData(me.skip, me.limit, me.filter, me.sort);\r\n    }\r\n\r\n    #toURL(src, skip, limit, filter, sort) {\r\n        const me = this;\r\n        sort = sort ? JSON.stringify(sort) : '';\r\n        filter = filter ? JSON.stringify(filter) : '';\r\n        const opt = { limit: limit, skip: skip, sort: encodeURIComponent(sort), filter: encodeURIComponent(filter) };\r\n        return src + GSUtil.fromLiteral(me.action, opt);\r\n    }\r\n\r\n    async #notify(name = 'data', data) {\r\n        const me = this;\r\n        setTimeout(() => {\r\n            GSEvent.send(me, name, data, true);\r\n        }, 1);\r\n    }\r\n\r\n    #formatFilter(val) {\r\n        let filter = [];\r\n\r\n        if (typeof val === 'string') {\r\n            filter = val;\r\n        } else if (Array.isArray(val)) {\r\n            filter = val;\r\n        }\r\n        return filter;\r\n    }\r\n\r\n    #formatSort(val = '') {\r\n        let sort = undefined;\r\n        if (typeof val === 'string') {\r\n            sort = [{ col: val }];\r\n        } else if (Array.isArray(val)) {\r\n            sort = val;\r\n        } else if (GSUtil.isNumber(val)) {\r\n            const idx = Math.abs(val);\r\n            sort = new Array(idx);\r\n            sort[idx - 1] = { ord: val };\r\n        }\r\n        return sort;\r\n    }\r\n\r\n    #fields() {\r\n        const me = this;\r\n        const fields = me.table?.header?.fields;\r\n        return fields ? fields : Array.from(me.querySelectorAll('gs-item')).map(o => o.name);\r\n    }\r\n\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSAccordion class\r\n * @module components/table/GSColumn\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSItem from \"../../base/GSItem.mjs\";\r\n\r\n/**\r\n * Table column renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSColumn extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-column', GSColumn);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        GSItem.validate(this, this.tagName);\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const clssort = me.sortable ? 'sorting' : '';\r\n        const style = me.width ? `style=\"width:${me.width};\"` : '';\r\n        return `<th scope=\"col\" name=\"${me.name}\" class=\"${clssort} ${me.cssHeader}\" ${style}>${me.title || me.name}</th>`;\r\n    }\r\n\r\n    renderFilter() {\r\n        const me = this;\r\n        if (!me.filter) return '<th></th>';\r\n        let html = '';\r\n        switch (me.list) {\r\n            case 'fixed':\r\n                html = me.#renderFixed();\r\n                break;\r\n            case 'flexi':\r\n                html = me.#renderFlexi();\r\n                break;\r\n            default:\r\n                html = me.#renderField();\r\n        }\r\n        return `<th css=\"${me.cssFilter}\">${html}</th>`;\r\n    }\r\n\r\n    #renderFixed() {\r\n        const me = this;\r\n        const opts = me.#renderOptions(true);\r\n        return `<select auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" >${opts}</select>`;\r\n    }\r\n\r\n    #renderFlexi() {\r\n        const me = this;\r\n        const id = GSID.next();\r\n        const html = me.#renderField(id);\r\n        const opts = me.#renderOptions(false);\r\n        const list = `<datalist id=\"${id}\">${opts}</datalist>`;\r\n        return html + list;\r\n    }\r\n\r\n    #renderField(list = '') {\r\n        const me = this;\r\n        return `<input auto=\"${me.auto}\" name=\"${me.name}\" title=\"${me.title || me.name}\" class=\"${me.cssField}\" placeholder=\"${me.title || me.name}\" list=\"${list}\">`;\r\n    }\r\n\r\n    #renderOptions(isCombo = false) {\r\n        const me = this;\r\n        const list = [];\r\n        me.filters.forEach(el => {\r\n            const def = GSAttr.getAsBool(el, 'default', false);\r\n            const value = GSAttr.get(el, 'value', '');\r\n            const title = GSAttr.get(el, 'map', value);\r\n            let html = '';\r\n            if (isCombo) {\r\n                html = `<option value=\"${value}\" ${def ? 'selected' : ''}>${title}</option>`;\r\n            } else {\r\n                html = `<option value=\"${title}\" data-value=\"${value}\">`;\r\n            }\r\n            list.push(html);\r\n        });\r\n        return list.join('');\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    get cssField() {\r\n        const me = this;\r\n        const def = me.list ? 'form-select' : 'form-control';\r\n        return GSAttr.get(me, 'css-field', def);\r\n    }\r\n\r\n    get filter() {\r\n        return GSAttr.getAsBool(this, 'filter', false);\r\n    }\r\n\r\n    get sortable() {\r\n        const me = this;\r\n        return me.name && !me.counter ? GSAttr.getAsBool(me, 'sortable', true) : false;\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', 'border-end');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    get width() {\r\n        return GSAttr.get(this, 'width');\r\n    }\r\n\r\n    get name() {\r\n        return GSAttr.get(this, 'name', '');\r\n    }\r\n\r\n    get title() {\r\n        return GSAttr.get(this, 'title', '');\r\n    }\r\n\r\n    get counter() {\r\n        return this.name === '#';\r\n    }\r\n\r\n    get index() {\r\n        return GSAttr.getAsNum(this, 'index', -1);\r\n    }\r\n\r\n    get format() {\r\n        return GSAttr.get(this, 'format');\r\n    }\r\n\r\n    get type() {\r\n        return GSAttr.get(this, 'type');\r\n    }\r\n\r\n    /**\r\n     * Will generate ComboBox or datalist\r\n     */\r\n    get list() {\r\n        const me = this;\r\n        const val = GSAttr.get(me, 'list', '').toLowerCase();\r\n        const isValid = ['fixed', 'flexi'].includes(val);\r\n        if (!isValid && !me.auto) return 'flexi';\r\n        return isValid ? val : '';\r\n    }\r\n\r\n    get items() {\r\n        return GSItem.genericItems(this);\r\n    }\r\n\r\n    get filters() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[filter=\"true\"]'));\r\n    }\r\n\r\n    get maps() {\r\n        return GSItem.genericItems(this.querySelector('gs-item[map=\"true\"]'));\r\n    }\r\n\r\n    /**\r\n     * Is auto populate list with data values\r\n     */\r\n    get auto() {\r\n        return this.childElementCount === 0;\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        // [[val,map]]\r\n        const mapping = me.maps.map(el => [ GSAttr.get(el, 'value'), GSAttr.get(el, 'map') ])\r\n        return { \r\n            name: me.name, \r\n            title: me.title, \r\n            width: me.width, \r\n            sortable: me.sortable, \r\n            idx: me.index, \r\n            type: me.type, \r\n            format: me.format, \r\n            css : me.css,\r\n            map :mapping\r\n        };\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSHeader class\r\n * @module components/table/GSHeader\r\n */\r\n\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Table header renderer for GSTable\r\n * @class\r\n * @extends {HTMLElement}\r\n */\r\nexport default class GSHeader extends HTMLElement {\r\n\r\n    static {\r\n        customElements.define('gs-header', GSHeader);\r\n    }\r\n\r\n    /*\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n    }\r\n    */\r\n\r\n    get #filtered() {\r\n        return GSDOM.queryAll(this, 'gs-column[filter=true]');\r\n    }\r\n\r\n    get #available() {\r\n        return GSDOM.queryAll(this, 'gs-column').filter(el => GSAttr.get(el, 'hidden', 'false') === 'false');\r\n    }\r\n\r\n    render() {\r\n        const me = this;\r\n\r\n        const table = me.table;\r\n        const filters = me.#filtered;\r\n        const columns = me.#available;\r\n\r\n        const html = [];\r\n        html.push(`<thead class=\"${table.cssHeader}\">`);\r\n\r\n        if (filters.length > 0) {\r\n            html.push(`<tr is=\"gs-tablefilter\" class=\"${table.cssFilter}\">`);\r\n            columns.forEach(el => html.push(el.renderFilter()));\r\n            html.push('</tr>');\r\n        }\r\n\r\n        html.push(`<tr is=\"gs-tablesort\" class=\"${table.cssColumns}\">`);\r\n        columns.forEach(el => html.push(el.render()));\r\n        html.push('</tr>');\r\n\r\n        html.push('</thead>');\r\n        return html.join('');\r\n    }\r\n\r\n    toJSON() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => el.toJSON());\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE')\r\n    }\r\n\r\n    get fields() {\r\n        const me = this;\r\n        const cols = me.#available;\r\n        return cols.map(el => GSAttr.get(el, 'name'));\r\n\r\n    }\r\n}\r\n\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTBody class\r\n * @module components/table/GSTBody\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSDate from \"../../base/GSDate.mjs\";\r\n\r\n/**\r\n * Bootstrap table bod renderer\r\n * <tbody is=\"gs-tbody\"></tbody>\r\n * @class\r\n * @extends {HTMLTableSectionElement}\r\n */\r\nexport default class GSTBody extends HTMLTableSectionElement {\r\n\r\n    #table = null;\r\n\r\n    static {\r\n        customElements.define('gs-tbody', GSTBody, { extends: 'tbody' });\r\n        Object.seal(GSTBody);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSEvent.attach(me, me, 'contextmenu', e => me.#onMenu(e), false, true);\r\n        me.#table = GSDOM.closest(me, 'GS-TABLE');\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#table = null;\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get index() {\r\n        return this.table.index;\r\n    }\r\n\r\n    get cssCell() {\r\n        return this.table.cssCell;\r\n    }\r\n\r\n    get cssRow() {\r\n        return this.table.cssRow;\r\n    }\r\n\r\n    get cssSelect() {\r\n        return this.table.cssSelect;\r\n    }\r\n\r\n    get select() {\r\n        return this.table.select;\r\n    }\r\n\r\n    get multiselect() {\r\n        return this.table.multiselect;\r\n    }\r\n\r\n    get table() {\r\n        return this.#table || GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    render(headers, data, offset) {\r\n\r\n        const me = this;\r\n        if (!Array.isArray(headers)) return;\r\n\r\n        const rows = [];\r\n        let html = '';\r\n\r\n        data.forEach((rec, idx) => {\r\n            rows.push(`<tr class=\"${me.cssRow}\" data-index=${idx}>`);\r\n\r\n            if (Array.isArray(rec)) {\r\n                html = me.#arrayToHTML(headers, rec, idx, offset);\r\n            } else {\r\n                html = me.#objToHTML(headers, rec, offset);\r\n            }\r\n\r\n            rows.push(html);\r\n            rows.push('</tr>');\r\n        });\r\n\r\n        if (data.length === 0 && me.table.noDataText) {\r\n            rows.push(me.#emptyRow(headers.length));\r\n        }\r\n        \r\n\r\n        GSDOM.setHTML(me, rows.join(''));\r\n        GSDOM.queryAll(me, 'tr').forEach(el => { if (el.innerText.trim().length === 0) el.remove(); });\r\n    }\r\n\r\n    #emptyRow(cols) {\r\n        return `<tr data-ignore=\"true\"><td colspan=\"${cols}\" class=\"text-center fw-bold text-muted\">${this.table.noDataText}</td></tr>`;\r\n    }\r\n\r\n    #arrayToHTML(headers, rec, idx, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach(hdr => {\r\n            const c = hdr.name === \"#\" ? (idx + 1 + offset).toString() : rec[hdr.idx];\r\n            cols.push(`<td class=\"${me.cssCell}\">${c || '&nbsp;'}</td>`);\r\n\r\n        });\r\n\r\n        return cols.join('');\r\n    }\r\n\r\n    #objToHTML(headers, rec, offset) {\r\n        const me = this;\r\n        const cols = [];\r\n        headers.forEach((hdr, i) => {\r\n            const html = me.#genRow(hdr, rec, i + 1 + offset);\r\n            cols.push(html);\r\n        });\r\n        return cols.join('');\r\n    }\r\n\r\n    #genRow(hdr, rec, idx) {\r\n        const me = this;\r\n        let val = hdr.name === \"#\" ? idx : rec[hdr.name];\r\n        const map = hdr.map?.filter(o => o[0] === '' + val);\r\n        val = map?.length > 0 ? map[0][1] || val : val;\r\n        val = me.#format(hdr, val);\r\n        // todo format data \r\n        return `<td class=\"${me.cssCell} ${hdr.css}\">${val?.toString() || '&nbsp;'}</td>`;\r\n    }\r\n\r\n    #format(hdr, val) {\r\n\r\n        if (!hdr.format) return val;\r\n\r\n        const type = this.#toType(hdr, val);\r\n        const locale = hdr.locale || navigator.locale;\r\n\r\n        switch(type) {\r\n            case 'timestamp' : \r\n            case 'date' : \r\n                const fmt = hdr.format == 'true' ? undefined : hdr.format;\r\n                return val && val > 0 ? new GSDate(val).format(fmt, locale) : val;\r\n            case 'string' : \r\n            case 'boolean' : \r\n            case 'number' : \r\n                break;\r\n            case 'currency' : \r\n                const opt = { style: 'currency', currency: hdr.currency};\r\n                return new Intl.NumberFormat(locale, opt).format(val);\r\n        }\r\n        \r\n        return val;\r\n    }\r\n\r\n    #toType(hdr, val) {\r\n        if (hdr.type) return hdr.type;\r\n        if (val instanceof Date) return 'date';\r\n        if (val instanceof Number) return 'number';\r\n        if (val instanceof Boolean) return 'boolean';\r\n        return typeof val;\r\n    }\r\n\r\n    #onMenu(e) {\r\n\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.target;\r\n        const isAppend = e.shiftKey & me.multiselect;\r\n\r\n        if (!el.tagName === 'TD') return;\r\n        if (!me.select) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.#onRowSelect(el.closest('tr'), isAppend, e);\r\n        });\r\n\r\n    }\r\n\r\n    #onRowSelect(row, append = false, evt) {\r\n\r\n        const me = this;\r\n        const isSelected = GSAttr.getAsBool(row, 'selected');\r\n\r\n        if (!append) GSDOM.queryAll(me, 'tr')\r\n            .forEach(el => {\r\n                GSAttr.set(el, 'class', null);\r\n                GSAttr.set(el, 'selected', null);\r\n            });\r\n\r\n        if (row.dataset.ignore === 'true') return;\r\n\r\n        GSAttr.set(row, 'class', isSelected ? null : me.cssSelect);\r\n        GSAttr.set(row, 'selected', isSelected ? null : true);\r\n\r\n        const data = [];\r\n        GSDOM.queryAll(me, 'tr[selected=true]').forEach(el => data.push(parseInt(el.dataset.index)));\r\n        GSEvent.send(me, 'select', { data:data, evt : evt}, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTable class\r\n * @module components/table/GSTable\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n// use GSStore\r\n// - if data attr set to gs-store id find el\r\n// - if internal gs-store el, use that\r\n\r\n/**\r\n * Boottrap table WebComponent\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSTable extends GSElement {\r\n\r\n    static #tagList = ['GS-HEADER', 'GS-STORE'];\r\n    #select = true;\r\n    #multiselect = false;\r\n\r\n    #headers = [];\r\n\r\n    #data = [];\r\n    #selected = [];\r\n\r\n    #store = null;\r\n\r\n    #map = {\r\n        'css': 'table',\r\n        'css-header': 'table thead',\r\n        'css-row': 'table tbody tr',\r\n        'css-cell': 'table tbody td'\r\n    };\r\n\r\n    #selectCSS = 'bg-dark text-light fw-bold';\r\n    #tableCSS = 'table table-hover table-striped user-select-none m-0';\r\n    #headerCSS = 'user-select-none table-light';\r\n    #rowCSS = '';\r\n    #cellCSS = 'col';\r\n\r\n    static {\r\n        customElements.define('gs-table', GSTable);\r\n        Object.seal(GSTable);\r\n    }\r\n\r\n    static get observedAttributes() {\r\n        const attrs = ['src', 'select', 'multiselect', 'css', 'css-header', 'css-filter', 'css-columns', 'css-row', 'css-cell', 'css-select'];\r\n        return GSElement.observeAttributes(attrs);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.#validateAllowed();\r\n    }\r\n\r\n    #validateAllowed() {\r\n        const me = this;\r\n        let list = Array.from(me.children).filter(el => el.slot && el.slot !== 'extra');\r\n        if (list.length > 0) throw new Error(`Custom element injection must contain slot=\"extra\" attribute! Element: ${me.tagName}, ID: ${me.id}`);\r\n        list = Array.from(me.childNodes).filter(el => !el.slot);\r\n        const allowed = GSDOM.isAllowed(list, GSTable.#tagList);\r\n        if (!allowed) throw new Error(GSDOM.toValidationError(me, GSTable.#tagList));\r\n    }\r\n\r\n    attributeCallback(name = '', oldValue = '', newValue = '') {\r\n        const me = this;\r\n        me.#setCSS(me.#map[name], newValue);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        me.#headers = [];\r\n        me.#data = [];\r\n        me.#selected = [];\r\n        me.#store = null;\r\n        super.disconnectedCallback();\r\n    }\r\n\r\n    async onReady() {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        if (!store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = await GSComponents.waitFor(dataID);\r\n        }\r\n\r\n        super.onReady();\r\n        if (me.contextMenu) me.contextMenu.disabled = true;\r\n        me.attachEvent(me.self, 'sort', e => me.#onColumnSort(e.detail));\r\n        me.attachEvent(me.self, 'filter', e => me.#onColumnFilter(e.detail));\r\n        me.attachEvent(me.self, 'select', e => me.#onRowSelect(e.detail));\r\n        me.attachEvent(me.self, 'action', e => me.#onContextMenu(e));\r\n        me.attachEvent(me, 'data', e => me.#onData(e));\r\n\r\n        me.store.page = 1;\r\n    }\r\n\r\n    get contextMenu() {\r\n        return this.querySelector('gs-context');\r\n    }\r\n\r\n    get store() {\r\n        const me = this;\r\n        if (me.#store) return me.#store;\r\n\r\n        me.#store = me.querySelector('gs-store');\r\n        if (!me.#store) {\r\n            const dataID = GSAttr.get('data');\r\n            me.#store = GSDOM.query(`gs-data#${dataID}`);\r\n        }\r\n        return me.#store;\r\n    }\r\n\r\n    get header() {\r\n        return this.querySelector('gs-header');\r\n    }\r\n\r\n    /**\r\n     * Selected records\r\n     */\r\n    get selected() {\r\n        return this.#selected;\r\n    }\r\n\r\n    /**\r\n     * If multi row select is enabled\r\n     */\r\n    get multiselect() {\r\n        return this.#multiselect;\r\n    }\r\n\r\n    set multiselect(val = false) {\r\n        const me = this;\r\n        me.#multiselect = GSUtil.asBool(val);\r\n    }\r\n\r\n    /**\r\n     * If row select is enabled\r\n     */\r\n    get select() {\r\n        return this.#select;\r\n    }\r\n\r\n    set select(val = true) {\r\n        const me = this;\r\n        me.#select = GSUtil.asBool(val);\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', this.#tableCSS);\r\n    }\r\n\r\n    get cssSelect() {\r\n        return GSAttr.get(this, 'css-select', this.#selectCSS);\r\n    }\r\n\r\n    get cssHeader() {\r\n        return GSAttr.get(this, 'css-header', this.#headerCSS);\r\n    }\r\n\r\n    get cssRow() {\r\n        return GSAttr.get(this, 'css-row', this.#rowCSS);\r\n    }\r\n\r\n    get cssCell() {\r\n        return GSAttr.get(this, 'css-cell', this.#cellCSS);\r\n    }\r\n\r\n    get cssFilter() {\r\n        return GSAttr.get(this, 'css-filter', '');\r\n    }\r\n\r\n    get cssColumns() {\r\n        return GSAttr.get(this, 'css-columns', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    set cssSelect(val = '') {\r\n        GSAttr.set(this, 'css-select', val);\r\n    }\r\n\r\n    set cssHeader(val = '') {\r\n        GSAttr.set(this, 'css-header', val);\r\n    }\r\n\r\n    set cssFilter(val = '') {\r\n        GSAttr.set(this, 'css-filter', val);\r\n    }\r\n\r\n    set cssColumns(val = '') {\r\n        GSAttr.set(this, 'css-columns', val);\r\n    }\r\n\r\n    set cssRow(val = '') {\r\n        GSAttr.set(this, 'css-row', val);\r\n    }\r\n\r\n    set cssCell(val = '') {\r\n        GSAttr.set(this, 'css-cell', val);\r\n    }\r\n\r\n    get noDataText() {\r\n        return GSAttr.get(this, 'no-data', 'No Data');\r\n    }\r\n\r\n    set noDataText(val) {\r\n        return GSAttr.set(this, 'no-data', val);\r\n    }\r\n\r\n    #setCSS(qry, val) {\r\n        if (!qry) return;\r\n        this.findAll(qry, true).forEach(el => {\r\n            GSAttr.set(el, 'class', val);\r\n        });\r\n    }\r\n\r\n    #onData(e) {\r\n        e.preventDefault();\r\n        const me = this;\r\n        if (!me.self) return;\r\n        me.#processData(e.detail);\r\n        setTimeout(() => GSEvent.send(me.self, 'data', e.detail), 10);\r\n    }\r\n\r\n    #processData(data) {\r\n        const me = this;\r\n        me.#data = data;\r\n        me.#selected = [];\r\n        if (!me.#hasHeaders) {\r\n            me.#prepareHeaders();\r\n            me.#renderTable();\r\n            return requestAnimationFrame(() => me.#processData(data));\r\n        }\r\n\r\n        requestAnimationFrame(() => me.#renderPage());\r\n\r\n    }\r\n\r\n    get #hasHeaders() {\r\n        return this.#headers.length > 0;\r\n    }\r\n\r\n    #prepareHeaders() {\r\n        const me = this;\r\n        const hdr = me.header;\r\n        me.#headers = hdr ? hdr.toJSON() : [];\r\n        if (me.#headers.length > 0) return;\r\n        if (me.#data.length === 0) return;\r\n        me.#recToHeader(me.#data[0]);\r\n    }\r\n\r\n    #recToHeader(rec) {\r\n        const me = this;\r\n        const defs = [];\r\n        defs.push('<gs-header>');\r\n        if (Array.isArray(rec)) {\r\n            defs.push('<gs-column name=\"#\"></gs-column>');\r\n            rec.forEach((v, i) => {\r\n                const html = `<gs-column name=\"Col_${i + 1}\" index=${i}></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        } else {\r\n            Object.keys(rec).forEach(v => {\r\n                const html = `<gs-column name=\"${v}\"></gs-column>`;\r\n                defs.push(html);\r\n            });\r\n        }\r\n        defs.push('</gs-header>');\r\n        const dom = GSDOM.parse(defs.join(''), true);\r\n        me.appendChild(dom);\r\n    }\r\n\r\n    #renderPage() {\r\n        const me = this;\r\n        me.self.querySelector('tbody').render(me.#headers, me.#data, me.store.offset);\r\n        const ctx = me.contextMenu;\r\n        if (ctx) {\r\n            ctx.close();\r\n            ctx.reattach();\r\n        }\r\n    }\r\n\r\n    #renderTable() {\r\n        const me = this;\r\n        if (!me.#hasHeaders) return;\r\n        const html = me.querySelector('gs-header').render();\r\n        const src = `<table class=\"${me.css}\">${html}<tbody is=\"gs-tbody\"></tbody></table><slot name=\"extra\"></slot>`;\r\n        GSDOM.setHTML(me.self, src);\r\n    }\r\n\r\n    /**\r\n     * Just update (override) event data, and let it bubble up\r\n     * @param {*} e \r\n     */\r\n    #onContextMenu(e) {\r\n        const me = this;\r\n        const o = e.detail;\r\n        o.action = o.data.action;\r\n        // clone to prevent removing data by client code\r\n        o.data = [...me.#selected];\r\n        o.type = 'table';\r\n        //const opt = { action: data.data.action, data: me.#selected };\r\n        //GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    #onRowSelect(data) {\r\n        const me = this;\r\n        me.#selected = [];\r\n        data.data?.forEach(i => {\r\n            const rec = me.#data[i];\r\n            if (rec) me.#selected.push(rec);\r\n        });\r\n        if (me.contextMenu) me.contextMenu.disabled = data.data?.length === 0;\r\n        GSEvent.send(me, 'selected', { data : me.#selected, evt : data.evt});\r\n    }\r\n\r\n    #onColumnSort(data) {\r\n        const me = this;\r\n        me.store.sort = data || [];\r\n        GSEvent.send(me, 'sort', me.store.sort);\r\n    }\r\n\r\n    #onColumnFilter(data) {\r\n        const me = this;\r\n        me.store.filter = data || [];\r\n        GSEvent.send(me, 'filter', me.store.filter);\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableSort class\r\n * @module components/table/GSTableSort\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSData from \"../../base/GSData.mjs\";\r\n\r\n/**\r\n * table header sorting coluns\r\n * <thead><tr is=\"gs-tablesort\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableSort extends HTMLTableRowElement {\r\n\r\n    #sc = 0;\r\n\r\n    static {\r\n        customElements.define('gs-tablesort', GSTableSort, { extends: 'tr' });\r\n        Object.seal(GSTableSort);\r\n    }\r\n\r\n    connectedCallback() {\r\n        const me = this;\r\n        if (!me.id) me.setAttribute('id', GSID.id);\r\n        GSEvent.attach(me, me, 'click', e => me.#onClick(e));\r\n        GSComponents.store(me);\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const el = e.composedPath().shift();\r\n        if (el.tagName !== 'TH') return;\r\n        if (!el.classList.contains('sorting')) return;\r\n        requestAnimationFrame(() => me.#onColumnSort(el, e.shiftKey));\r\n    }\r\n\r\n    #onColumnSort(el, append = false) {\r\n\r\n        const me = this;\r\n\r\n        let ord = GSAttr.getAsNum(el, 'order', -1);\r\n        ord = ord > 0 ? -1 : 1;\r\n\r\n        if (append) {\r\n            me.#sc = GSAttr.getAsNum(el, 'idx', me.#sc + 1);\r\n            GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n        } else {\r\n            me.#sc = 1;\r\n            GSDOM.queryAll(me, 'thead th').forEach(el => {\r\n                GSAttr.set(el, 'idx', null);\r\n                GSAttr.set(el, 'order', null);\r\n                GSDOM.toggleClass(el, false, 'sorting_desc sorting_asc table-active');\r\n            });\r\n        }\r\n\r\n        el.classList.add(ord > 0 ? 'sorting_asc' : 'sorting_desc');\r\n        GSAttr.set(el, 'idx', me.#sc);\r\n        GSAttr.set(el, 'order', ord);\r\n        GSDOM.toggleClass(el, true, 'table-active');\r\n\r\n\r\n        let sort = [];\r\n        GSDOM.queryAll(me, '.sorting_asc, .sorting_desc').forEach(el => {\r\n            const ord = GSAttr.getAsNum(el, 'order', 1);\r\n            const idx = GSAttr.getAsNum(el, 'idx', 1);\r\n            const name = GSAttr.get(el, 'name', el.innerText);\r\n            const cfg = { ord: ord, col: el.cellIndex, name: name, idx: idx };\r\n            sort.push(cfg);\r\n        });\r\n        sort = GSData.sortData([{ name: 'idx', ord: 1 }], sort);\r\n\r\n        GSEvent.send(me, 'sort', sort, true);\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSTableFilter class\r\n * @module components/table/GSTableFilter\r\n */\r\n\r\nimport GSID from \"../../base/GSID.mjs\";\r\nimport GSEvent from \"../../base/GSEvent.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\n\r\n/**\r\n * Table header filter with filtering input fields foer every column\r\n * <thead><tr is=\"gs-tablefilter\"></tr></thead>\r\n * @class\r\n * @extends {HTMLTableRowElement}\r\n */\r\nexport default class GSTableFilter extends HTMLTableRowElement {\r\n\r\n    #auto = false;\r\n\r\n    static {\r\n        customElements.define('gs-tablefilter', GSTableFilter, { extends: 'tr' });\r\n        Object.seal(GSTableFilter);\r\n    }\r\n\r\n    /*\r\n     * Called when element injected to parent DOM node\r\n     */\r\n    connectedCallback() {\r\n        const me = this;\r\n        me.id = me.id || GSID.id;\r\n        me.#auto = GSDOM.query(me, 'input[auto=\"true\"],select[auto=\"true\"]') != null;\r\n        me.#attachChangeListener();\r\n        me.#attachDataListener();\r\n        GSComponents.store(me);\r\n        requestAnimationFrame(() => me.#onChange());\r\n    }\r\n\r\n    /*\r\n     * Called when element removed from parent DOM node\r\n     */\r\n    disconnectedCallback() {\r\n        const me = this;\r\n        GSComponents.remove(me);\r\n        GSEvent.deattachListeners(me);\r\n    }\r\n\r\n    get root() {\r\n        return GSDOM.getRoot(this);\r\n    }\r\n\r\n    #attachChangeListener() {\r\n        const me = this;\r\n        GSDOM.queryAll(me, 'input, select')\r\n            .forEach(el => GSEvent.attach(me, el, 'change', e => me.#onChange(e.target)));\r\n    }\r\n\r\n    #attachDataListener() {\r\n        const me = this;\r\n        if (me.#auto) GSEvent.attach(me, me.root, 'data', e => me.#onData(e.detail), false, true);\r\n    }\r\n\r\n    #onChange(el) {\r\n        const me = this;\r\n        const filter = [];\r\n        GSDOM.queryAll(me, 'input, select').forEach(el => {\r\n            const value = me.#getValue(el);\r\n            if (value) filter.push({ name: el.name, value: value });\r\n        });\r\n        GSEvent.send(me, 'filter', filter, true);\r\n    }\r\n\r\n    #onData(data) {\r\n\r\n    }\r\n\r\n    #getValue(el) {\r\n        const me = this;\r\n        const listID = GSAttr.get(el, 'list');\r\n        const list = me.root.getElementById(listID);\r\n        const opt = list?.querySelector(`option[value=\"${el.value}\"]`);\r\n        return opt?.dataset?.value || el.value;\r\n    }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSPagination class\r\n * @module components/table/GSPagination\r\n */\r\n\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSComponents from \"../../base/GSComponents.mjs\";\r\n\r\n/**\r\n * Table pagination\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSPagination extends GSElement {\r\n\r\n    static CSS_ITEM = 'me-1';\r\n\r\n    static {\r\n        customElements.define('gs-pager', GSPagination);\r\n        Object.seal(GSPagination);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    async getTemplate(val = '') {\r\n        const me = this;\r\n\r\n        const store = me.store;\r\n        const firstlast = me.firstlast;\r\n        const nextprev = me.nextprev;\r\n        const pages = this.pages;\r\n\r\n        const html = [];\r\n        html.push('<nav><ul class=\"pagination justify-content-center m-3\">');\r\n\r\n        if (firstlast) html.push(me.#getHtml(me.first, 'first', 'First page'));\r\n        if (nextprev) html.push(me.#getHtml(me.previous, 'previous', 'Previous page'));\r\n\r\n        let i = 1;\r\n        while (i <= pages) {\r\n            html.push(me.#getHtml(i, '', '', i == store.page));\r\n            i++;\r\n        }\r\n\r\n        if (nextprev) html.push(me.#getHtml(me.next, 'next', 'Next page'));\r\n        if (firstlast) html.push(me.#getHtml(me.last, 'last', 'Last page'));\r\n\r\n        html.push('</ul></nav>');\r\n        return html.join('');\r\n    }\r\n\r\n    #getHtml(text = '', name = '', title = '', active = false) {\r\n        return `<li class=\"page-item ${GSPagination.CSS_ITEM} ${active ? 'active' : ''}\"><a class=\"page-link\" name=\"${name}\" title=\"${title}\" href=\"#\" >${text}</a></li>`;\r\n    }\r\n\r\n    #onStore(e) {\r\n        const me = this;\r\n        requestAnimationFrame(() => {\r\n            let page = Math.floor((me.store.page - 1) / me.pages) * me.pages + 1;\r\n            me.queryAll('a[name=\"\"]').forEach(el => {\r\n                el.parentElement.classList.remove('active', 'disabled', 'd-none');\r\n                if (page == me.store.page) el.parentElement.classList.add('active');\r\n                if (page > me.store.pages) el.parentElement.classList.add('disabled', 'd-none');\r\n                el.text = page++;\r\n            });\r\n        });\r\n    }\r\n\r\n    #onClick(e) {\r\n        const me = this;\r\n        const val = e.target.name || e.target.text;\r\n        switch (val) {\r\n            case 'first':\r\n                return me.store.firstPage();\r\n            case 'last':\r\n                return me.store.lastPage();\r\n            case 'next':\r\n                return me.store.nextPage();\r\n            case 'previous':\r\n                return me.store.prevPage();\r\n        }\r\n\r\n        me.store.page = val || me.store.page;\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        me.attachEvent(me.store, 'data', me.#onStore.bind(me));\r\n        me.queryAll('a').forEach(el => me.attachEvent(el, 'click', me.#onClick.bind(me)));\r\n    }\r\n\r\n    get table() {\r\n        return GSDOM.closest(this, 'GS-TABLE');\r\n    }\r\n\r\n    /**\r\n     * Either define store atrtibute with store id\r\n     * Or use automatic search for closest table.\r\n     * This allows to put pagination on non-default position\r\n     */\r\n    get store() {\r\n        const me = this;\r\n        const tgt = GSAttr.get(me, 'store');\r\n        return tgt ? GSComponents.get(tgt) : me.table.store;\r\n    }\r\n\r\n    get nextprev() {\r\n        return GSAttr.getAsBool(this, 'nextprev', true);\r\n    }\r\n\r\n    get firstlast() {\r\n        return GSAttr.getAsBool(this, 'firstlast', true);\r\n    }\r\n\r\n    get pages() {\r\n        return GSAttr.getAsNum(this, 'pages', 5);\r\n    }\r\n\r\n    get first() {\r\n        return GSAttr.get(this, 'first', '&laquo;');\r\n    }\r\n\r\n    get last() {\r\n        return GSAttr.get(this, 'last', '&raquo;');\r\n    }\r\n\r\n    get next() {\r\n        return GSAttr.get(this, 'next', '&rsaquo;');\r\n    }\r\n\r\n    get previous() {\r\n        return GSAttr.get(this, 'previous', '&lsaquo;');\r\n    }\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSNotification class\r\n * @module components/toast/GSNotification\r\n */\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Notification container responsible to show toasts\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSNotification extends GSElement {\r\n\r\n  static TOP_START = \"position-fixed top-0 start-0\";\r\n  static TOP_CENTER = \"position-fixed top-0 start-50 translate-middle-x\";\r\n  static TOP_END = \"position-fixed top-0 end-0\";\r\n  static MIDDLE_START = \"position-fixed top-50 start-0 translate-middle-y\";\r\n  static MIDDLE_CENTER = \"position-fixed top-50 start-50 translate-middle\";\r\n  static MIDDLE_END = \"position-fixed top-50 end-0 translate-middle-y\";\r\n  static BOTTOM_START = \"position-fixed bottom-0 start-0\";\r\n  static BOTTOM_CENTER = \"position-fixed bottom-0 start-50 translate-middle-x\";\r\n  static BOTTOM_END = \"position-fixed bottom-0 end-0\";\r\n\r\n  static DEFAULT = GSNotification.BOTTOM_END;\r\n\r\n  #list = new Set();\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['position'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  connectCallback() {\r\n    const me = this;\r\n    super.connectedCallback();\r\n  }\r\n\r\n  attributeCallback(name = '', oldVal = '', newVal = '') {\r\n    const me = this;\r\n\r\n    oldVal = me.#fromPosition(oldVal);\r\n    newVal = me.#fromPosition(newVal);\r\n\r\n    const wrapEl = me.query('div');\r\n    GSDOM.toggleClass(wrapEl, false, oldVal);\r\n    GSDOM.toggleClass(wrapEl, true, newVal);\r\n  }\r\n\r\n  #fromPosition(val) {\r\n    let css = GSNotification[val];\r\n    return GSUtil.isString(css) && css.startsWith('position-') ? css : val;\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    return `<div class=\"toast-container ${me.css} ${me.position}\" style=\"z-index: 10000;\">\r\n    <slot name=\"content\"></slot>\r\n    </div>`;\r\n  }\r\n\r\n  /**\r\n   * Generic css for notifiction container\r\n   */\r\n  get css() {\r\n    return GSAttr.get(this, 'css', 'p-3');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  /**\r\n   * Position where to show notification\r\n   * NOTE: Might interfer with \"css\" attribute\r\n   */\r\n  get position() {\r\n    return GSAttr.get(this, 'position', GSNotification.DEFAULT);\r\n  }\r\n\r\n  set position(val = '') {\r\n    GSAttr.set(this, 'position', val);\r\n  }\r\n\r\n  /**\r\n   * Set browser native notification usage\r\n   */\r\n  get native() {\r\n    return GSAttr.getAsBool(this, 'native', false);\r\n  }\r\n\r\n  set native(val = '') {\r\n    GSAttr.setAsBool(this, 'native', val);\r\n  }\r\n\r\n  info(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-info', closable, timeout);\r\n  }\r\n\r\n  success(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-success', closable, timeout);\r\n  }\r\n\r\n  warn(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-warning', closable, timeout);\r\n  }\r\n\r\n  danger(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-danger', closable, timeout);\r\n  }\r\n\r\n  primary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-primary', closable, timeout);\r\n  }\r\n\r\n  secondary(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-secondary', closable, timeout);\r\n  }\r\n\r\n  dark(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-dark', closable, timeout);\r\n  }\r\n\r\n  light(title = '', message = '', closable = false, timeout = 2) {\r\n    return this.show(title, message, 'text-bg-light', closable, timeout);\r\n  }\r\n\r\n  /**\r\n   * Main function to show notification. \r\n   * It has support for Bootstrap based and web based notifications.\r\n   * \r\n   * @async\r\n   * @param {string} title Notification title\r\n   * @param {string} message Notification message\r\n   * @param {string} css CSS styling (web only)\r\n   * @param {boolean} closable Can user close it (web only)\r\n   * @param {number} timeout Timeout after which to close notification\r\n   * @param {object} options Options for native Notification\r\n   * @returns {Promise<Notification|GSToast>}\r\n   */\r\n  async show(title = '', message = '', css = '', closable = false, timeout = 2, options) {\r\n    const me = this;\r\n    if (me.native) {\r\n      let sts = await GSNotification.requestPermission();\r\n      if (sts) sts = me.#showNative(title, message, timeout, options);\r\n      if (sts) return sts;\r\n    }\r\n    return me.#showWeb(title, message, css, closable, timeout);\r\n  }\r\n\r\n  #showWeb(title = '', message = '', css = '', closable = false, timeout = 2) {\r\n    const tpl = `<gs-toast slot=\"content\" css=\"${css}\"  closable=\"${closable}\" timeout=\"${timeout}\" message=\"${message}\" title=\"${title}\"></gs-toast>`;\r\n    const el = GSDOM.parse(tpl, true);\r\n    this.appendChild(el);\r\n    return el;\r\n  }\r\n\r\n  #showNative(title = '', message = '', timeout = 2, options = {}) {\r\n    const me = this;\r\n    options.body = options.body || message;\r\n    const notification = new Notification(title, options);\r\n    me.#list.add(notification);\r\n    const callback = me.#clearNative.bind({ notification: notification, owner: me });\r\n    notification.addEventListener('close', callback);\r\n    if (timeout > 0) setTimeout(callback, timeout * 1000);\r\n    return notification;\r\n  }\r\n\r\n  #clearNative() {\r\n    const me = this;\r\n    me.notification.close();\r\n    me.owner.#list.delete(me.notification);\r\n  }\r\n\r\n  /**\r\n   * Clear all triggered notifications\r\n   */\r\n  clear() {\r\n    const me = this;\r\n    Array.from(me.querySelectorAll('gs-toast')).forEach(el => el.remove());\r\n    me.#list.forEach(nn => nn.close());\r\n    me.#list.clear();\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is supported\r\n   * @returns {boolean} \r\n   */\r\n  static get isNativeSupported() {\r\n    return \"Notification\" in self;\r\n  }\r\n\r\n  /**\r\n   * Check if native notification is allowed\r\n   * @returns {boolean} \r\n   */\r\n  static get isGranted() {\r\n    return Notification.permission === \"granted\";\r\n  }\r\n\r\n  /**\r\n   * Request useage for browser native notification\r\n   * \r\n   * @async\r\n   * @returns {Promise<boolean>} Return granted status\r\n   */\r\n  static async requestPermission() {\r\n    if (!GSNotification.isNativeSupported) return false;\r\n    if (!GSNotification.isGranted) await Notification.requestPermission();\r\n    return GSNotification.isGranted;\r\n  }\r\n\r\n  static {\r\n    customElements.define('gs-notification', GSNotification);\r\n    Object.seal(GSNotification);\r\n  }\r\n\r\n}  \r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSToast class\r\n * @module components/toast/GSToast\r\n */\r\n\r\n\r\nimport GSAttr from \"../../base/GSAttr.mjs\";\r\nimport GSDOM from \"../../base/GSDOM.mjs\";\r\nimport GSElement from \"../../base/GSElement.mjs\";\r\nimport GSUtil from \"../../base/GSUtil.mjs\";\r\n\r\n/**\r\n * Toast popup with self destroy timeout \r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class GSToast extends GSElement {\r\n\r\n  static {\r\n    customElements.define('gs-toast', GSToast);\r\n    Object.seal(GSToast);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    const attrs = ['placement', 'css'];\r\n    return GSElement.observeAttributes(attrs);\r\n  }\r\n\r\n  attributeCallback(name = '', oldValue = '', newValue = '') {\r\n    const me = this;\r\n    if (name === 'css') {\r\n      const el = me.query('.toast');\r\n      GSDOM.toggleClass(el, false, oldValue);\r\n      GSDOM.toggleClass(el, true, newValue);\r\n    }\r\n\r\n  }\r\n\r\n  async getTemplate(val = '') {\r\n    const me = this;\r\n    const btn = me.closable ? '<button type=\"button\" class=\"btn-close me-2 m-auto\"></button>' : '';\r\n    return `\r\n        <div class=\"mt-1 mb-1 toast fade ${me.visible ? 'show' : ''} ${me.css}\">\r\n          <div class=\"d-flex\">\r\n              <div class=\"toast-body\">\r\n              ${me.message}\r\n              </div>\r\n              ${btn}\r\n          </div>\r\n      </div>    \r\n    `\r\n  }\r\n\r\n  onReady() {\r\n    const me = this;\r\n    const btns = me.queryAll('button');\r\n    Array.from(btns).forEach(btn => me.attachEvent(btn, 'click', me.close.bind(me)));\r\n    super.onReady();\r\n    if (me.visible) me.open();\r\n  }\r\n\r\n  show(title = '', message = '', css = '', visible = true, closable = false, timeout = 2) {\r\n    const me = this;\r\n    me.css = css || me.css;\r\n    me.title = title;\r\n    me.message = message;\r\n    me.timeout = timeout;\r\n    me.closable = closable == true;\r\n    me.visible = visible == true;\r\n    me.open();\r\n  }\r\n\r\n  open() {\r\n    const me = this;\r\n    requestAnimationFrame(async () => {\r\n      GSDOM.toggleClass(this.#toast, true, 'show');\r\n      if (me.timeout <= 0) return;\r\n      await GSUtil.timeout(me.timeout * 1000);\r\n      me.close();\r\n    });\r\n  }\r\n\r\n  close() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  dismiss() {\r\n    this.#dismiss();\r\n  }\r\n\r\n  async #dismiss() {\r\n    GSDOM.toggleClass(this.#toast, false, 'show');\r\n    await GSUtil.timeout(GSDOM.SPEED);\r\n    return this.remove();\r\n  }\r\n\r\n  get #toast() {\r\n    return this.query('.toast');\r\n  }\r\n\r\n  /**\r\n   * Prevent shadow dom\r\n   */\r\n  get isFlat() {\r\n    return true;\r\n  }\r\n\r\n  get title() {\r\n    return GSAttr.get(this, 'title');\r\n  }\r\n\r\n  set title(val = '') {\r\n    GSAttr.set(this, 'title', val);\r\n  }\r\n\r\n  get message() {\r\n    return GSAttr.get(this, 'message');\r\n  }\r\n\r\n  set message(val = '') {\r\n    GSAttr.set(this, 'message', val);\r\n  }\r\n\r\n  get css() {\r\n    return GSAttr.get(this, 'css');\r\n  }\r\n\r\n  set css(val = '') {\r\n    GSAttr.set(this, 'css', val);\r\n  }\r\n\r\n  get timeout() {\r\n    return GSAttr.getAsNum(this, 'timeout', 2);\r\n  }\r\n\r\n  set timeout(val = 2) {\r\n    GSAttr.set(this, 'timeout', val);\r\n  }\r\n\r\n  get closable() {\r\n    return GSAttr.getAsBool(this, 'closable');\r\n  }\r\n\r\n  set closable(val = true) {\r\n    GSAttr.set(this, 'closable', val == true);\r\n  }\r\n\r\n  get visible() {\r\n    return GSAttr.getAsBool(this, 'visible', true);\r\n  }\r\n\r\n  set visible(val = true) {\r\n    GSAttr.set(this, 'visible', val == true);\r\n  }\r\n\r\n}\r\n\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading GSSearch class\r\n * @module GSSearch\r\n */\r\nimport GSAttr from \"../../../modules/base/GSAttr.mjs\";\r\nimport GSElement from \"../../../modules/base/GSElement.mjs\"\r\nimport GSEnvironment from \"../../../modules/base/GSEnvironment.mjs\";\r\nimport GSEvent from \"../../../modules/base/GSEvent.mjs\";\r\n\r\n/**\r\n * Search input box WebComponent which emits searh event to upper tree.\r\n * In this cse for GSTable filtering\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nclass GSSearch extends GSElement {\r\n\r\n    static {\r\n        customElements.define('gs-search', GSSearch);\r\n        Object.seal(GSSearch);\r\n    }\r\n\r\n    async getTemplate() {\r\n        const me = this;\r\n        return `\r\n        <div class=\"input-group ${me.css}\">\r\n            <i class=\"input-group-text ${me.iconCSS}\"></i>\r\n            <input type=\"search\"  incremental=\"true\" class=\"form-control ${me.inputCSS}\" placeholder=\"${me.placeholder}\" name=\"${me.name}\">\r\n        </div>        \r\n        `\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        if (GSEnvironment.isWebkit) {\r\n            me.attachEvent(me.#searchEl, 'search', me.#onSearch.bind(me));\r\n        } else {\r\n            me.attachEvent(me.#searchEl, 'keydown', me.#onSearch.bind(me));\r\n        }\r\n        super.onReady();\r\n    }\r\n\r\n    #onSearch(e) {\r\n        if (!GSEnvironment.isWebkit && e.which != 13) return;\r\n        const me = this;\r\n        GSEvent.prevent(e);\r\n        const opt = { type: 'search', action: 'search', value: me.#searchEl.value };\r\n        GSEvent.send(me, 'action', opt, true, true, true);\r\n    }\r\n\r\n    get #searchEl() {\r\n        return this.query('input');\r\n    }\r\n\r\n    get css() {\r\n        return GSAttr.get(this, 'css', '');\r\n    }\r\n\r\n    set css(val = '') {\r\n        return GSAttr.set(this, 'css', val);\r\n    }\r\n\r\n    get iconCSS() {\r\n        return GSAttr.get(this, 'css-icon', 'bg-white bi bi-search');\r\n    }\r\n\r\n    set iconCSS(val = '') {\r\n        return GSAttr.set(this, 'css-icon', val);\r\n    }\r\n\r\n    get inputCSS() {\r\n        return GSAttr.get(this, 'css-input', 'border-start-0');\r\n    }\r\n\r\n    set inputCSS(val = '') {\r\n        return GSAttr.set(this, 'css-input', val);\r\n    }\r\n\r\n    /**\r\n    * Input box info mesasge\r\n    * @returns {string}\r\n    */\r\n    get placeholder() {\r\n        return GSAttr.get(this, 'placeholder', 'search');\r\n    }\r\n\r\n    set placeholder(val = '') {\r\n        return GSAttr.set(this, 'placeholder', val);\r\n    }\r\n\r\n    /**\r\n     * Input box name\r\n     * @returns {string}\r\n     */\r\n    get name() {\r\n        return GSAttr.get(this, 'name', 'search');\r\n    }\r\n\r\n    set name(val = '') {\r\n        return GSAttr.set(this, 'name', val);\r\n    }\r\n\r\n}\r\n","/*\r\n * Copyright (C) 2015, 2022 Green Screens Ltd.\r\n */\r\n\r\n/**\r\n * A module loading BaseUI class\r\n * @module BaseUI\r\n */\r\nimport GSDOM from \"../../../modules/base/GSDOM.mjs\";\r\nimport GSElement from \"../../../modules/base/GSElement.mjs\";\r\nimport GSFunction from \"../../../modules/base/GSFunction.mjs\";\r\nimport GSUtil from \"../../../modules/base/GSUtil.mjs\";\r\n\r\n/**\r\n * BaseUI handles basic screen data view (used by other UI elements)\r\n * @class\r\n * @extends {GSElement}\r\n */\r\nexport default class BaseViewUI extends GSElement {\r\n\r\n    constructor() {\r\n        super();\r\n        this.className = 'd-flex flex-fill';\r\n    }\r\n\r\n    onReady() {\r\n        const me = this;\r\n        super.onReady();\r\n        me.attachEvent(me, 'action', me.#onAction.bind(me));\r\n        me.attachEvent(me.table, 'filter', e => me.refresh());\r\n        requestAnimationFrame(() => me.refresh());\r\n\r\n    }\r\n\r\n    /**\r\n     * Record key field\r\n     */\r\n    get recID() {\r\n        return 'id';\r\n    }\r\n\r\n    /**\r\n     * Table data filter\r\n     */\r\n    get filter() {\r\n        const flt = this.table?.store.filter || [];\r\n        const obj = {};\r\n        flt.forEach(o => obj[o.name] = o.value);\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * Table data store\r\n     */\r\n    get store() {\r\n        return this.table?.store;\r\n    }\r\n\r\n    get table() {\r\n        return this.query('#table-main');\r\n    }\r\n\r\n    get #form() {\r\n        return GSDOM.query(document.body, '#form-main');\r\n    }\r\n\r\n    /**\r\n     * Record popup\r\n     */\r\n    get modal() {\r\n        return this.query('#modal-main');\r\n    }\r\n\r\n    /**\r\n     * UI Notificator\r\n     */\r\n    get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n     inform(success = false, msg) {\r\n        const me = this;\r\n        if (success) return me.notify.info('Info', msg);\r\n        me.notify.danger('Error', msg);\r\n        return success;\r\n    }   \r\n    \r\n    /**\r\n     * Listener for lower componets \"action\" events\r\n     * wihch might come from table fitlering, table context menut etc.\r\n     * Used to handle context menu options. \r\n     * Action from context menu is mapped to this class function.\r\n     * @param {Event} e \r\n     */\r\n    #onAction(e) {\r\n        const action = e.detail.action;\r\n        if (GSFunction.isFunction(this[action])) this[action](e);\r\n    }\r\n\r\n    /**\r\n     * Export table data\r\n     */\r\n    async export() {\r\n        const me = this;\r\n        const name = me.tagName.toLowerCase();\r\n        const data = me.store.data;\r\n        GSUtil.export([JSON.stringify(data)], `${name}.json`);\r\n    }\r\n\r\n    /**\r\n     * Table record action - clone record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async clone(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data.pop();\r\n        if (!data) return;\r\n\r\n        const rec = Object.assign({}, data);\r\n        rec.name = `${data.name} - ${Date.now()}`;\r\n\r\n        try {\r\n\r\n            const sts = await me.onCreate(rec);\r\n            if (!sts) throw new Error('Record not cloned!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.setData(rec, true);\r\n            me.notify.secondary('', 'Record cloned!');\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            me.notify.danger('', e.message || e.toString())\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - remove record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async remove(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data.pop();\r\n        if (!data) return;\r\n\r\n        try {\r\n\r\n            const sts = await me.onRemove(data);\r\n            if (!sts) throw new Error('Record not removed!');\r\n\r\n            // update locally to refresh ui\r\n            const subset = me.store.data.filter(o => o[me.recID] !== data[me.recID]);\r\n            me.store.setData(subset);\r\n            me.notify.danger('', 'Record removed!');\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            me.notify.danger('', e.message || e.toString())\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Table record action - edit data\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async details(e) {\r\n\r\n        const me = this;\r\n        const data = e.detail.data.pop();\r\n        if (!data) return false;\r\n\r\n        me.#form?.reset();\r\n        GSDOM.fromObject(me.#form, data);\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n\r\n            const sts = await me.onUpdate(result.data);\r\n            if (!sts) throw new Error('Record not updated!');\r\n\r\n            // update locally to refresh ui\r\n            Object.assign(data, result.data);\r\n            me.store.reload();\r\n            me.notify.warn('', 'Record updated!');\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            me.notify.danger('', e.message || e.toString())\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - create record\r\n     * @param {Event} e \r\n     * @returns {Promise}\r\n     */\r\n    async create(e) {\r\n\r\n        const me = this;\r\n\r\n        me.#form?.reset();\r\n        me.modal.open();\r\n        const result = await me.modal.waitEvent('data');\r\n\r\n        try {\r\n\r\n            const sts = await me.onCreate(result.data);\r\n            if (!sts) throw new Error('Record not created!');\r\n\r\n            // update locally to refresh ui\r\n            me.store.data.push(result.data);\r\n            me.store.reload();\r\n            me.notify.primary('', 'Record created!');\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            me.notify.danger('', e.message || e.toString())\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - refresh data\r\n     * @param {Event} e \r\n     */\r\n    async refresh(e) {\r\n        // get data from extension and populate table;\r\n        const me = this;\r\n\r\n        const data = await me.onLoad(e);\r\n\r\n        if (!me.store) return;\r\n\r\n        requestAnimationFrame(() => {\r\n            me.store.clear();\r\n            if (data) {\r\n                me.store.setData(data);\r\n                me.store.firstPage();\r\n            } else {\r\n                // demo data\r\n                me.store.reload();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    /**\r\n     * Toolbar table action - filter records\r\n     * @param {Event} val \r\n     */\r\n    search(e) {\r\n        this.store.filter = e.detail.value;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle new record received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onCreate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle existing record change received from popup form.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onUpdate(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Generic function to be overriden by inherited class\r\n     * Used to handle record removal received from table context menu option - remove.\r\n     * @param {Object} data \r\n     * @returns {boolean}\r\n     * @throws {Error}\r\n     */\r\n    async onRemove(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Called to load view data\r\n     * @returns {Array<Object>}\r\n     * @throws {Error}\r\n     */\r\n    async onLoad(e) {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport GSDOM from '../../../../modules/base/GSDOM.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSConfiguration extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-configuration', GSConfiguration);\r\n        Object.seal(GSConfiguration);\r\n    }\r\n\r\n    get waiter() {\r\n        GSDOM.query(document.body, '#modal-wait');\r\n    }\r\n\r\n    get modalValidation() {\r\n        this.query('#modal-validation');\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/configurations.html');\r\n    }\r\n\r\n    async onLoad(e) {\r\n        // press shift on refresh button to force reload\r\n        const me = this;\r\n        const o = await io.greenscreens.Hosts.list(e?.detail.source?.shiftKey === true);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Hosts.setHost(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Hosts.unsetHost(data);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    resetPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        const modal = GSDOM.query(this, '#printer-reset');\r\n        modal.open(data);\r\n    }\r\n    \r\n    setupPrinter(e) {\r\n        const data = e.detail.data[0];\r\n        const modal = GSDOM.query(this, '#printer-setup');\r\n        modal.open(data);\r\n    }\r\n    \r\n    async validateServer(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const o = await io.greenscreens.Hosts.validate(data);\r\n            data.controller = obj.data.controller;\r\n            if (!o.success) return  me.inform(o.success, o.msg);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n        me.modalValidation.body = `<pre>&{o.msg}</pre>`;\r\n        me.modalValidation.open();\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSConfiguration class\r\n * @module views/GSConfiguration\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\nimport Utils from '../../util.mjs';\r\n\r\nexport default class GSTunnel extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-tunnel', GSTunnel);\r\n        Object.seal(GSTunnel);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/tunnel.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Proxy.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        if (Tn5250.opt.jvm < 16 && data.unix == \"true\") {\r\n            me.inform(false, 'AF_UNIX not available in JVM < 16');\r\n            return;\r\n        }\r\n        const o = await io.greenscreens.Proxy.save(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Proxy.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n    \r\n    async start(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        const o = await io.greenscreens.Proxy.start(data.id);\r\n        me.inform(o.success, o.success ? 'Tunnel started!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async stop(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        const o = await io.greenscreens.Proxy.stop(data.id);\r\n        me.inform(o.success, o.success ? 'Tunnel stopped!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async restart(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        const o = await io.greenscreens.Proxy.restart(data.id);\r\n        me.inform(o.success, o.success ? 'Tunnel restarted!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async download(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        const o = await io.greenscreens.Proxy.download(data.id);        \r\n        if (!o.success) return me.inform(o.success, o.msg);\r\n\r\n        const conf = [\r\n            'auto: true',\r\n            'mode: cloud', \r\n            'cloud: ' + location.origin, \r\n            'token: ' + o.data.code,\r\n            'tls: 1',\r\n            'tlsVerify: true'\r\n            ];\r\n        Utils.download(data.name + '.bin', Utils.fromHex(o.data.msg));\r\n        Utils.download('server.config', conf.join('\\n'));        \r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCustomization class\r\n * @module views/GSCustomization\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSCustomization extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-customization', GSCustomization);\r\n        Object.seal(GSCustomization);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/customizations.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Scripts.getScripts();\r\n        if (!o.success) return  me.inform(o.success, o.msg);\r\n\r\n        me.header.value = o.data.header;\r\n        me.footer.value = o.data.footer;\r\n        me.ui.value = o.data.ui;\r\n    }\r\n\r\n    async save() {\r\n        console.log('==> Save changes');\r\n    }\r\n\r\n    get header() {\r\n        return this.query('#header');\r\n    }\r\n\r\n    get footer() {\r\n        return this.query('#footer');\r\n    }\r\n\r\n    get ui() {\r\n        return this.query('#ui');\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterFido class\r\n * @module views/GSFilterFido\r\n */\r\nimport GSEvent from '../../../../modules/base/GSEvent.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterFido extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterfido', GSFilterFido);\r\n        Object.seal(GSFilterFido);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-fido.html');\r\n    }\r\n\r\n    get filterSwitch() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        me.#updateFilterSwitch();\r\n        GSEvent.attach(me, me.filterSwitch, 'change', me.#onFilterSwitch.bind(me));\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Fido.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #updateFilterSwitch() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Fido.isActive();\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n        me.filterSwitch.val = o.code;\r\n    }\r\n\r\n    async #onFilterSwitch(e) {\r\n        const active = parseInt(e.target.value, 10);\r\n        const o = await io.greenscreens.Fido.activity(active);\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Fido.set(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Fido.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }    \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterIP class\r\n * @module views/GSFilterIP\r\n */\r\nimport GSEvent from '../../../../modules/base/GSEvent.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterIP extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filterip', GSFilterIP);\r\n        Object.seal(GSFilterIP);\r\n    }\r\n\r\n    get filterSwitch() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        me.#updateFilterSwitch();\r\n        GSEvent.attach(me, me.filterSwitch, 'change', me.#onFilterSwitch.bind(me));\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-ip.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Filter.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #updateFilterSwitch() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Filter.isActive();\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n        me.filterSwitch.val = o.code;\r\n    }\r\n\r\n    async #onFilterSwitch(e) {\r\n        const active = parseInt(e.target.value, 10);\r\n        const o = await io.greenscreens.Filter.activity(active);\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Filter.set(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Filter.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n        \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSFilterMobile class\r\n * @module views/GSFilterMobile\r\n */\r\nimport GSEvent from '../../../../modules/base/GSEvent.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSFilterMobile extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-filtermobile', GSFilterMobile);\r\n        Object.seal(GSFilterMobile);\r\n    }\r\n\r\n    get filterSwitch() {\r\n        return this.query('select[name=\"filter\"]');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.modal.large();\r\n        me.#updateFilterSwitch();\r\n        GSEvent.attach(me, me.filterSwitch, 'change', me.#onFilterSwitch.bind(me));\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/filter-mobile.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Mobile.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #updateFilterSwitch() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Mobile.isActive();\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n        me.filterSwitch.val = o.code;\r\n    }\r\n\r\n    async #onFilterSwitch(e) {\r\n        const active = parseInt(e.target.value, 10);\r\n        const o = await io.greenscreens.Mobile.activity(active);\r\n        if (!o.success) me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Mobile.set(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Mobile.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n    \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSApiKeys class\r\n * @module views/GSApiKeys\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSApiKeys extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-apikeys', GSApiKeys);\r\n        Object.seal(GSApiKeys);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-api.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.ApiKeys.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async onCreate(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.ApiKeys.add(data);\r\n        me.inform(o.success, o.success ? 'Data created!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.ApiKeys.update(data);\r\n        me.inform(o.success, o.success ? 'Data updated!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.ApiKeys.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n    \r\n    async toggle(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        data.active = !(data.active == 'true');\r\n        const o = await io.greenscreens.ApiKeys.update(data.id, data);\r\n        me.inform(o.success, o.success ? 'Status changed!' : o.msg);\r\n        if (o.success) me.refresh();    \r\n    }\r\n \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtp class\r\n * @module views/GSOtp\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSOtp extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-otp', GSOtp);\r\n        Object.seal(GSOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.modal.large();\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-otp.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.OAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.toggle(data);\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.OAuth.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n    \r\n    async toggle(data) {\r\n        const me = this;\r\n        data.active = !(data.active == 'true');\r\n        const o = await io.greenscreens.OAuth.update(data.id, data.active);\r\n        me.inform(o.success, o.success ? 'Status changed!' : o.msg);\r\n        if (o.success) me.refresh();    \r\n    }\r\n\r\n       \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSBiometrics class\r\n * @module views/GSBiometrics\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSBiometrics extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-biometrics', GSBiometrics);\r\n        Object.seal(GSBiometrics);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/keys-bio.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.WebAuth.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.WebAuth.remove(data);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n    \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinting class\r\n * @module views/GSPrinting\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSPrinting extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-printing', GSPrinting);\r\n        Object.seal(GSPrinting);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/printing.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Printers.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    #prepare(data) {\r\n        data.uuid = data.uuid.toUpperCase();\r\n        data.host = data.host.toUpperCase();\r\n        data.outq = (data.outq || '').toUpperCase();\r\n        data.library = (data.library || '').toUpperCase();\r\n        data.userName = (data.userName || '').toUpperCase();\r\n        data.spoolName = (data.spoolName || '').toUpperCase();\r\n        return data;\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        data = me.#prepare(data);\r\n        const o = await io.greenscreens.Printers.set(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Printers.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n        \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSScheduler class\r\n * @module views/GSScheduler\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSScheduler extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-scheduler', GSScheduler);\r\n        Object.seal(GSScheduler);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/schedulers.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        filter.type = filter.type == '-1' ? null : parseInt(filter.type) || null;\r\n        filter.status = parseInt(filter.status) || 0;\r\n        const o = await io.greenscreens.Scheduler.list(me.store.page - 1, me.store.limit, filter.type, filter.status);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n        \r\n    async #set(data, msg) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Scheduler.save(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Scheduler.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async run(e) {\r\n        const data = e.detail.data[0];\r\n        const me = this;\r\n        const o = await io.greenscreens.Scheduler.runNow(data.id);\r\n        me.inform(o.success, o.success ? 'Task started!' : o.msg);\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSUsers class\r\n * @module views/GSUsers\r\n */\r\nimport GSDOM from '../../../../modules/base/GSDOM.mjs';\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSUsers extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-users', GSUsers);\r\n        Object.seal(GSUsers);\r\n    }\r\n\r\n    get waiter() {\r\n        GSDOM.query(document.body, '#modal-wait');\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/users.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Users.list(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    #prepare(data) {\r\n        data.confid = parseInt(data.confid || 0);\r\n        data.devtype = parseInt(data.devtype || 0);\r\n        data.driver = parseInt(data.driver || 0);\r\n        data.drawer1 = parseInt(data.drawer1 || -1);\r\n        data.drawer2 = parseInt(data.drawer2 || -1);\r\n        data.enhanced = parseInt(data.enhanced || 0);\r\n        data.uuid = (data.uuid || '').toUpperCase();\r\n        data.host = (data.host || '').toUpperCase();\r\n        data.user = (data.user || '').toUpperCase();\r\n        data.display = (data.display || '').toUpperCase();\r\n        data.outq = (data.outq || '').toUpperCase();\r\n        data.program = (data.program || '').toUpperCase();\r\n        data.printer = (data.printer || 'Default');    \r\n        return data;\r\n    }\r\n\r\n    async #set(data, msg) {\r\n        const me = this;\r\n        data = me.#prepare(data);\r\n        const o = await io.greenscreens.Users.save(data);\r\n        me.inform(o.success, o.success ? msg : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async onCreate(data) {\r\n        return this.#set(data, 'Data created!');\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        return this.#set(data, 'Data updated!');\r\n    }\r\n\r\n    async onRemove(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Users.remove(data.id);\r\n        me.inform(o.success, o.success ? 'Data removed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async resync() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Users.commit();\r\n        me.inform(o.success, o.success ? 'Data resync started!' : o.msg);\r\n    }\r\n\r\n    async commit() {\r\n        const me = this;\r\n        me.waiter.open();\r\n        try {\r\n            const o  = await io.greenscreens.Users.commit();\r\n            me.inform(o.success, o.success ? 'Data commited to server!' : o.msg);\r\n        } finally {\r\n            me.waiter.close();\r\n        }\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-services', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/services.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Tweaks.list();\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async onUpdate(data) {\r\n        const me = this;\r\n        me.modal.convert(data);\r\n        const o = await io.greenscreens.Tweaks.set(data.module, data.property, data.value);\r\n        if (!o.success) return me.inform(o.success, o.msg);\r\n        me.refresh();\r\n    }\r\n\r\n    async details(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        me.modal.updateValue(data.value);\r\n        return super.details(e);\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWorkstations class\r\n * @module views/GSWorkstations\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWorkstations extends BaseViewUI {\r\n\r\n    #terminals = [];\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-workstations', GSWorkstations);\r\n        Object.seal(GSWorkstations);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/workstations.html');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.table.on('selected', me.#onSelected.bind(me));\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Manage.listSessions(me.store.page - 1, me.store.limit, filter);\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async messageByFilter(e) {\r\n        const me = this;\r\n        const msg = prompt('Enter message to send');\r\n        const isMsg = msg?.trim().length > 0;\r\n        if (!isMsg) return;\r\n        const data = me.filter;\r\n        data.message = msg;\r\n        const o = io.greenscreens.Manage.sendMessage(data);\r\n        me.inform(o.success, o.success ? 'Message sent' : ` Error sending message: \"${o.msg}\"`);\r\n    }\r\n\r\n    async killByFilter(e) {\r\n        const me = this;\r\n        const filter = me.filter;\r\n        const o = await io.greenscreens.Manage.killSessions(filter);\r\n        me.inform(o.success, o.success ? 'Devices killed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n        return true;\r\n    }\r\n\r\n    async message(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const msg = prompt('Enter message to send');\r\n        const isMsg = msg?.trim().length > 0;\r\n        if (!isMsg) return;\r\n        data.message = msg;\r\n        const o = io.greenscreens.Manage.sendMessage(data.sessionID, data.deviceID, msg);\r\n        me.inform(o.success, o.success ? 'Message sent' : ` Error sending message: \"${o.msg}\"`);\r\n    }\r\n\r\n    async kill(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = await io.greenscreens.Manage.killDevice(data);\r\n        me.inform(o.success, o.success ? 'Device killed!' : o.msg);\r\n        if (o.success) me.refresh();\r\n    }\r\n\r\n    async logging(e) {\r\n        const me = this;\r\n        const data = e.detail.data[0];\r\n        const o = await io.greenscreens.Manage.loging(data);\r\n        if (!o.success) return me.inform(o.success, o.msg);\r\n\r\n        if (o.msg === 'false') {\r\n            const url = location.origin + '/services/logs?id=' + o.code;\r\n            globalThis.open(url);\r\n        }\r\n    }\r\n\r\n    #onSelected(e) {\r\n        if (!e.detail.evt?.shiftKey) return;\r\n        const data = e.detail.data[0];\r\n        this.onScreen(data);\r\n    }\r\n\r\n    onScreen(data) {\r\n\r\n        const me = this;\r\n\r\n        let win = me.#terminals[data?.deviceID];\r\n        if (win && !win.closed) return;\r\n\r\n        win = globalThis.open(location.origin + '/terminal/?d=0&k=0', '', 'target=blank,width=800,height=600,scrollbasrs=no,toolbar=no,titlebar=yes');\r\n        win.onclose = () => delete me.terminal[data.deviceID];\r\n        win.focus();\r\n\r\n        const id = setInterval(() => {\r\n            if (!win.Tn5250) return;\r\n            me.#terminals[data.deviceID] = win;\r\n            win.document.title = 'Terminal - ' + data.uuid + ' - ' + data.host + ' - ' + data.display;\r\n            clearInterval(id);\r\n\r\n            win.Tn5250.Keyboard.listen('command', (e, cfg, code, name) =>  {\r\n                if (name === 'PF5') me.updateScreen(win, data);\r\n            });\r\n            me.updateScreen(win, data);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    async updateScreen(win, data) {\r\n        const o = io.greenscreens.Manage.getScreen(data.sessionID, data.deviceID);\r\n        if (o.success) win.Tn5250.Application.test(win.Tn5250.Binary.fromHex(o.msg));\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSWebmodules class\r\n * @module views/GSWebmodules\r\n */\r\nimport BaseViewUI from '../BaseViewUI.mjs';\r\n\r\nexport default class GSWebmodules extends BaseViewUI {\r\n\r\n    static {\r\n        customElements.define('gs-admin-view-webmodules', GSWebmodules);\r\n        Object.seal(GSWebmodules);\r\n    }\r\n\r\n    async getTemplate() {\r\n        return super.getTemplate('//views/modules.html');\r\n    }\r\n\r\n    async onLoad() {\r\n        const me = this;\r\n        const o = await io.greenscreens.WebModules.list();\r\n        return o.success ? o.data : me.inform(o.success, o.msg);\r\n    }\r\n\r\n    async start(e) {\r\n        const data = e.detail.data[0];\r\n        const o = await io.greenscreens.WebModules.start(data.name);\r\n        this.inform(o.success, o.success ? 'Module started!' : o.msg);\r\n    }\r\n\r\n    async stop(e) {\r\n        const data = e.detail.data[0];\r\n        const o = await io.greenscreens.WebModules.stop(data.name);\r\n        this.inform(o.success, o.success ? 'Module stopped!' : o.msg);\r\n    }\r\n\r\n    async restart(e) {\r\n        const data = e.detail.data[0];\r\n        const o = await io.greenscreens.WebModules.restart(data.name);\r\n        this.inform(o.success, o.success ? 'Module restarted!' : o.msg);\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSAttr from '../../../modules/base/GSAttr.mjs';\r\nimport GSDOM from '../../../modules/base/GSDOM.mjs';\r\nimport GSEvent from '../../../modules/base/GSEvent.mjs';\r\nimport GSLoader from '../../../modules/base/GSLoader.mjs';\r\nimport GSModal from '../../../modules/components/GSModal.mjs';\r\n\r\nexport default class GSDialog extends GSModal {\r\n\r\n    constructor() {\r\n        super();\r\n        const me = this;\r\n        me.cssHeader = 'p-3 dialog-title';\r\n        me.cssTitle = 'fs-5 fw-bold';\r\n        me.cssBody = 'p-0';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return '';\r\n    }\r\n\r\n    get autoOpen() {\r\n        return GSAttr.getAsBool(this, 'autoopen', true);\r\n    }\r\n\r\n    async onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.on('data', me.#onData.bind(me));\r\n        me.on('error', me.#onError.bind(me));\r\n\r\n        const tpl = await GSLoader.getTemplate(me.dialogTemplate);\r\n        requestAnimationFrame(() => {\r\n            GSDOM.setHTML(me, tpl);\r\n            me.title = me.dialogTitle;\r\n            if(me.autoOpen) me.open();\r\n        });\r\n    }\r\n\r\n    get waiter() {\r\n        GSDOM.query(document.body, '#modal-wait');\r\n    }\r\n    \r\n    /**\r\n     * UI Notificator\r\n     */\r\n     get notify() {\r\n        return GSComponents.get('notification');\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to load data into dialog forms\r\n     * @returns {*}\r\n     */\r\n     async loadData() {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to process confirmed dialog form\r\n     * @param {*} data \r\n     */\r\n    async onConfirm(data) {\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Used by inherited dialogs to show notification on remote data fetch\r\n     * \r\n     * @param {boolean} success Status message info/danger\r\n     * @param {string} msg Message t oshow\r\n     * @returns {boolean}\r\n     */\r\n    inform(success = false, msg) {\r\n        const me = this;\r\n        if (success) return me.notify.info('Info', msg);\r\n        me.notify.danger('Error', msg);\r\n        return success;\r\n    }    \r\n\r\n    #onError(e) {\r\n        this.notify.danger('Error', 'Some fields are invalid!');\r\n    }\r\n\r\n    async open() {\r\n        const me = this;\r\n        const data = await me.loadData();\r\n        if (data === false) return;\r\n        super.open();\r\n        setTimeout(() => me.#update(data), 50);\r\n    }\r\n\r\n    #update(data) {\r\n        GSDOM.queryAll(this, 'form').forEach(form => GSDOM.fromObject(form, data))\r\n    }\r\n\r\n    async #onData(e) {\r\n        GSEvent.prevent(e);\r\n        const me = this;\r\n        try {\r\n            const sts = await me.onConfirm(e.detail.data);\r\n            if (sts) me.close();\r\n        } catch(e) {\r\n            console.log(e);\r\n            me.notify.danger('Error', e.message || 'Error handling dialog data!');\r\n        }\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSAbout class\r\n * @module dialogs/GSAbout\r\n */\r\nimport GSModal from '../../../modules/components/GSModal.mjs';\r\n\r\nexport default class GSAbout extends GSModal {\r\n\r\n    static #version = '6.0.0.';\r\n    static #build = '15.09.2022. 15:00:00';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-about', GSAbout);\r\n        Object.seal(GSAbout);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.align = 'center';\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.confirm(undefined, me.#html);\r\n    }\r\n\r\n    get #html() {\r\n        return `\r\n        <div slot=\"body\" class=\"text-center\">\r\n            <div>Version : <span>${GSAbout.#version}</span></div>\r\n            <div>Build : <span>${GSAbout.#build}</span></div>\r\n        </div>\r\n        `;\r\n    }\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertBlocked class\r\n * @module dialogs/GSCertBlocked\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSCertBlocked extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certblocked', GSCertBlocked);\r\n        Object.seal(GSCertBlocked);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-blocked.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Blocked Certificates';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getBlocked();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        return { list : o.msg};\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.setBlocked(data.list);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }    \r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertClient class\r\n * @module dialogs/GSCertClient\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\nimport Utils from '../util.mjs';\r\n\r\nexport default class GSCertClient extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certclient', GSCertClient);\r\n        Object.seal(GSCertClient);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-client.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Generate Client Certificates';\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.generateClient(data);\r\n        me.inform(o.success, o.success ? 'Certificate saved!' : o.msg);\r\n\r\n        if (o.success) {\r\n            const arr = Utils.fromHex(o.msg);\r\n            const raw = new Uint8Array(arr);\r\n            Utils.download(o.code, raw);\t \r\n        }\r\n\r\n        return o.success;\r\n    }    \r\n  \r\n}\r\n\r\n","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertImport class\r\n * @module dialogs/GSCertImport\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSCertImport extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certimport', GSCertImport);\r\n        Object.seal(GSCertImport);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.large();\r\n\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-import.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Import Certificates';\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.setFromPEM(data.rootCAPub, data.rootCAPriv, \r\n            data.serverPub, data.serverPriv, \r\n            data.rootPass, data.serverPass);\r\n\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }    \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSCertOpt class\r\n * @module dialogs/GSCertOpt\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSCertOpt extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-certopt', GSCertOpt);\r\n        Object.seal(GSCertOpt);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/certificates-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Certificate Options';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.loadConfig();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n\r\n        o.data.alternativeNames = (o.data.alternativeNames || '');\r\n        \r\n        if (!o.data.commonNameServer) {\r\n             o.data.commonNameServer = location.hostname;\r\n        }\r\n        \r\n        if (o.data.alternativeNames.indexOf(location.hostname) < 0) {\r\n            o.data.alternativeNames = o.data.alternativeNames +'\\n'+ location.hostname;\r\n        }            \r\n\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Certificate.saveConfig(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }     \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginAdmin class\r\n * @module dialogs/GSLoginAdmin\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSLoginAdmin extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-loginadm', GSLoginAdmin);\r\n        Object.seal(GSLoginAdmin);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-admin.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin Login';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getConfig();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.newAuth(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }    \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSLoginDefaults class\r\n * @module dialogs/GSLoginDefaults\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSLoginDefaults extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-logindefs', GSLoginDefaults);\r\n        Object.seal(GSLoginDefaults);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/login-defaults.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Login Defaults';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getDefaults();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.setDefaults(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }     \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSOtpOptions class\r\n * @module dialogs/GSOtpOptions\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSOtpOptions extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpopt', GSOtpOptions);\r\n        Object.seal(GSOtpOptions);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/otp-options.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'OTP Options';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getOtp();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.setOtp(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }   \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSRegisterOtp class\r\n * @module dialogs/GSRegisterOtp\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\nimport Utils from '../util.mjs';\r\nimport GSDOM from '../../../modules/base/GSDOM.mjs';\r\n\r\nexport default class GSRegisterOtp extends GSDialog {\r\n\r\n    static #QR = '/barcode/generator?group=Two%20Dimensional&type=QR&composite=&zoom=4&format=png&eci=26&attGS1=0&attQR1=&attQR2=3&b64=';\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-otpreg', GSRegisterOtp);\r\n        Object.seal(GSRegisterOtp);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        me.cancelable = false;\r\n        me.align = 'center';\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/register-otp.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Admin OTP Access';\r\n    }\r\n\r\n    get #key() {\r\n        return GSDOM.query(this, '#key');\r\n    }\r\n\r\n    get #qrcode() {\r\n        return GSDOM.query(this, '#qrcode');\r\n    }\r\n\r\n    get #qlink() {\r\n        return GSDOM.query(this, '#qlink');\r\n    }\r\n\r\n    get #scratch() {\r\n        return GSDOM.query(this, '#scratchcodes');\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n\r\n        const o = await io.greenscreens.OAuth.register();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n\r\n        me.#doOTPPopup(o.data);\r\n        me.#doOTPQR(o.data);\r\n        me.#doOTPDownload(o.data);\r\n\r\n        return o.data;\r\n    }\r\n\r\n    #doOTPPopup(data) {\r\n        const me = this;\r\n        me.#key.innerHTML = data.key;\r\n        me.#scratch.innerHTML = data.scratchCodes?.join('&nbsp;&nbsp;');\r\n    }\r\n\r\n    async #doOTPQR(data) {\r\n        const me = this;\r\n        const b64 = btoa(data.url);\r\n        const url = `${location.origin}${GSRegisterOtp.#QR}${b64}`;\r\n        me.#qrcode.src = url;\r\n        me.#qrcode.title = url;\r\n        me.#qlink.href = url;\r\n    }\r\n\r\n    async #doOTPDownload(data) {\r\n        if (!data) return;\r\n        const alt = data.scratchCodes;\r\n        const list = [\r\n            'Green Screens Admin OTP Codes',\r\n            '\\n\\n',\r\n            'User : ',\r\n            data.userName,\r\n            '\\n\\n',\r\n            'Key : ',\r\n            data.key,\r\n            '\\n\\n',\r\n            'Recovery Keys : ',\r\n        ];\r\n        alt.every(function (v) {\r\n            list.push(v);\r\n            list.push(' ');\r\n            return true;\r\n        });\r\n\r\n        Utils.download('Green_Screens_Admin_OTP.txt', list.join(''));\r\n    }\r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSNetwork class\r\n * @module dialogs/GSNetwork\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSNetwork extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-network', GSNetwork);\r\n        Object.seal(GSNetwork);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/network.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Netowrk Options';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getInterface();\r\n        o.data.restart = 0;\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        data.restart = parseInt(data.restart) === 1;\r\n        data.redirect = parseInt(data.redirect) === 1;\r\n        data.nodes = parseInt(data.nodes) === 1;\r\n        const o = await io.greenscreens.Server.setInterface(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }     \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSSystem class\r\n * @module dialogs/GSSystem\r\n */\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSSystem extends GSDialog {\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-system', GSSystem);\r\n        Object.seal(GSSystem);\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        this.large();\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/system.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'System Options';\r\n    }\r\n\r\n    async loadData() {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.getConfig();\r\n        if (!o.success) return me.inform(false, o.msg);\r\n        delete o.data.password;\r\n        return o.data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        const o = await io.greenscreens.Server.setConfig(data);\r\n        me.inform(o.success, o.success ? 'Data saved!' : o.msg);\r\n        return o.success;\r\n    }   \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterReset class\r\n * @module dialogs/GSPrinterReset\r\n */\r\n import GSDialog from './GSDialog.mjs';\r\n\r\n export default class GSPrinterReset extends GSDialog {\r\n\r\n    #data = null;\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-reset', GSPrinterReset);\r\n        Object.seal(GSPrinterReset);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-reset.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Reset';\r\n    }\r\n\r\n    async open(data) {\r\n        const me = this;\r\n        me.#data = {uuid:data.uuid, host : data.name};\r\n        super.open();\r\n    }\r\n\r\n    async loadData() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        data.host = data.name;\r\n        const o = await io.greenscreens.Printer.reset(data);\r\n        me.inform(o.success, o.success ? 'Printer reset complete!' : o.msg.replace(/\\n/g,'<br>'));\r\n        return o.success;\r\n    }     \r\n\r\n}","/*\r\n* Copyright (C) 2015, 2022 Green Screens Ltd.\r\n*/\r\n\r\n/**\r\n * A module loading GSPrinterSetup class\r\n * @module dialogs/GSPrinterSetup\r\n */\r\nimport GSAttr from '../../../modules/base/GSAttr.mjs';\r\nimport GSDOM from '../../../modules/base/GSDOM.mjs';\r\nimport GSDialog from './GSDialog.mjs';\r\n\r\nexport default class GSPrinterSetup extends GSDialog {\r\n\r\n    #data = null;\r\n\r\n    static {\r\n        customElements.define('gs-admin-dialog-printer-setup', GSPrinterSetup);\r\n        Object.seal(GSPrinterSetup);\r\n    }\r\n\r\n    get dialogTemplate() {\r\n        return '//dialogs/printer-setup.html';\r\n    }\r\n\r\n    get dialogTitle() {\r\n        return 'Printer Setup';\r\n    }\r\n\r\n    get hpt() {\r\n        return GSDOM.query(this, '#hostTransform');\r\n    }\r\n\r\n    get hptOptions() {\r\n        return GSDOM.queryAll(this, 'input,select').filter(el => el.dataset.hpt == 'true');\r\n    }\r\n\r\n    onReady() {\r\n        super.onReady();\r\n        const me = this;\r\n        setTimeout(() => {\r\n            me.attachEvent(me.hpt, 'change', me.#onHPT.bind(me));\r\n        }, 1000);\r\n    }\r\n\r\n    async open(data) {\r\n        const me = this;\r\n        me.#data = {uuid:data.uuid, host : data.name};\r\n        super.open();\r\n    }\r\n\r\n    async loadData() {\r\n        return this.#data;\r\n    }\r\n\r\n    async onConfirm(data) {\r\n        const me = this;\r\n        data.host = data.name;\r\n        data.hostTransform = parseInt(data.hostTransform) === 1;\r\n        const o = await io.greenscreens.Printer.setup(data);\r\n        me.inform(o.success, o.success ? 'Printer setup complete!' : o.msg.replace(/\\n/g,'<br>'));\r\n        return o.success;\r\n    }     \r\n\r\n    #onHPT(e) {\r\n        this.hptOptions.forEach(el => GSAttr.toggle(el, 'disabled', e.target.value == '0'));\r\n    }\r\n\r\n}"],"names":["GSLog","static","el","msg","this","forced","type","logging","fn","console","log","nodeName","id","Object","seal","GSUtil","globalThis","GS_FLAT","n","isNaN","parseFloat","isFinite","value","toString","val","isNumber","trim","toLowerCase","str","obj","replace","x","g","word","toUpperCase","slice","split","map","v","i","capitalize","join","Error","url","test","includes","locale","navigator","language","languages","startsWith","Array","isArray","isJsonString","isJsonType","JSON","parse","warn","def","tpl","params","names","keys","vals","values","Function","isStringNonEmpty","o","window","forEach","a","length","isStringEmpty","isString","left","right","lmatch","rmatch","time","Promise","r","setTimeout","bind","callback","requestAnimationFrame","e","data","name","blob","Blob","URL","createObjectURL","document","createElement","href","download","click","timeout","revokeObjectURL","clazz","ext","freeze","expose","HTMLElement","isPrototypeOf","customElements","get","define","extends","isSealed","isFrozen","self","html","single","mime","doc","DOMParser","parseFromString","body","firstElementChild","error","own","src","forceWrap","nodes","head","children","concat","wrap","shift","appendChild","target","link","setAttribute","slot","from","filter","isText","ownClazz","it","inheritance","pel","constructor","tagName","HTMLTemplateElement","SVGElement","Text","Comment","clazzName","getAttribute","indexOf","childNodes","isGSElement","orientation","classList","add","remove","newEl","injectable","isHTMLElement","isSVGElement","isOK","invalid","parentNode","nextElementSibling","insertBefore","placement","isok","insertAdjacentElement","removeChild","node","closest","all","shadow","parentAll","childAll","child","shadowRoot","list","parentElement","host","parent","__proto__","ShadowRoot","HTMLBodyElement","getByID","walk","qry","matches","query","queryAll","res","push","innerHTML","textContent","sts","toggle","apply","contains","owner","root","unwrap","querySelectorAll","checked","styleValue","getComputedStyledMap","computedStyleMap","getComputedStyle","dataset","ignore","checkValidity","toValue","hasOwn","fromValue","location","hash","every","d","setValue","removeAttribute","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","ts","textNodesUnder","t","wholeText","nextSibling","nodeValue","replaceAll","whiteList","asState","isAllowed","toValidationError","fetch","ok","css","text","sheet","CSSStyleSheet","replaceSync","adoptedStyleSheets","GSDOM","GSID","prefx","next","s","l","h","charCodeAt","GSAttr","normalize","attr","asBool","asNum","set","NaN","stringify","attributes","GSFunction","isFunction","isValid","callFunctionAsync","Symbol","toStringTag","isFunctionAsync","callFunctionSync","parseValue","GSLoader","GS_TEMPLATE_URL","origin","pop","seg","TEMPLATE_URL","endsWith","hasKey","NO_CACHE","GS_NO_CACHE","localStorage","setItem","getItem","base","path","isFile","pathname","isExt","uri","searchParams","append","Date","now","level","documentElement","isHTML","loadSafe","normalizeURL","method","load","headers","asjson","ct","json","dft","isJson","func","parseFunction","isFunc","toJson","callFunction","GSEvent","Map","addEventListener","prevent","event","code","ctrlKey","shiftKey","wait","sendSuspended","er","opt","removeEventListener","listen","once","detail","hasFunction","preventDefault","stopPropagation","sender","bubbles","composed","cancelable","CustomEvent","dispatchEvent","send","capture","offline","me","elmap","key","fnkey","defineProperty","gsid","writable","cfg","delete","m","size","clear","elid","fnid","hashCode","GSBase","observedAttributes","sendEvent","connectedCallback","isRenderable","querySelector","render","isPromise","isHead","isAuto","nextID","disconnectedCallback","dispose","attributeChangedCallback","oldValue","newValue","attributeCallback","isMobile","userAgentData","mobile","userAgent","isSchema","schema","protocol","isAsset","isTarget","strVal","brands","brand","regex","RegExp","match","env","undefined","async","getAttributeBool","defer","nonce","crossorigin","fetchpriority","integrity","referrerpolicy","GSCacheStyles","style","cssRules","styles","sort","b","String","localeCompare","getOrSet","injectStyle","Set","els","unlisten","signal","AbortSignal","find","composedPath","flat","result","findAll","getOwner","hasFunc","desc","Reflect","getOwnPropertyDescriptor","listenStyles","GSComponents","GSData","first","second","index","arr","fields","rec","filterRecord","filterSimple","filterComplex","found","flt","toLocaleLowerCase","sortPair","idx","col","v1","v2","compare","ord","order","compareNum","compareString","s1","s2","GSEnvironment","isDesktop","isWebkit","strAgt","isEdge","isDevice","platform","screen","otype","GSDOMObserver","MutationObserver","observe","childList","subtree","super","observer","forRemove","mutations","mutation","addedNodes","removedNodes","rootEL","filters","k","tmp","create","disconnect","GSElement","mergeArrays","template","isFlat","FLAT","getAsBool","isProxy","proxy","environment","os","browser","onready","isValidEnvironment","isValidOS","isValidOrientation","isValidBrowser","online","ready","anchor","updateUI","getStyle","getTemplate","hide","show","evt","on","off","attachEvent","removeEvent","attach","ref","deattachListeners","onReady","pe","attachShadow","mode","useTpl","outerHTML","waitAnimationFrame","inject","SidebarUI","isTunnel","Tn5250","tunnel","Utils","dataToBlob","releaseBlob","win","open","focus","alert","space","padStart","parseInt","isHexString","splitHexString","base64ToBuffer","Uint8Array","base64","binary_string","atob","len","bytes","buffer","HeaderUI","fnName","action","source","string","charAt","notify","io","greenscreens","Session","closeSession","explorer","openInNewTab","confirm","info","Server","restart","success","danger","Certificate","verifySSLClient","regenerate","request","requestPem","privatePem","publicPem","generate","certExport","downloadSavf","downloadConfig","downloadLogs","ShellUI","GSModal","observeAttributes","visible","focusable","normal","close","isOk","forms","form","reportValidity","dlg","large","extra","title","message","closable","waitEvent","prompt","align","footer","setAsBool","buttonOk","buttonCancel","cssButtonOk","cssButtonCancel","cssModal","cssContent","cssHeader","cssTitle","cssBody","cssFooter","FormTunnel","nameField","FormService","valueField","convert","updateValue","valueToType","className","dtype","GSLinkExt","HTMLLinkElement","isCSS","setInterval","sendSuspendedEvent","clearInterval","asText","cssText","styleSheets","sh","ownerNode","rel","GSStyleExt","HTMLStyleElement","GSCSS","isDisabled","disabled","notheme","theme","activeTheme","URLSearchParams","GSScript","getAttributeNames","GSLink","GSCacheTemplate","_store","store","content","cloneNode","cached","getOrCreate","isHTMLTemplate","initTemplate","loadTemplate","isFunctionTemplate","getElementById","loadHTMLTemplate","loadFunctionTemplate","loadURLTemplate","GSTemplate","HTMLHeadElement","waitWhenReady","asArray","GSDataListExt","HTMLDataListElement","entries","GSComboExt","HTMLSelectElement","GSFormExt","HTMLFormElement","registerFilter","reset","valid","buttonOK","buttonReset","GSInputExt","HTMLInputElement","y","Y","M","D","X","S","placeholder","mask","strict","chars","masks","pattern","isMatch","isInList","clean","p","dataGroup","maxLength","substring","vld","lastIndex","GSNavLinkExt","HTMLAnchorElement","cl","hasAttribute","selectable","nav","panel","panelItem","item","tgtID","bsTarget","GSDataAttr","bsDismiss","bsToggle","dismiss","getTarget","comps","gs","c","allComps","allRoot","hidden","pos","neg","objsH","isComp","isBefore","itm","tgt","GSTimeFormat","attributeChanged","oldVal","newVal","stop","start","date","toLocaleTimeString","interval","getAsNum","setAsNum","GSDate","format","DEFAULT_FORMAT","asJSON","REGEX_FORMAT","build","last","getDate","getDay","mondayFirst","days","repeat","year","getFullYear","setFullYear","month","getMonth","setMonth","day","setDate","YY","YYYY","MM","MMM","MMMM","DD","dd","ddd","weekday","dddd","H","getHours","HH","hh","A","getMinutes","mm","getSeconds","ss","SSS","getMilliseconds","Z","ZZ","Q","Math","ceil","kk","W","getTime","setHours","week1","round","WW","floor","short","offset","Intl","Locale","weekInfo","firstDay","toLocaleString","isLowercase","hour","hour12","negMinutes","getTimezoneOffset","minutes","abs","minuteOffset","GSDateFormat","DateTimeFormat","GSYearFormat","current","GSCurrencyFormat","currency","NumberFormat","GSItem","validate","getFlat","getAnchor","acss","cls","items","generateItem","kv","getDismissAttr","getTargetAttr","getToggleAttr","getActionAttr","getInjectAttr","getDismiss","getToggle","getAction","getInject","getSelectable","dismissAttr","targetAttr","toggleAttr","actionAttr","injectAttr","getName","getCSS","active","getActive","getBody","tag","ptyp","toDom","pname","pobj","isObj","isSimple","elIsArray","elIsObj","nameV","valV","typeV","childs","isObject","_nam","_val","_typ","GSAccordion","genericItems","cssItem","cssHead","itemid","autoclose","isVisible","loadData","GSAlert","btn","activeCSS","dismissible","GSButton","disable","select","blur","icon","dissmis","comment","GSCenter","vel","GSContext","menu","childElementCount","reattach","dark","Event","popup","position","top","transform","createMenu","opts","hasSubmenu","sub","rect","getBoundingClientRect","clientX","clientY","overflowH","width","innerWidth","overflowV","height","innerHeight","option","caller","li","ul","offsetTop","targets","isSub","header","GSDropdown","w","ww","wh","menustyle","substyle","ml","mw","sl","sw","getAttrs","rtl","attrs","GSLayout","isVertical","display","flexGrow","fixed","resize","sfx","max","min","vpos","hpos","previousElementSibling","end","GSList","getHref","dataAttrs","dataToString","dataBS","getIcon","icoCSS","GSNav","btns","cssnav","cssactive","contentTpl","hreftgt","GSOffcanvas","backdrop","isHorizontal","transitionProperty","transitionDuration","transitionTimingFunction","transitionFunction","bsPlacement","bsBackdrop","scroll","bsScroll","closeBtn","GSPopper","sx","scrollX","sy","scrollY","bottom","centerX","centerY","element","calcPadding","padding","elementPadding","paddingX","paddingY","elementWidth","clientWidth","elementHeight","clientHeight","elementX","elementY","cs","paddingLeft","paddingRight","paddingTop","paddingBottom","arrow","margin","offh","offw","boundingRect","arect","offH","offW","srcH","srcW","inset","srect","getOffset","isTop","isBottom","isStart","isEnd","trect","erect","arrowPosW","arrowPosH","GSPopover","popover","isHoverTrigger","isFocusTrigger","arrowEl","popupAbsolute","bsContent","trigger","bsTrigger","openable","GSPopup","state","datalist","hPos","vPos","wMax","wMin","hMax","hMin","maxWidth","minWidth","maxHeight","minHeight","HTMLSlotElement","popupFixed","comp","GSProgress","bar","percentage","label","fromTemplateLiteral","trunc","increase","decrease","GSSplitter","full","cursor","dir","dx","GSTab","tabs","panes","tab","CSS_NAV","CSS_PANE","CSS_NAV_WRAP","actievCSS","GSTooltip","tooltip","GSAttachment","file","directory","transfer","files","f","File","fullPath","isImage","isVideo","resolve","entry","reject","reader","createReader","read","readEntries","results","isDirectory","some","webkitGetAsEntry","GSFileBox","cssLabel","cssInput","multiple","cssList","listEl","fileEl","CSS","TITLE","HTMLLabelElement","clearTimeout","dataTransfer","dropEffect","clipboardData","input","types","rgx","kind","getAsFile","attachments","DataTransfer","transferred","traverse","GSStore","reload","table","skip","limit","remote","total","page","pages","getData","nextPage","prevPage","lastPage","firstPage","setData","Accept","records","filterData","sortData","encodeURIComponent","fromLiteral","GSColumn","clssort","sortable","renderFilter","cssFilter","auto","cssField","isCombo","counter","maps","toJSON","mapping","GSHeader","columns","cssColumns","GSTBody","HTMLTableSectionElement","cssCell","cssRow","cssSelect","multiselect","rows","noDataText","innerText","cols","hdr","fmt","Number","Boolean","isAppend","row","isSelected","GSTable","dataID","contextMenu","selected","defs","dom","ctx","GSTableSort","HTMLTableRowElement","cellIndex","GSTableFilter","listID","GSPagination","firstlast","nextprev","previous","CSS_ITEM","GSNotification","BOTTOM_END","connectCallback","wrapEl","DEFAULT","native","primary","secondary","light","options","requestPermission","notification","Notification","nn","isNativeSupported","isGranted","permission","GSToast","GSSearch","iconCSS","inputCSS","which","BaseViewUI","refresh","recID","modal","inform","assign","onCreate","onRemove","subset","onUpdate","onLoad","search","GSConfiguration","waiter","modalValidation","Hosts","setHost","unsetHost","resetPrinter","setupPrinter","controller","GSTunnel","Proxy","jvm","unix","save","conf","fromHex","GSCustomization","Scripts","getScripts","ui","GSFilterFido","filterSwitch","Fido","isActive","activity","GSFilterIP","Filter","GSFilterMobile","Mobile","GSApiKeys","ApiKeys","update","GSOtp","OAuth","GSBiometrics","WebAuth","GSPrinting","Printers","uuid","outq","library","userName","spoolName","GSScheduler","status","Scheduler","runNow","GSUsers","Users","confid","devtype","driver","drawer1","drawer2","enhanced","user","program","printer","commit","GSWorkstations","Tweaks","module","property","details","Manage","listSessions","sendMessage","killSessions","sessionID","deviceID","killDevice","loging","onScreen","closed","onclose","terminal","Keyboard","updateScreen","getScreen","Application","Binary","GSWebmodules","WebModules","GSDialog","dialogTemplate","dialogTitle","autoOpen","onConfirm","GSAbout","GSCertBlocked","getBlocked","setBlocked","GSCertClient","generateClient","raw","GSCertImport","setFromPEM","rootCAPub","rootCAPriv","serverPub","serverPriv","rootPass","serverPass","GSCertOpt","loadConfig","alternativeNames","commonNameServer","hostname","saveConfig","GSLoginAdmin","getConfig","password","newAuth","GSLoginDefaults","getDefaults","setDefaults","GSOtpOptions","getOtp","setOtp","GSRegisterOtp","register","scratchCodes","b64","btoa","alt","GSNetwork","getInterface","redirect","setInterface","GSSystem","setConfig","GSPrinterReset","Printer","GSPrinterSetup","hpt","hptOptions","hostTransform","setup"],"sourceRoot":""}